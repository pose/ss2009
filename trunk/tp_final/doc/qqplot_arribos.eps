%!PS-Adobe-2.0 EPSF-2.0
%%Title: qqplot_arribos.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Sat Dec 12 17:46:30 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (qqplot_arribos.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Santiago,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Dec 12 17:46:30 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
770 448 M
63 0 V
6157 0 R
-63 0 V
stroke
686 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MRshow
0.500 UL
LTb
770 869 M
63 0 V
6157 0 R
-63 0 V
stroke
686 869 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.1)]
] -46.7 MRshow
0.500 UL
LTb
770 1291 M
63 0 V
6157 0 R
-63 0 V
stroke
686 1291 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.2)]
] -46.7 MRshow
0.500 UL
LTb
770 1712 M
63 0 V
6157 0 R
-63 0 V
stroke
686 1712 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.3)]
] -46.7 MRshow
0.500 UL
LTb
770 2134 M
63 0 V
6157 0 R
-63 0 V
stroke
686 2134 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.4)]
] -46.7 MRshow
0.500 UL
LTb
770 2555 M
63 0 V
6157 0 R
-63 0 V
stroke
686 2555 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.5)]
] -46.7 MRshow
0.500 UL
LTb
770 2976 M
63 0 V
6157 0 R
-63 0 V
stroke
686 2976 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.6)]
] -46.7 MRshow
0.500 UL
LTb
770 3398 M
63 0 V
6157 0 R
-63 0 V
stroke
686 3398 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.7)]
] -46.7 MRshow
0.500 UL
LTb
770 3819 M
63 0 V
6157 0 R
-63 0 V
stroke
686 3819 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.8)]
] -46.7 MRshow
0.500 UL
LTb
770 4241 M
63 0 V
6157 0 R
-63 0 V
stroke
686 4241 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.9)]
] -46.7 MRshow
0.500 UL
LTb
770 448 M
0 63 V
0 4109 R
0 -63 V
stroke
770 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MCshow
0.500 UL
LTb
1901 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1901 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.2)]
] -46.7 MCshow
0.500 UL
LTb
3032 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3032 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.4)]
] -46.7 MCshow
0.500 UL
LTb
4163 448 M
0 63 V
0 4109 R
0 -63 V
stroke
4163 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.6)]
] -46.7 MCshow
0.500 UL
LTb
5294 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5294 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.8)]
] -46.7 MCshow
0.500 UL
LTb
6425 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6425 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1)]
] -46.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
770 4620 N
770 448 L
6220 0 V
0 4172 V
-6220 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Cuantiles del modelo teorico)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3880 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Cuantiles de la muestra)]
] -46.7 MCshow
LTb
3880 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Plot QQ de los datos estandarizados)]
] -46.7 MCshow
1.000 UP
0.500 UL
LTb
1.000 UP
0.500 UL
LT0
771 448 Pls
771 449 Pls
771 449 Pls
774 450 Pls
775 450 Pls
776 451 Pls
776 451 Pls
777 452 Pls
778 453 Pls
779 453 Pls
780 454 Pls
780 454 Pls
781 455 Pls
782 455 Pls
782 456 Pls
782 456 Pls
784 457 Pls
784 457 Pls
785 458 Pls
785 459 Pls
786 459 Pls
790 460 Pls
790 460 Pls
790 461 Pls
791 461 Pls
791 462 Pls
791 462 Pls
791 463 Pls
793 463 Pls
793 464 Pls
795 465 Pls
796 465 Pls
797 466 Pls
797 466 Pls
798 467 Pls
799 467 Pls
799 468 Pls
799 468 Pls
799 469 Pls
800 470 Pls
800 470 Pls
801 471 Pls
801 471 Pls
801 472 Pls
802 472 Pls
803 473 Pls
803 473 Pls
804 474 Pls
804 475 Pls
805 475 Pls
806 476 Pls
806 476 Pls
807 477 Pls
808 477 Pls
808 478 Pls
809 479 Pls
810 479 Pls
810 480 Pls
810 480 Pls
810 481 Pls
811 481 Pls
811 482 Pls
811 483 Pls
813 483 Pls
814 484 Pls
815 484 Pls
816 485 Pls
816 485 Pls
817 486 Pls
817 487 Pls
817 487 Pls
817 488 Pls
818 488 Pls
818 489 Pls
819 489 Pls
821 490 Pls
821 491 Pls
821 491 Pls
824 492 Pls
825 492 Pls
825 493 Pls
825 493 Pls
827 494 Pls
828 495 Pls
829 495 Pls
829 496 Pls
829 496 Pls
831 497 Pls
833 498 Pls
834 498 Pls
835 499 Pls
835 499 Pls
835 500 Pls
835 500 Pls
836 501 Pls
838 502 Pls
838 502 Pls
840 503 Pls
840 503 Pls
842 504 Pls
842 505 Pls
843 505 Pls
844 506 Pls
845 506 Pls
845 507 Pls
846 508 Pls
846 508 Pls
847 509 Pls
848 509 Pls
848 510 Pls
849 511 Pls
849 511 Pls
850 512 Pls
850 512 Pls
850 513 Pls
854 514 Pls
854 514 Pls
856 515 Pls
857 515 Pls
857 516 Pls
858 517 Pls
858 517 Pls
859 518 Pls
860 518 Pls
860 519 Pls
861 520 Pls
862 520 Pls
862 521 Pls
863 522 Pls
864 522 Pls
864 523 Pls
864 523 Pls
864 524 Pls
864 525 Pls
866 525 Pls
866 526 Pls
867 526 Pls
868 527 Pls
868 528 Pls
870 528 Pls
871 529 Pls
872 530 Pls
874 530 Pls
876 531 Pls
876 531 Pls
877 532 Pls
878 533 Pls
879 533 Pls
879 534 Pls
880 535 Pls
882 535 Pls
882 536 Pls
882 536 Pls
883 537 Pls
884 538 Pls
885 538 Pls
885 539 Pls
889 540 Pls
889 540 Pls
889 541 Pls
889 542 Pls
890 542 Pls
890 543 Pls
891 543 Pls
892 544 Pls
894 545 Pls
894 545 Pls
895 546 Pls
897 547 Pls
897 547 Pls
898 548 Pls
902 549 Pls
902 549 Pls
903 550 Pls
903 551 Pls
903 551 Pls
903 552 Pls
904 552 Pls
904 553 Pls
905 554 Pls
906 554 Pls
906 555 Pls
907 556 Pls
907 556 Pls
907 557 Pls
908 558 Pls
908 558 Pls
908 559 Pls
909 560 Pls
910 560 Pls
910 561 Pls
911 562 Pls
911 562 Pls
916 563 Pls
916 564 Pls
917 564 Pls
918 565 Pls
919 566 Pls
919 566 Pls
919 567 Pls
919 568 Pls
920 568 Pls
926 569 Pls
926 570 Pls
927 570 Pls
927 571 Pls
928 572 Pls
928 572 Pls
928 573 Pls
928 574 Pls
929 574 Pls
930 575 Pls
931 576 Pls
931 576 Pls
932 577 Pls
932 578 Pls
935 578 Pls
936 579 Pls
937 580 Pls
939 580 Pls
940 581 Pls
942 582 Pls
942 583 Pls
945 583 Pls
945 584 Pls
946 585 Pls
947 585 Pls
948 586 Pls
948 587 Pls
948 587 Pls
949 588 Pls
949 589 Pls
950 589 Pls
950 590 Pls
954 591 Pls
954 592 Pls
955 592 Pls
956 593 Pls
957 594 Pls
958 594 Pls
961 595 Pls
961 596 Pls
962 596 Pls
962 597 Pls
962 598 Pls
965 599 Pls
966 599 Pls
968 600 Pls
970 601 Pls
971 601 Pls
972 602 Pls
974 603 Pls
976 604 Pls
977 604 Pls
977 605 Pls
979 606 Pls
980 606 Pls
980 607 Pls
980 608 Pls
981 609 Pls
983 609 Pls
985 610 Pls
986 611 Pls
986 612 Pls
986 612 Pls
987 613 Pls
988 614 Pls
988 614 Pls
988 615 Pls
989 616 Pls
991 617 Pls
991 617 Pls
991 618 Pls
992 619 Pls
994 620 Pls
994 620 Pls
995 621 Pls
996 622 Pls
997 623 Pls
997 623 Pls
998 624 Pls
998 625 Pls
999 625 Pls
999 626 Pls
1000 627 Pls
1001 628 Pls
1003 628 Pls
1004 629 Pls
1007 630 Pls
1009 631 Pls
1009 631 Pls
1009 632 Pls
1009 633 Pls
1010 634 Pls
1010 635 Pls
1011 635 Pls
1011 636 Pls
1011 637 Pls
1013 638 Pls
1013 638 Pls
1013 639 Pls
1014 640 Pls
1014 641 Pls
1017 641 Pls
1019 642 Pls
1019 643 Pls
1019 644 Pls
1024 644 Pls
1026 645 Pls
1027 646 Pls
1028 647 Pls
1028 648 Pls
1030 648 Pls
1030 649 Pls
1031 650 Pls
1031 651 Pls
1031 651 Pls
1032 652 Pls
1033 653 Pls
1034 654 Pls
1035 655 Pls
1036 655 Pls
1037 656 Pls
1038 657 Pls
1038 658 Pls
1038 659 Pls
1039 659 Pls
1039 660 Pls
1040 661 Pls
1041 662 Pls
1042 663 Pls
1043 663 Pls
1044 664 Pls
1044 665 Pls
1044 666 Pls
1045 667 Pls
1046 667 Pls
1046 668 Pls
1047 669 Pls
1047 670 Pls
1048 671 Pls
1049 671 Pls
1050 672 Pls
1050 673 Pls
1051 674 Pls
1052 675 Pls
1052 675 Pls
1052 676 Pls
1053 677 Pls
1053 678 Pls
1056 679 Pls
1056 680 Pls
1057 680 Pls
1057 681 Pls
1058 682 Pls
1060 683 Pls
1061 684 Pls
1061 685 Pls
1061 685 Pls
1062 686 Pls
1062 687 Pls
1067 688 Pls
1067 689 Pls
1069 690 Pls
1071 690 Pls
1071 691 Pls
1072 692 Pls
1073 693 Pls
1073 694 Pls
1073 695 Pls
1074 695 Pls
1075 696 Pls
1075 697 Pls
1075 698 Pls
1076 699 Pls
1076 700 Pls
1079 701 Pls
1082 701 Pls
1082 702 Pls
1084 703 Pls
1084 704 Pls
1085 705 Pls
1087 706 Pls
1087 707 Pls
1088 707 Pls
1089 708 Pls
1091 709 Pls
1092 710 Pls
1093 711 Pls
1093 712 Pls
1093 713 Pls
1093 714 Pls
1093 714 Pls
1096 715 Pls
1097 716 Pls
1098 717 Pls
1098 718 Pls
1099 719 Pls
1099 720 Pls
1100 721 Pls
1102 722 Pls
1102 722 Pls
1104 723 Pls
1105 724 Pls
1106 725 Pls
1107 726 Pls
1107 727 Pls
1108 728 Pls
1109 729 Pls
1109 730 Pls
1110 731 Pls
1111 731 Pls
1112 732 Pls
1113 733 Pls
1114 734 Pls
1114 735 Pls
1117 736 Pls
1119 737 Pls
1119 738 Pls
1120 739 Pls
1121 740 Pls
1121 741 Pls
1122 742 Pls
1123 742 Pls
1123 743 Pls
1123 744 Pls
1124 745 Pls
1124 746 Pls
1126 747 Pls
1130 748 Pls
1131 749 Pls
1131 750 Pls
1131 751 Pls
1136 752 Pls
1137 753 Pls
1138 754 Pls
1140 755 Pls
1140 756 Pls
1145 757 Pls
1146 758 Pls
1150 758 Pls
1152 759 Pls
1152 760 Pls
1152 761 Pls
1154 762 Pls
1154 763 Pls
1155 764 Pls
1155 765 Pls
1155 766 Pls
1157 767 Pls
1157 768 Pls
1158 769 Pls
1160 770 Pls
1161 771 Pls
1161 772 Pls
1161 773 Pls
1162 774 Pls
1162 775 Pls
1163 776 Pls
1166 777 Pls
1168 778 Pls
1170 779 Pls
1171 780 Pls
1173 781 Pls
1177 782 Pls
1177 783 Pls
1178 784 Pls
1180 785 Pls
1181 786 Pls
1186 787 Pls
1186 788 Pls
1186 789 Pls
1186 790 Pls
1188 791 Pls
1192 792 Pls
1192 793 Pls
1192 794 Pls
1196 795 Pls
1197 796 Pls
1199 797 Pls
1201 798 Pls
1205 799 Pls
1207 800 Pls
1208 801 Pls
1208 802 Pls
1210 803 Pls
1211 804 Pls
1211 805 Pls
1212 806 Pls
1213 807 Pls
1214 809 Pls
1218 810 Pls
1220 811 Pls
1220 812 Pls
1221 813 Pls
1222 814 Pls
1222 815 Pls
1225 816 Pls
1225 817 Pls
1227 818 Pls
1228 819 Pls
1232 820 Pls
1233 821 Pls
1235 822 Pls
1235 823 Pls
1236 824 Pls
1236 826 Pls
1236 827 Pls
1238 828 Pls
1243 829 Pls
1243 830 Pls
1243 831 Pls
1245 832 Pls
1246 833 Pls
1253 834 Pls
1253 835 Pls
1255 837 Pls
1257 838 Pls
1257 839 Pls
1259 840 Pls
1260 841 Pls
1260 842 Pls
1261 843 Pls
1263 844 Pls
1264 845 Pls
1269 847 Pls
1269 848 Pls
1270 849 Pls
1270 850 Pls
1270 851 Pls
1273 852 Pls
1277 853 Pls
1278 855 Pls
1281 856 Pls
1281 857 Pls
1283 858 Pls
1287 859 Pls
1288 860 Pls
1288 861 Pls
1290 863 Pls
1292 864 Pls
1294 865 Pls
1295 866 Pls
1296 867 Pls
1296 868 Pls
1299 870 Pls
1300 871 Pls
1301 872 Pls
1302 873 Pls
1302 874 Pls
1304 876 Pls
1305 877 Pls
1305 878 Pls
1309 879 Pls
1309 880 Pls
1310 881 Pls
1310 883 Pls
1311 884 Pls
1311 885 Pls
1312 886 Pls
1314 888 Pls
1319 889 Pls
1319 890 Pls
1319 891 Pls
1320 892 Pls
1320 894 Pls
1321 895 Pls
1322 896 Pls
1322 897 Pls
1324 899 Pls
1325 900 Pls
1327 901 Pls
1328 902 Pls
1328 904 Pls
1329 905 Pls
1331 906 Pls
1335 907 Pls
1338 909 Pls
1340 910 Pls
1342 911 Pls
1345 912 Pls
1350 914 Pls
1351 915 Pls
1353 916 Pls
1355 918 Pls
1355 919 Pls
1355 920 Pls
1359 921 Pls
1360 923 Pls
1361 924 Pls
1365 925 Pls
1366 927 Pls
1369 928 Pls
1371 929 Pls
1372 931 Pls
1372 932 Pls
1373 933 Pls
1374 935 Pls
1375 936 Pls
1376 937 Pls
1377 939 Pls
1379 940 Pls
1379 941 Pls
1382 943 Pls
1389 944 Pls
1391 945 Pls
1392 947 Pls
1394 948 Pls
1396 949 Pls
1397 951 Pls
1397 952 Pls
1398 953 Pls
1402 955 Pls
1402 956 Pls
1403 958 Pls
1403 959 Pls
1406 960 Pls
1407 962 Pls
1419 963 Pls
1420 965 Pls
1425 966 Pls
1427 967 Pls
1427 969 Pls
1427 970 Pls
1427 972 Pls
1428 973 Pls
1429 975 Pls
1434 976 Pls
1434 977 Pls
1436 979 Pls
1436 980 Pls
1438 982 Pls
1441 983 Pls
1442 985 Pls
1444 986 Pls
1444 988 Pls
1445 989 Pls
1447 991 Pls
1449 992 Pls
1449 993 Pls
1451 995 Pls
1453 996 Pls
1454 998 Pls
1463 999 Pls
1466 1001 Pls
1467 1002 Pls
1468 1004 Pls
1469 1005 Pls
1471 1007 Pls
1476 1009 Pls
1477 1010 Pls
1477 1012 Pls
1477 1013 Pls
1488 1015 Pls
1490 1016 Pls
1492 1018 Pls
1494 1019 Pls
1496 1021 Pls
1498 1022 Pls
1498 1024 Pls
1499 1026 Pls
1502 1027 Pls
1502 1029 Pls
1511 1030 Pls
1511 1032 Pls
1512 1033 Pls
1512 1035 Pls
1514 1037 Pls
1515 1038 Pls
1516 1040 Pls
1520 1042 Pls
1520 1043 Pls
1523 1045 Pls
1524 1046 Pls
1537 1048 Pls
1543 1050 Pls
1545 1051 Pls
1548 1053 Pls
1550 1055 Pls
1555 1056 Pls
1555 1058 Pls
1556 1060 Pls
1557 1061 Pls
1557 1063 Pls
1559 1065 Pls
1562 1066 Pls
1563 1068 Pls
1564 1070 Pls
1564 1072 Pls
1565 1073 Pls
1566 1075 Pls
1567 1077 Pls
1570 1078 Pls
1571 1080 Pls
1572 1082 Pls
1573 1084 Pls
1573 1085 Pls
1576 1087 Pls
1576 1089 Pls
1581 1091 Pls
1581 1093 Pls
1587 1094 Pls
1590 1096 Pls
1590 1098 Pls
1593 1100 Pls
1605 1102 Pls
1606 1103 Pls
1609 1105 Pls
1611 1107 Pls
1613 1109 Pls
1613 1111 Pls
1614 1113 Pls
1616 1114 Pls
1619 1116 Pls
1619 1118 Pls
1621 1120 Pls
1623 1122 Pls
1628 1124 Pls
1630 1126 Pls
1631 1128 Pls
1636 1130 Pls
1642 1131 Pls
1644 1133 Pls
1646 1135 Pls
1650 1137 Pls
1651 1139 Pls
1653 1141 Pls
1653 1143 Pls
1655 1145 Pls
1655 1147 Pls
1661 1149 Pls
1661 1151 Pls
1663 1153 Pls
1672 1155 Pls
1673 1157 Pls
1676 1159 Pls
1676 1161 Pls
1678 1163 Pls
1678 1165 Pls
1679 1167 Pls
1679 1169 Pls
1688 1171 Pls
1698 1173 Pls
1699 1175 Pls
1699 1178 Pls
1701 1180 Pls
1704 1182 Pls
1707 1184 Pls
1708 1186 Pls
1709 1188 Pls
1718 1190 Pls
1722 1192 Pls
1727 1195 Pls
1735 1197 Pls
1735 1199 Pls
1740 1201 Pls
1744 1203 Pls
1745 1205 Pls
1754 1208 Pls
1754 1210 Pls
1757 1212 Pls
1760 1214 Pls
1762 1217 Pls
1762 1219 Pls
1764 1221 Pls
1764 1223 Pls
1767 1226 Pls
1769 1228 Pls
1771 1230 Pls
1773 1233 Pls
1773 1235 Pls
1776 1237 Pls
1779 1240 Pls
1783 1242 Pls
1787 1244 Pls
1792 1247 Pls
1792 1249 Pls
1795 1251 Pls
1801 1254 Pls
1807 1256 Pls
1812 1259 Pls
1816 1261 Pls
1816 1264 Pls
1818 1266 Pls
1819 1269 Pls
1821 1271 Pls
1822 1274 Pls
1826 1276 Pls
1831 1279 Pls
1832 1281 Pls
1836 1284 Pls
1838 1286 Pls
1853 1289 Pls
1853 1291 Pls
1853 1294 Pls
1859 1297 Pls
1862 1299 Pls
1865 1302 Pls
1865 1304 Pls
1866 1307 Pls
1866 1310 Pls
1866 1312 Pls
1875 1315 Pls
1877 1318 Pls
1877 1321 Pls
1883 1323 Pls
1885 1326 Pls
1886 1329 Pls
1886 1332 Pls
1886 1334 Pls
1888 1337 Pls
1890 1340 Pls
1890 1343 Pls
1893 1346 Pls
1894 1349 Pls
1896 1352 Pls
1898 1355 Pls
1904 1357 Pls
1908 1360 Pls
1911 1363 Pls
1912 1366 Pls
1921 1369 Pls
1925 1372 Pls
1929 1375 Pls
1933 1378 Pls
1948 1381 Pls
1949 1384 Pls
1952 1388 Pls
1957 1391 Pls
1961 1394 Pls
1964 1397 Pls
1967 1400 Pls
1969 1403 Pls
1971 1406 Pls
1975 1410 Pls
1976 1413 Pls
1978 1416 Pls
1987 1419 Pls
1988 1423 Pls
1988 1426 Pls
1989 1429 Pls
2000 1433 Pls
2001 1436 Pls
2002 1440 Pls
2004 1443 Pls
2007 1446 Pls
2009 1450 Pls
2012 1453 Pls
2016 1457 Pls
2017 1461 Pls
2025 1464 Pls
2028 1468 Pls
2029 1471 Pls
2032 1475 Pls
2032 1479 Pls
2041 1482 Pls
2046 1486 Pls
2054 1490 Pls
2058 1493 Pls
2060 1497 Pls
2071 1501 Pls
2084 1505 Pls
2097 1509 Pls
2104 1513 Pls
2110 1517 Pls
2118 1521 Pls
2119 1525 Pls
2121 1529 Pls
2123 1533 Pls
2124 1537 Pls
2128 1541 Pls
2130 1545 Pls
2130 1549 Pls
2135 1553 Pls
2141 1558 Pls
2149 1562 Pls
2149 1566 Pls
2150 1571 Pls
2151 1575 Pls
2153 1579 Pls
2180 1584 Pls
2190 1588 Pls
2197 1593 Pls
2198 1597 Pls
2203 1602 Pls
2210 1607 Pls
2215 1611 Pls
2225 1616 Pls
2229 1621 Pls
2240 1626 Pls
2248 1631 Pls
2249 1635 Pls
2254 1640 Pls
2255 1645 Pls
2261 1650 Pls
2266 1656 Pls
2292 1661 Pls
2296 1666 Pls
2309 1671 Pls
2322 1676 Pls
2350 1682 Pls
2364 1687 Pls
2375 1693 Pls
2383 1698 Pls
2383 1704 Pls
2388 1709 Pls
2396 1715 Pls
2412 1721 Pls
2421 1727 Pls
2443 1732 Pls
2450 1738 Pls
2452 1744 Pls
2462 1750 Pls
2474 1757 Pls
2475 1763 Pls
2497 1769 Pls
2512 1775 Pls
2534 1782 Pls
2534 1788 Pls
2539 1795 Pls
2555 1802 Pls
2563 1808 Pls
2568 1815 Pls
2581 1822 Pls
2591 1829 Pls
2592 1836 Pls
2621 1844 Pls
2624 1851 Pls
2627 1858 Pls
2644 1866 Pls
2668 1874 Pls
2685 1881 Pls
2685 1889 Pls
2689 1897 Pls
2692 1905 Pls
2703 1914 Pls
2707 1922 Pls
2738 1930 Pls
2758 1939 Pls
2766 1948 Pls
2767 1957 Pls
2799 1966 Pls
2806 1975 Pls
2810 1984 Pls
2812 1994 Pls
2814 2004 Pls
2816 2013 Pls
2850 2024 Pls
2881 2034 Pls
2891 2044 Pls
2907 2055 Pls
2987 2066 Pls
3033 2077 Pls
3038 2088 Pls
3097 2100 Pls
3126 2112 Pls
3164 2124 Pls
3178 2137 Pls
3216 2149 Pls
3216 2162 Pls
3224 2176 Pls
3308 2189 Pls
3343 2203 Pls
3345 2218 Pls
3369 2233 Pls
3437 2248 Pls
3477 2264 Pls
3504 2280 Pls
3520 2297 Pls
3561 2314 Pls
3567 2332 Pls
3586 2350 Pls
3597 2369 Pls
3607 2389 Pls
3619 2410 Pls
3626 2431 Pls
3635 2453 Pls
3656 2477 Pls
3685 2501 Pls
3694 2526 Pls
3703 2553 Pls
3719 2581 Pls
3723 2611 Pls
3723 2642 Pls
3724 2676 Pls
3775 2711 Pls
3785 2750 Pls
3900 2791 Pls
3903 2835 Pls
3904 2884 Pls
4011 2938 Pls
4097 2997 Pls
4106 3064 Pls
4151 3140 Pls
4254 3230 Pls
4290 3337 Pls
4632 3471 Pls
4978 3651 Pls
5409 3924 Pls
6460 4512 Pls
0.500 UL
LT1
770 448 M
95 71 V
95 70 V
94 71 V
95 71 V
95 70 V
95 71 V
95 71 V
95 70 V
94 71 V
95 71 V
95 70 V
95 71 V
95 71 V
94 70 V
95 71 V
95 71 V
95 70 V
95 71 V
95 71 V
94 70 V
95 71 V
95 71 V
95 70 V
95 71 V
94 71 V
95 70 V
95 71 V
95 71 V
95 70 V
95 71 V
94 71 V
95 70 V
95 71 V
95 71 V
95 70 V
94 71 V
95 71 V
95 70 V
95 71 V
95 71 V
95 70 V
94 71 V
95 71 V
95 70 V
95 71 V
95 71 V
94 70 V
95 71 V
95 71 V
95 70 V
95 71 V
94 71 V
95 70 V
95 71 V
95 71 V
95 70 V
95 71 V
94 71 V
95 70 V
stroke
LTb
770 4620 N
770 448 L
6220 0 V
0 4172 V
-6220 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
