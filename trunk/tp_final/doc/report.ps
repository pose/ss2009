%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: report.dvi
%%CreationDate: Sun Dec 13 23:00:53 2009
%%Pages: 17
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMCSC10 CMBX12 CMTI12 CMR12 CMR10 CMTT10 Helvetica
%%+ CMMI10 CMR7 CMSY10 CMMI7 CMMI5 CMSY7 CMR5
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o report.ps report.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2009.12.13:2300
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMR5
%!PS-AdobeFont-1.1: CMR5 1.00B
%%CreationDate: 1992 Feb 19 19:55:02
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
readonly def
/FontBBox{-341 -250 1304 965}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA1F9B0FF4CFF25B8E64D0747A3
7CAD14E0DBA3E3CA95F10F24B7D5D75451845F1FB7221D7794A860756CFBB3E7
704A52A22448C34812C3DBEDD41892577AABA7D555E9298C1A0F7DA638078167
F56E29672683C51CF1C003764A8E7AD9D8ADE77B4983F56FE2D12723AAD8BF36
682CFBB71B1D12210144D39DD841A971F71DB82AC6CD815987CDCF29ABC3CC96
5EEBD5D661F452C6E0C74F9ED8D0C5B3755551A172E0FE31EA02344176E32666
14B6853A1C303A5E818C2E455A6CF8FC9A66DC6E279101D61C523BD9DB8EB82F
EAF4D7FDF6372383C0794C4568D079648689A199D4B65BA646CF95B7647E4BEC
83856C27A8EF177B3A686EDA6354FE9573E123C12EC4BA56A7E8BFB8F9B75147
9DD79A743968F36F7D0D479FA610F0816E6267E5CE327686A5485AB72201525C
FB3B7CA10E1BF26E44C24E1696CB089CB0055BD692C89B237CF269F77A31DC81
0F4B75C8400ABCFDCEC6443CD0E81871CD71AA3064ABDE882C4C52322C27FA8B
41C689F827FB0F8AAF8022CF3C1F41C0B45601190C1328831857CBF9B1E7D1AA
246117E56D6B7938488055F4E63E2A1C8D57C17D213729C68349FEC2C3466F41
171E00413D39DF1F67BC15912F30775AFDF7FB3312587E20A68CF77AD3906040
842D63C45E19278622DD228C18ABDD024DD9613CDC0B109095DB0ADC3A3C0CB5
AB597D490189EA81239E39202CBC7A829EB9B313A8F962F7879D374ADF529BD0
5533EF977142F647AD2F5975BA7E340419116099B19ACCCC37C55124CA6C6A2C
D961E1362D29A5F4C3393CEA88CEDCFCD8AAC05D8F6790F6C9822F00885D7FFB
C8F31D0CA9E18CE24A9ABF70858A7531318CD90234AADA0744453E549C2E75EC
8D9E6B30AA7CC04511AA5787A9CD72D6CB8B880B2069BBA92A37C94479E9AE61
1F53F873B45A8C200913421D44CF0E2E947665A66813C81A6BB49F0CA576AE5C
7695400937D0F6B4482ECC524F0A06DE1DCE031B21F5A4B64080D78835975D4B
F6B9520724A4320420F2AC5FA35328964AABFBC3A4FCCC29561A0E602974614B
DAE5EF30B8E815DE96655404EC9589FB9114B93740B9DB69F2C1C9937DBD4132
4DAEDC52DCF2B182BE3F956BF154BED0288ECFE6D05126B462DE6DA0D4B2C44E
FFEFC865CC4BE77D57BC008E44FD2C7494C9DDBCBE4C873743D5E7242250B480
340EA291FA9612C8FED8AC6CE4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.1: CMSY7 1.0
%%CreationDate: 1991 Aug 15 07:21:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
/FontBBox{-15 -951 1252 782}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D251491EBF65A98C9FE2B1CF8D725A70281949
8F4AFFE638BBA6B12386C7F32BA350D62EA218D5B24EE612C2C20F43CD3BFD0D
F02B185B692D7B27BEC7290EEFDCF92F95DDEB507068DE0B0B0351E3ECB8E443
E611BE0A41A1F8C89C3BC16B352C3443AB6F665EAC5E0CC4229DECFC58E15765
424C919C273E7FA240BE7B2E951AB789D127625BBCB7033E005050EB2E12B1C8
E5F3AD1F44A71957AD2CC53D917BFD09235601155886EE36D0C3DD6E7AA2EF9C
C402C77FF1549E609A711FC3C211E64E8F263D60A57E9F2B47E3480B978AAF63
868AEA25DA3D5413467B76D2F02F8097D2841EDA6677731A6ACFEC0BABF1016A
089B2D24F47B9D66B677886B90AA787AD865B5F78EE434AA47B7B0F1244A4215
251FDCC670FD01A92226E2C667C2344298D001575BDF782D969D836ECA11E229
C7A17E28F70F9B17273FF243452DA885068A8BCB5165534F3996CBD8D97307DB
593D606C197AFC259E691C242F6E1E651575B6852AAD54567905E6F542DCA109
7F6DA24DC9112FBF7CE48B387953787B2BCB841873AED2DFA83339D39E14F4DD
3A51584527AC3A93630D121E2AE0C89D9C3F2FFA767743B1276BE1E648041010
0FD510F1A8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI5
%!PS-AdobeFont-1.1: CMMI5 1.100
%%CreationDate: 1996 Aug 02 08:21:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 105 /i put
readonly def
/FontBBox{37 -250 1349 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA06DA87FC7163A5A2A756A598FAB07633
89DE8BB201D5DB4627484A80A431B6AFDBBBF23D4157D4AFE17E6B1C853DD417
25F84CD55402AB88AB7EEFDEDBF2C2C731BD25567C53B474CCF739188A930039
098A197F9C4BE7594D79442B2C8A67447DE44698321145D7689B91EF235EA80E
B600AA8E238064F154284096C4C2554EFE8DDF13AFF8D3CE30E0999375C0FEE6
F992DEA5FC3897E2CC8B7A90238E61E41622DE80F438DD994C73275CC52249D9
F6686F87F394FB7BB668138B210BEC9E46415A1B58C990B81E7D7DD301143517
4C2A259D2A0A1E200F8101469C10D7D537B0D4D39296A9AB3F132DA9A3B459B0
F850E2B3A03BDCB35AEF82285D19C38F474FB414F8EC971B994D1C7DD753B271
2B71549DF497C665DF0F266988209D9EB616E4D9BA229FF984E7A886DB01FD21
48ED2E4859FD6416C2CE52537464EA884C8C9C2D1083E2B83BE4B766474C23B6
6E8EC5003200AB10514BB44D14CA700416AB6B2683E80862E7D5B49A05526A32
554BB23AB8B0824BBA198E3825CE82380CC0FECF46651E3E5D77F09465E73164
20342822F29572BC7F73F2C3BF95ED3BB6FDEADC20C6AC866C4F2C679594D7E8
8D944704A3C5D771DC39503BECAB89F34D8CDB8FDB91AFE21F3F0260D05E90C5
73E2C13DFA022C4522E5918EE25038A0498FBB530DA33B0AE238B1C6ED03FC04
2BFED8236E07820C5BAB411EAE1B31D93A2FA7C374B1725FEC359ABCB88E2C89
214529A263D795AACB0B95A3AB2F4E08EF350C282CE521716DBB06E5B8291B3F
5D4ACA230FA192F64BC902A4C8842C0F916F92FBD002ADD408BF0401D0284FBB
F05D4C6DB631420747CC902C5E1617E6573612FB26C8378DF41FFB5048D3CF06
4893DBA48EF4B043D760F60C75712169D16C83EE020C45369E443E853E1809DD
F395B812067D6FDBD26111B34F42C21036AF952D0D767FD17F6959D9FDD46005
D64FFF54772B50BB9B173AE79702981F58F9F235C591F476A31852174DF0619C
A470359153DC32610E782B204E7945515464DACE9099B81EEECC7EBD4B5126AF
C3FD9DDFB329AF1C95C41FA4A5F6958869509A23BD7210386329771FA46FF926
0E54AC35106253EE140449425A8670E1F92B178A02A58EB57540F4BD8110E548
BB584EA6D625C5F5FE0124A98E49915F1A1B95D2125874360EED1C4379FEF3C6
90E5780C20309F11F2F23FAD635C44BA030B39EFF083A3ECCDD2641DCC67E900
CFE9B1E3FA03479C9040349B7C63F2E855EF5A8568573595FAA8C2F85271E206
385315994BAD8EAECEC06B6EB436DC0004932CA9AD5A4A42E69B25172A292D54
79A55138514F6E1EB0F82E6F90A36FEE157ED27D2C8AEE03E9E01ED9A94E19BA
22FB097A0F2237DB29A38DFAD90327F8FE97419F08DBF0AB75E2527EBFE173B0
93855F5CE5EE322A888AB1A3B8B72A0C747F0FA0F85BAECD76FCFF2A3CE27187
C59CED086B9BA96D25F2DDBBFE80E6D778A641DAA1C4DAC1DBA9F10A30DA4727
19D65907D5951CD3D8986565B91868AD99147D8FE9EF222D4A6D2E1839286980
F57FE64BDA994DBA9C6E7A206173C2F213D41AD4E34DC7FD1E2048680756EFF6
D26719DA156F56CC511482E24483008D8B92524B393AB542846330A30AF1508A
3F969D5F0B259C4433B42982100F2FC59188644CA373772877DE264DCABA9945
BFC2740BE637E2386BAC61F23B42469DE59F4414A628D0E94AF8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.1: CMMI7 1.100
%%CreationDate: 1996 Jul 23 07:53:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 69 /E put
dup 79 /O put
dup 105 /i put
dup 110 /n put
readonly def
/FontBBox{0 -250 1171 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962EAC6E3EBFB8AD256A3C654EAAF9A50C51BC6FA90B61B60401C235AFAB7B
B078D20B4B8A6D7F0300CF694E6956FF9C29C84FCC5C9E8890AA56B1BC60E868
DA8488AC4435E6B5CE34EA88E904D5C978514D7E476BF8971D419363125D4811
4D886EDDDCDDA8A6B0FDA5CF0603EA9FA5D4393BEBB26E1AB11C2D74FFA6FEE3
FAFBC6F05B801C1C3276B11080F5023902B56593F3F6B1F37997038F36B9E3AB
76C2E97E1F492D27A8E99F3E947A47166D0D0D063E4E6A9B535DC9F1BED129C5
123775D5D68787A58C93009FD5DA55B19511B95168C83429BD2D878207C39770
012318EA7AA39900C97B9D3859E3D0B04750B8390BF1F1BC29DC22BCAD50ECC6
A3C633D0937A59E859E5185AF9F56704708D5F1C50F78F43DFAC43C4E7DC9413
44CEFE43279AFD3C167C942889A352F2FF806C2FF8B3EB4908D50778AA58CFFC
4D1B14597A06A994ED8414BBE8B26E74D49F6CF54176B7297CDA112A69518050
01337CBA5478EB984CDD22020DAED9CA8311C33FBCC84177F5CE870E709FC608
D28B3A7208EFF72988C136142CE79B4E9C7B3FE588E9824ABC6F04D141E589B3
914A73A42801305439862414F893D5B6C327A7EE2730DEDE6A1597B09C258F05
261BC634F64C9F8477CD51634BA648FC70F659C90DC042C0D6B68CD1DF36D615
24F362B85A58D65A8E6DFD583EF9A79A428F2390A0B5398EEB78F4B5A89D9AD2
A517E0361749554ABD6547072398FFDD863E40501C316F28FDDF8B550FF8D663
9843D0BEA42289F85BD844891DB42EC7C51229D33EE7E83B1290404C799B8E8C
889787CDC69C6F2AE63E19FB4633FEE6B85717F348604C83D319DB2FDDDC6160
DE91003F6E4DF75C5B3A97D0F1018435354B6E37D23469EC95AFD774404BDD47
69105513715CEA99E25620FBB12F2902E8AF1221C6E48AF967216CE792A1F2E5
00B9C27A625F9EF691A9747C57FDFD4F1969A9B81CBC7D128B3CBE756F645D53
809DD01594979CC0066A9E266FF04B8861FE22083440C1CC45A654D524DD95FC
3FF703802BC415CEA4632EE359A9C0FB451D447F8CFDC478E789B918BCD01E24
71DBA228FDB817AABCF1D48C495E3821C8935A5032CB53BF97A5F5E3FC96E0F8
95AD960DCA64E9B4E9286D6C8E3573B8C418A8E71E82E1A05906A482102C106B
60239ECA4A00E54283D18BD0B598154BF2304A252E5797C58BB675A1E93143B1
A83AB72E17BDBBCC73929D2AD09E5012C5EF29CCD126AF9CD9AC460E96BEEF3B
C4CC79F82FCBBA44411C558203B6DD78090448EA6406B2311B97EB281122E390
40B2181D8AFAA3BF548477D3C441F2CCE4ED7C6E9ABF64B7A7D7DD56A07128F2
B762D058EE9A90749B1CB2ADE3E84E539DBD5B832E885496DB0B3A2FF3091695
F45FC769AC84EE7171800CE249E3D3070609612C2E6212B9EB84761A7C076B41
CC764DF4E7716FEAC32BBD04EAC2C6EAFF303CA5205DF514020ACB09087DCDEB
0F61A66FE995CAF785EE3F44036EE4DFF00B59D5005CAE6C6B3754F278BBF4FF
C4A48021306CB9E6E35F363CB7DE1805FDF5239EFD2AC9F07369E4FCE880588D
254102513D0536F60F5EA05DBECA5884BAEB766C6EBCB61431D6ED5E885AC63A
F1001FA428983C2A7B72B85211B6377FD6E082576B9AB2925750B8BCC482A002
E604ACA4832AE458A2CEB189391475DB939125CA2F60AEA4E49814AD4A6B75BC
6F34727FA9F0168A4054E96C6208B75AB871FDB14FAEADA775BE0CB1E0FB114D
870E1D691914A062D38901730915F0FA497D2200CC9AD91F2BB0B1E64EA26806
AA3588AF953735E96D23830DC799075ABB6CAFBF568714F00205C7AC90AD93B2
A335840CDE6269EDACA220BCA2C56E75E47149CAC118E1E987431EEE7C040CC6
AD08EE220D6DA795A28242F66833B952647926E4D4733C65F530528248C18D00
180F2B7F5EC8698B9605E923A4DFF737DB789620AE27C725A54F585BFC0A42EC
5D72DE8D736AF2C9E546EB07963E521BA37BF25A9EDB31940811F63FF619FF17
853358238E411623FD22ED18F5614FE0F897DF81A993032B3CE0C5BC9B76C5B9
A941DAE264464F5E1AD27F38A7D42234477E9573CCE4D063CC7C4D6FFB793EB3
44FD7AFFF77518391DF8E06D25F340E54D94B3E33C2CE3B00C3C72D8471B4B45
2F3E1462F945FFE3B1F2A8F91B075A3A1399E630223A4513AD860967391297A9
3AFA8B604F0B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 102 /braceleft put
dup 103 /braceright put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC570317AAEA74A842CFD26F9591866F5A0
9B4EAD7395F5196B36997F1D59E88165C94739E74C2B40820F8C972B175ED79D
87C9E323C3CDD5C2BEE6409017767534E19F45AFCE2C6687733451AD2E75D112
42040BADFF90F5FCF3F2901FDEA619E64D6D0C6028216A78E7C25112B0D34428
AE383A46C0FE7D29AE9EE114224EF9BB7DC731072DBE736AB1358F37610C3762
F266B1016768B04306F3AC083DAF863E78CA401B28090A92C6AFC4FC601C2397
A24426104896F5D2D2E7651942A70EE036A943E59D3554AE462B9E0911B58F75
4ACDA535B87CFE5614EFDA21855F6F9C1FC25D2DDF53A49D8DA9188F3D7D1769
E55F4B40B211D1ACB084C157CE1608A3781D134EC608C6A1A6F1FE1707BDB0CF
B111D95C18D611BFA1535A6CC94EA264FE45347D40DCD5C5390D862AC6291D44
B007322C02AED356974E5BD9C2C434430E50DBE4020B35220345B9B8C287AF4C
ACCAD84CF351FE3878C61BAE570D9188760BE493FDE2C9C551E4BCE313039C74
54EBF847327459041B7F6D9D0920034D7FFEF514EC312B6090B07BFFE3E74AE7
BC3740D3072C9A78B16EBBB3EDE20CB6E506F6B66E8780B5631CBDF7D8B54EF5
AE5CAD8129B6C75472F6DC7E90C0A5E0CEFC3588635BA402B64852A03C3BEA47
57D73980B741FF62395F39DAFA78047ECE96DE9715D7ABAC46F9922220A24686
CDF91735904661E52C5FC67A76609DA9D7843D2415599C53C8F4388F4262BC19
289DE84C70F67EB0A6329242865E0DBCFBDCCEE1E111F0D9AC3AD5BD4FCA1C39
2E3317FD91906802B79D7D08E27AEE0440CD9AE58CCCBC4F8630C3089F3B091F

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.1: CMR7 1.0
%%CreationDate: 1991 Aug 20 16:39:21
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 49 /one put
dup 50 /two put
readonly def
/FontBBox{-27 -250 1122 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6CC3F1E9AE32F234EB60FE7D
E34995B1ACFF52428EA20C8ED4FD73E3935CEBD40E0EAD70C0887A451E1B1AC8
47AEDE4191CCDB8B61345FD070FD30C4F375D8418DDD454729A251B3F61DAE7C
8882384282FDD6102AE8EEFEDE6447576AFA181F27A48216A9CAD730561469E4
78B286F22328F2AE84EF183DE4119C402771A249AAC1FA5435690A28D1B47486
1060C8000D3FE1BF45133CF847A24B4F8464A63CEA01EC84AA22FD005E74847E
01426B6890951A7DD1F50A5F3285E1F958F11FC7F00EE26FEE7C63998EA1328B
C9841C57C80946D2C2FC81346249A664ECFB08A2CE075036CEA7359FCA1E90C0
F686C3BB27EEFA45D548F7BD074CE60E626A4F83C69FE93A5324133A78362F30
8E8DCC80DD0C49E137CDC9AC08BAE39282E26A7A4D8C159B95F227BDA2A281AF
A9DAEBF31F504380B20812A211CF9FEB112EC29A3FB3BD3E81809FC6293487A7
455EB3B879D2B4BD46942BB1243896264722CB59146C3F65BD59B96A74B12BB2
9A1354AF174932210C6E19FE584B1B14C00E746089CBB17E68845D7B3EA05105
EEE461E3697FCF835CBE6D46C75523478E766832751CF6D96EC338BDAD57D53B
52F5340FAC9FE0456AD13101824234B262AC0CABA43B62EBDA39795BAE6CFE97
563A50AAE1F195888739F2676086A9811E5C9A4A7E0BF34F3E25568930ADF80F
0BDDAC3B634AD4BA6A59720EA4749236CF0F79ABA4716C340F98517F6F06D9AB
7ED8F46FC1868B5F3D3678DF71AA772CF1F7DD222C6BF19D8EF0CFB7A76FC6D1
0AD323C176134907AB375F20CFCD667AB094E2C7CB2179C4283329C9E435E7A4
1E042AD0BAA059B3F862236180B34D3FCED833472577BACD472A4A78141CA32C
B3C74E1A0AE0520B950B826B15D336D8A12ED03ECD59B50775E3C5D8309802AB
9DF865421C5AD1492673F0D8DC1B55EA958330AE6F4301D5314190C760AE2832
0FFE98B31B10B50826F26335347600DC34708CD6913388C6A1DCFE3414F267F3
B269D4D5A9A00AC78F252683E4021E203432502358A9B3E137263BC107513521
345A2C8F613C2CB9236D0C6D8C81274046D8E26BADE086CC18D48E0F710163FE
20A0C8F968586F53FB9F1F122AD0B311B35DD63494CCE2A905753031DA7F6D05
F178B67D06097D803CA48FE0A01FAC8E7CDDD83A30916E01EE9795EDF731031D
A8C35ED6E0E8D5215ED779FEEA2D2B54BA35B5A50044CC0DE5AB8C0D11BCB29C
4DCC9065FBA656469709A647096FAD117092865B8579643041485DD042487F0D
B81F178234359798986A1DD9053ACE7AE2F6A12BB0BA90D1C2E99699BCEEB3E1
B57E4E3EAC39AA2F28B12383493184C2B6E0CABA99253B9F0B44F4C7183F1B4D
C23C2244BBBC4A83A75FB9B71042B0B1676B4D9B33A2BB728A7EB3FC945F8CC0
848FA40DF50A48169E401B3B0F55091F29E66789063857843622FCA3673F4C78
8E7B68655E08BB031AE83BE6AF0CFC395F6A291796743431CFC4FA0FC1B3CC88
50FC4640D84E195EC4000C5C8A85C9D395EC884425C49379C710F323A2C06680
2FB61480B8616927DE8957193BF93D179060F377909E403A987BBDC79148CB6A
56380A268A2C525B0A03B06AA0CAC2B08A4B475151DCD4AE0984BF8924BD4126
4937CF034188F309CDCAE7E771C9F1C158DC3E6F58718290F639BF7E826A516F
6FC312478333DC0B62DF356AAFF8C94FE47F941D2DC07B9FB167ABF4E0CDBEE0
2955FCDA84B01650AEF0399311D60DFE714FCA065007CB87E502B60C980986C1
1C6ECC34F8EDA45C8A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 31 /chi put
dup 58 /period put
dup 59 /comma put
dup 61 /slash put
dup 69 /E put
dup 73 /I put
dup 75 /K put
dup 79 /O put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 120 /x put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC27E4A7E07D09FB08355F6EA74E530B0743143F2A871732D62D80F35B19FD2
C7FDF08105847F13D50934419AC647CBA71DF74F4531DC02BBDA22AEEA3FBBBB
407E0ACC52BDC60D01A29407CC4F93EB8BF6D4813E9BA858D54F38918AC82720
4956D50291F0546E50FCAFA6DBD0099123F5ECD4AB338DB310DB4CAE11337A89
8ED99B6F483940C97544F888EAF0CBEB11094A13C073D0061808662A04A82BA0
AD35E8782F854AF66C20C0FEF18D0ECDD1646321B93D327E53D88CA0E825FA95
05AA57BD7370A6CF3F907677487A5315508F499E072A9D2C8E8A84A64B484ACD
6932399944E4D46E6E4BE4823EA337E882382270D5A9589695EC61EEA96BB0C7
94A91CC5E0734914DA49B87EDC37F3E711F88AF2352570F6539B45CBC8D7BA18
D8B51ABCADF62FE17CC41A05DA73FD3839011C2780FCE7CA74EC5A9E2282F0E5
A87A368DF10ABDB1CAA8FB04C078AADEADF475137A628ABC244E4C653046B62A
42C7E0DEBE117666D075C45E1FAA79DCB0784C156537F4EB0D45C85AD705D0A0
FCC6BD3BE94F194D211D043DBD45B9F12D299159F752713DEA27E6CE1F39B118
CFD583EE5AA2A8A4A36274BD22836FAA01A1DAF40232CB50CBCCA9E156AED2C3
65483EFCEE76AC7FFC8CFE92D78E6EA36A4F93BF092FE60ECAF87997370F8232
BCBBE00670B4CE9A0D6DDD7ED13E739BFE53F7362BAC18B4FE10070285C1EBAC
A466DB4E77216D7A43157C6E6847B6B1CD479536A3E64F241EC520E0428A317E
D7A87648333B63B2A76AABCB74165F315441E4580494F92C1E4D6721BCA1C413
EAB6B86494111EFE16F7E764075FE5C63086E97171BB912A396FB755DA1D9404
A29ED1FCD1112EEDDDCF801D6C13372D8AC796998E0C3310DAA63325009A03C6
1A662037681771BABBB296733D6931050D8267EA4A17329C735ED82DFFB616E1
763F5D4F44A6A3D192D7DC3783AA8B8AF304E720999E56CA90207CA2F23B36E2
5E65295D1747165B15BFB237F80097F41563ABEE2F2FB19CD021719D2AF40B65
0F3B56C206FD83F716710DA1B4DB1828348086ABDB09C6345BBE0CCD61F3AE49
09657E7A0509F3E030F3B84F10744BEB9F5D782B343E1CEDA448A2E4BB5D321A
087615463E0E1EABB8417FAD0A9ECE000A54A930C3E5C76C63292A171A81DB25
AEF8E49BE6931F2A9DF09C81CC8EE64FD36F6B0B5B65CA48B31A3C61D91BA660
A61B42547BE4F650CBF7CB94E36C0A16FB7DCD9B630280ACC507AC1BB163C9D0
94FC6FF07B64BC6024B5D4CC89FD08A8F1079C1C48706C44971DE2A80D54B3D1
2A6523635BF4EE39CD08CF88276E657FAD965F8EEDDB009A7AC3C034EC6F25CB
61997E90DA457E7E17D70F4F6C0B982DA3E182409D0CE44E0F69D75C1792B1E5
8129FFF05C884FED70E8E36B5DA6A7893322FD747E8999FAE9C24380ECA5EDA8
5D74027247426DBC7C536A69911D7041607460B6AFDB2D03ED1DA48AC076F105
9C9569FDFF3C3FC7DE82BE2E433733E758BD56EE75524D1D9C9C01F458A1B427
3D0CB9F4D86992A7CCE169FB7F3F6C317615B91A37BF59E4B3A49FDE1D2FAAE9
442B5A9D394BD61EB24F8A954C05FC9D32E5DFF58598DB513EE7B4CBFB93B925
32F3747195907591E5991952E7230D5D7BA399671834F2FF2926339132515140
582E68DE30A513C1231BB35370F07CAF5745DD36631A9EFBC63B98529DB5E7B9
A1C260119F0B5D1269256BDA556F17CFEA83E1B86C021195A0CAA6D0B1F5447B
039766DC2C2B24FD0E95D533338EA6132014BD39711842046EA9132D33C65A21
DF22851B0C08C7D9B1263A7436BA210B2A6E07A8477CB71423F376461079A416
0BD7DC89D8FD7659A81EA2F044FA6964A6AF68D53FCAD4A2BC233EADAE9BAD31
D1150440768B7E43D1511C463F700907A77882FCE9D9B68F9DA6457F62383D02
88B0799137621A784878A4A56EB575E8D287A03C2D356004D36DECD0F4E31982
1260CB22132ADBB330C45D662BBF2FBA2D5915FFCB14C7E558088E5155C833FB
3831AC9D31C7F0FD4C5846DDF13ED694E7AFC659B00169AFA5A69CCCBF0A99B9
8981AD1D126349F7FF7E3A56B18EEA99C1D7FA07F7BD356D08A4EDAF72F08C7D
55CB3503655CD4FABAB1930525E90EA588BFA20FE8E0939818EC1DEDD609D1D1
06767FAF73435B66A9A606EE704113C719637DF8767AAA403AAAFA2C08C22D05
F8B1E61CAE8C5127FC47F6C3B591FB114B01975A83B66F79F7E20DD3A9224337
CFB6DB5086960999D7ADC8E8C7BADA088F31718DF4A7B9D61926B314828B71A8
751E637526A79CE4E9ED6E2A68D3EA22FB23385E831E2C47FFC0B5832BD305F8
30A6341E7695EDDF9780C128D0BD45C60E54A3A5631EA50CE63C5ED928BA089C
F18E594BC1D083865F7FB2340644656CE6FEF0CAD526B7E06D10631152337007
A267BC31A5FC7634CD5A4CCB9C0A00363B1F69A692A9CFB29D8AAC643EE7F24D
949A8F14D8E7D699CABCE5540BC84297F71BF7AD2657985220604ECE6316F7DD
41AD506279C39F576770213B593F8B80F90133049289FBDC96D4AC06DD298B9B
099D88C2D9C130DB8F776C25C95BBE46E8D71E5E4AD6201F80E4A666F736D0C2
5E09413896D729B2DD6258C076B263445C2FB2B0410B27D22B32FBE060396C60
44F38AF267BA5EF70F5B6620E522C633BC2F715A2D5A419F3C91D5EC9592A156
9AF3882E0BAC039F603CA07B5A481D637CFB5221B2C048C385BCC726D061452B
A3D6B7A8704CD1A884E31B3B064282F82955B1F1C84BDE7E9FCE44C12BA1DA9E
237668D8F43279F514EB555BE751BDA31A7EF5BB15526F489DF030D3BADFCC92
B0217E9679B8362ECD55888087E876FBB00DC3FBC3247D6ACE012F73AF126C20
A15482BB60002BD89C3BFEA57E2D92EB659653FFD34C5BA13E72C07FA36D56C1
ACAF8CD8E3D7331BF86FB8B1056065A7C2EED2E4C595B1238598972523F8B2DB
17E90DFA5CB1FA0EA9E1B951D728121645658A00655C5A4D69391AECB161593C
D8B8B46EC48C986DBD5DC3BC13CA0E9B1689776BC565ACCE6E819B1EE8BD22E0
5E2970FDE44F493C2364F42ACCF8F04D4CBC33D0C11AEE8424A1B0148DB7D289
1B1215A9F8573317E96155B3C8EA45779B3F3CB9A2552BB5F610C0FCFD769CBC
8DCBF5AA8815602ED7D7BD10FD0CCA3D0E2F19A5C41C94981491E343423FF929
F37D73CD245312D6D2AFF60AD34359C0B10129096EAB7FDE3871D71F69B0922D
B9C80043E710423719EBDD14E99974E0CF37BB12065C26D7F34F443CB847F263
685A0AEB95A7DC402B0443D6669A42A37A715F2B00A0DD0CB1FE5BD800285BE5
4F612235ADD16368795536DE1B6647B32529FBD1D84493B5B51400D2F86E2C05
5F8B4BC9A6ECC88EAE0697C20A5455FE56786669CB5AE056EEB29E74466146AF
F3E426AE160FC3D77991418A44C2C1C2657B82DE0F4F41E427B0CE3C46690DD2
41F61D5924F167F36780C55546D189C5568C2CD1201269FFDB9EA9B63C5F9B7D
A6452CA02D8C793134BF923B77431B853E2F6923AEC880D580CF2F9D6E3EEBB7
CE73D00475B0139DA7B5A046BDFA13D8CB9CAF0915C6A32E64860599E1236DB0
7D7043FCA235E9038CEFA1382308250460665F036383ED916F6FDDB0AD58E758
6F0BB9E7B3E19E3CE31D7CAB40A6CB62C309D6AC7F1CA76E440AB9CF9A287A11
368A1481A2A1CAB4050A3E338003CBF8550C649779FDC94043026B9C4B44BFC9
6634E1C31A548C68B30574474B51CF2846D72483A2D99FB72028A8CA5FC69F82
82A617ABD7BE7FA72E5434BC0BE6AC1D1C587457B4C038F8D7120ED15B3F9A55
A3C3C12EE40A74DAE2BEB063ADAA06004B7C59E43537DCC312DF460212CA0516
1BA0F971E3198165413BD0223523EE0936E586D7AE4E31A6A0A98C6106829A3F
C508E20E114B0B46C68ADB1545A6766AD3A04964441B8596D121D89A7A12D3E6
5CBAB939874EDD5F9595C0A9ED36C5AB230099F8E62C35A91096EA2E28DCE98D
0E23B6D1510A6AB7F2E3A2DCB40EADE92A9A035A0279B8F3B927261C05A9ABE7
ABCCF8F745504932515A54ED50A6418F8BFEA37EFC873E9C6B6BB96CF5517D0A
2CB00000C1E27249C506972B80EA208644C80AC86288718B03E31FD6F6ACFA00
213C5944FA27017DAECF2B97681CB4963252EE375810F18F01501C422A669764
F5847BA31CD751436C4E299046302C8335F78AF06E1EE7ED17276D4082C2D532
E42ECFF4395EB7758184CD6157774BAFB23835E848D891F1FF6E3BA1264EDD21
9C1F7532F5CB8779BAC3458BB0F36CD5A1B5568E941D0BD39B5FFCC13E298280
91F0E6EB79E7F1793161FDF321C2AAB74BF5B14BF899A47B7393A760D4D51220
B7F68FDE094BE126DCB02B55D5779FD607CDC958108F2D4FCD960FC6AA48A8E0
40D400526208AA7B651C5A5C1E3E5C8E7EBD4AD0846B0DC7BFFAE32024DCB9D7
5B502EA6A307BC78879F7FB9A9D45C73F8D50797B7133C910E2A9EC981C28156
E9571ED6403B3DB3D9EFB6DAE658982FB930769790CD348E04E39A5F06D0543E
ED96054073CBE7891907F506A2AB4FCD670786CBF01A60059461C4A7D981A508
BFC143619884C54F5002BB8D8F133048F247C1BEF9A9539D00AD7244CEF1927C
0DDEFDE7CFB19D56C8C970911293AB5DC9CF7535664BCAD8721EE2BFD8F16B57
B2BCE1E4AEF580A8E49892C8BBB4D2D453056E928F18D03ECB96A95ED0EDF1BD
9567D0B4F726B74CF86496D38B821BE4E1B264A8A76B6802C74AE04382EE3E14
BAE8CE8A48A6FF7614B1521E934BDD7B46D569CA4F1A4F1B396FD26549AF9576
DFFE868BFD2E68827D6F64D488A38EDD3BEE194490AEA5791780C4E22BEC2844
A25740C0AAF946DFE87E5254BE6986919CAE9BF1E0AC7E2E448F3ED5C4186D82
F6A7858A463C054E616DC68B3498CDADE5A4FD9F36BC6833C2B64C2549BBCBC5
090A24B8359535C4B00A154912CEDB055BDE89839A695566847A4B177E8124BA
87EE5AA51CACB890C62D9B7A881662D20611C8E8092954C753ACF1B0B5922D00
2EAC1ECC0F3FDFCC4DD90E00F1208BF2011E3B0C361E84842D16EBBE919D0612
BEB5E94913F3D3C2227C3245882516EE482C99A8E1E50E9C0354289EDDFFDF4E
A1B77E79DF139FA035CB4121328769BC1C5BF005E83652C5F0FEA2E32EF780DE
C920F4D9834B1DE03D4509D63A5924B592DFCA0DD41AE67E4E33BC75578881CC
6E9108F81FA02DD43DAB4234ADEB4BA9B12C2E0D65ACF773F11D39F2DE8FCBC9
23AAE60819B88446183049DACAF75CDE3160ACF30A1B6979D16E7B9166476A59
388C05BB4863B667B74189B44074909C01A20EDD20FFFC0DC44172444C3F4492
13D5D91CC5BE01647BA9BB43344F6A5B51E315DF81A2C5F15B0B9A9140921966
FD2798839BC0C2B435F19F53927A5CAD86D0ED5882C999B844B800F541E4D121
D424F3F82918E32A0E42E7AD6D0D9F6B36DF04CB46
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTT10
%!PS-AdobeFont-1.1: CMTT10 1.00B
%%CreationDate: 1992 Apr 26 10:42:42
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 47 /slash put
dup 58 /colon put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
readonly def
/FontBBox{-4 -235 731 800}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8232429ED8B7CF6A3D879A2D19
38DD5C4467F9DD8C5D1A2000B3A6BF2F25629BAEC199AE8BD4BA6ED9BBF7DABF
D0E153BAB1C17900D4FCE209622ACD19E7C74C2807D0397357ED07AB460D5204
EB3A45B7AC4D106B7303AD8348853032A745F417943F9B4FED652B835AA49727
A8B4117AFF1D4BCE831EB510B6851796D0BE6982B76620CB3CE0C22CACDD4593
F244C14EEC0E5A7C4AC42392F81C01BC4257FE12AF33F4BFEA9108FF11CF9714
4DD6EC70A2C4C1E4F328A1EB25E43525FB1E16C07E28CC359DF61F426B7D41EA
6A0C84DD63275395A503AAE908E1C82D389FD12A21E86999799E7F24A994472E
A10EAE77096709BE0D11AAD24A30D96E15A51D720AFB3B10D2E0AC8DC1A1204B
E8725E00D7E3A96F9978BC19377034D93D080C4391E579C34FF9FC2379CB119F
1E5BBEA91AE20F343C6420BE1E2BD0636B04FCCC0BEE0DC2D56D66F06DB22438
452822CBEAF03EE9EAA8398F276EC0D92A7FB978C17805DB2F4A7DFBA56FD6AF
8670EB364F01DE8FCAFBAF657D68C3A03112915736CEABAA8BA5C0AC25288369
5D49BD891FABEFE8699A0AE3ED85B48ACB22229E15623399C93DE7D935734ADA
DA7A1462C111D44AD53EA35B57E5D0B5FC0B481820E43222DB8EFCD5D30E15F9
BA304FA879392EE0BCC0E1A61E74B3A1FC3A3D170218D7244580C7AA0DC65D19
741FA5FE6F8CBF60250ACC27454BBF0897CA4B909C83A56672958752ED4B5E79
E18660764F155E86F09EFA9F7685F2F5027EC85A775287B30E2069DE4E4D5712
E7D033481A53A2702BA7542C71062173039030CF28D8B9C63B5596A9B42B33E7
D922944A38713383D3648A4AF160A3B0C8F3379BA4372BE2E7EA49AABA75AEEE
C5DDE1D8BF68483C3D21271280ABB91D54CC819680322EAB72E1250A760BC8DC
FF798F2ABFC4F3539392985C4CB324B0007229586D1E0321559F67C057FD7902
194490A4C133DA790FF3BF23A13C2B1B69EEB75950F9106F2BA1E3CA65C90FF5
931DADF03DA48AFB8561FC2E710087251BFC42B80B297A3DB0DA138A7622A931
DA293B0C740987ACE9F2A8EC2DB98F85783C01623FD3612C7E4A84FD93446770
C3DD7431F955A5F3734F6931BD790F0A45B8D17CB74BDAA4BFF6DAB5380CBF61
72F37CB67A909E2842E0AC5D9D07D01A4BABBDE2AC70FE5753460D7E1A708B7D
0EFB2B5FF55F9E4571C466AF1F91E545585845B09D855C3A01F713C1BF081EB2
7E2A0E598708737D475BEDAF60BC100FD0A0628C6001A203348CF6A3AFEE6DEA
A2EB57E35599FAD0B8A52BE1B081FC4B5664114E7A71906DB43D150337D2F47A
6AE31CB21F0A689336D70C3119180B78C2066FED4D6719AC8D52F7CA1D32A22C
09EE6ED97334091442AE7417DF9AA9D14397AC32017884DF605AEB4271A8D232
06617653EF1066578DBC01294709653F77EA622BCD4D19839334B2425736AA29
1CFE694FA12EAA14F25DFD9925604E5B30C8EB8F4A04DEF3A43B137D875DBDD1
5F05B2612654089FB0876EB1608A5B6B4613A1A07FBADF427CA6DAD9789170AA
428D34B53AA159BBD57FB065E3B9EE857F930D90A93C9B8C6E04AA9EBFD49F2D
CC7D3F6BFC6D4267A9E284EA9DB838A16A02EDEBDEA55FFD30F298EFC5012BE4
DCF580D09F1C19476442FEF624661780D7F65737FC6C9BCC6182DF29C05B4FEB
811A1506CBBD890B01E9E1968F215A80BBB9A5ADE84795059D0A12F0E3572CF0
A610D12CC0AD74400D8AEC7F75C0CC3F487DAD6199782286304FCD7FCC2E2C63
710E0BBF198F4FFFD53D6BBEC2D4C6008746273D21810988C351A5970F5B6EE0
64A9A7B27C42F407217E411345D5C9788C07C46323E7DB3FF27A501899A2742F
F0733AF93929B7B92D397BFF0EFDB107ABAF20B369BB21CC6ADAD8D3DBDB4800
B4E0DAF05F3C423C07478D0634857B76EBE2ACFF9DD50C858DC2886C921C5588
10FFA918950210C5C3F430C1DD720BBC50B8BDB95075416E73E6727C49F6C230
B7CF3B31204238B32550FB4431894B10BFDFB6BA449D5C674EE343DC0C512892
84C495DF7A39149DFB8CE60BAF4BF3CD59D3AA7D6B9EA42EF2C96F8DD3F15A82
FA9344E749E2FA193238D7BBBAF0DCD91AABFABD40C9E958EE3B6EFB042BA969
78FDA251862234602FC38DF3A58E642D9F62632D1131B8102A2DFA17CE5FFE86
FE4D3DAA3B446B6AC01BB1FC19D3E7F48C330CABE73C3E974E1B8001532C0E77
B09E3D7B5CF34D2875B830E71B507BA80BB3BAD9827E01857F6E87E91741A7B7
EDCAC6E4A08E90A9CA2E6779B30830407C69EAFB380B7809E38C0D3923E24FDE
84472693C51DF8BE864C8340F70C3CF98CBC095301B4BCB2FEEE1745A8F6B52E
E6E80168947201413265401F64A7EE3130F7ED1B1AF0DB3D4BD10724678C55F8
3584D621EE5EC8AFAA50CE782B67F5143436C0ECB341D7BD267FE12C8AC68F3D
348EAAA5435D36B9D457C8F31AF4BEEC0176080494E2E4316046C23A7411364C
52EF17A77860F7747E2311A4F688FEBFDC7B775BF559317B5070EF0A37D5ED9F
306E4878F8AF0356DBFBF3AA3C909A29BB52DF7808134B69C4A7BFBCB0FA3F91
A0CF3A26DDE7E1FF66A37EF421526EEE608D629DE15BAABCEA90C6A5D30A5663
50D18FAE71FD4B229F82CE72BB5CCE5CECE86C2B4C18C365A647BB16229F0CF6
045547AB0EB5A9AEFCE91ECBB3C76564D76E6B6E7BA29CB6221A9BCF2A9147BF
CE207027B68A289E318984E61112AE9A575CF414A27682D08C0D76ED3216A30F
A90475871CFF9DA2E739A81F367E19D219C9D20EF7C27A4BDF77B439DB155BD1
C28F13BDFCBC76081F8CCD59C745228AF3BCDB545722360B84F72D6501576DDB
E3FF030B008946072A6477B469A7A72D0EE3A6358D9C12D4233DA45244AB3812
5C0E7EBB15E7F1DF3C846ED3669656FC639DFCD001EF21115F7309B8F10857CB
298FFFE732BF7D90F76A281E4E89D5273F72D3D960C8569A48B7DECBD59575BC
A4D2D80F1B8E60BF42383913D2B37606F139DE7353B22D000AE96D009DF4E4DC
AB86223948AD244BD7F85B9230856D4746F136EC17EFFA54BF076F2C1101BCB7
161123EF61F2608CEBECAC4BE2F195CE2B4102989C9EF5B1DECBB925FE4D5CC6
8B256A6FD540D0BDB29519B73D946C908B4DE8C11877739E56FB1B36B4A124B1
9802BA00707CE62E7856FE26B30508521BB2C7F3CD51EAD5CE9D37316D058E85
C1B68EB10296FFEC4636F6B44E31AD7759C69FA5B91CEF82C8849D0820358090
27494442BED870097BF0DA4F3A55A679117668B2F58504929BE09FEB82FE926C
AEF96385A4AF6F5A562F3AC91FA61E16374FDCEAF0930DC77FCA74CF220C1CF0
A82B874A47B154077D68270DFFF9E617989269B98AC02F3CC5A1EBE8EBCDB757
8DA02CDDEEA7083A74EA6E5D7D32B7188B4D51098B9CC739932F047DB3897FA3
F4211CFD041D6E002EF529429A4F49045C16B0E4476985B4B8D1A4A7BE29C276
65EE69DA05D1437C7D75CA4FB9E5E36D1FB278DD1D44FF533A0F057A0616BCE0
0A8E09D9B771F946FCC6266F98F7251348C318299015479ECD4F23DA17553F01
35DBE6C5626703F9230022C968B76D6DD0023B800037DDD836DF7A3700B3B630
B984E8D916686BD93D297888525981F91BD8FCE0A381D7CAA109758C705B5EC3
EE9ADF15EE536527ACAAF8B3203DFD01899C7E924F943EE8E9E1E187A61AB257
8EB89B02E582EEBFADD07D481E1E1CC42780211E8F1F5B43630C45685B239E65
DCF3C80F522A0CAFACFADC42D8DE2774B381A72ECD90799CDE813A618595DA55
8616ABD521F3C15B8A5DAC626EC681E5E6C85ECE1B9F01A29C72C34ABDEA1795
7D8D51B2B0165BB3D934D9B465EA5E3B72B833A1AA524590D2B0FD6CAFC3341A
E305BE4D10DB52137B3DC8498605414CC9B7B209961C52F6469A14CAE0ABE292
134D7E77185A261DD31D87038FBAC2747E6BE24CDD1AB3805ACF60E81DD46015
2A43614A014500633FA86379A113C2FABD5D9EE16F115E7C74E585D1E1858944
7F67476D7AC7E6A7E7B493297FB46D8AD77287F56B31B75D274641E5CC78FAB8
BCDDEEBB8494C5D177A4822F0D2F1C0038102793D584F1BFC000073AD7072C6B
CD6CE59F4F8EE32BFE7234607A2D49507581B44206F26F9BAE4024DE3E73D779
665C94D992FF08249AA7F522BF87BCDABB1924B1AFC4328B7DD4298E61669CA5
2F3376262A371C4285E0F63F889F084BF103BFD1B2A7E22434DA9BCCC93CFDDB
1F65AF03E1997FC4BD36470471CCCB140930CDEF6ADD945E3B1557F94EFC64F2
6F5E1E204003B5470400E07FD218F2B51F7244955A775FA3DBDB65BC21326582
99F04CFD0D99034C72A8E49D4AD7B3E1E0D2544740A7EF3A5FCBF00C2ED6F449
6D559AEC1D3CD2459467E15FC41CBD81DBEF2959AFA6C0F3634FF32D74C9DED0
381449F9A6261FA4FC4713C367529D0F495A977B33B3E5EED827CE9441D827AD
095BA0470CF34B5282B6E472D086B9099FFA52F906D1B5AB2B12E9AC13CA9833
F874FCFF1C5D0C31D00D76699EE94E8DABD63837F720D4A0B789CA5B65CC7359
7B1898363561D4C5EFA8FEF6D55586C95CF0B4E0A30E75644D0E5BA54D61B618
21520FB8BF668C4CD68A2661D7CD4EBB149573BD5F53A0659F688F10400640D6
8A8BD85FE6DF1AEC7CD63454BF700B2EA22A3A55DF40859F0F20A94E07C7A8D7
D7AEBB55CB501C8191F05F22A70F587AC12CD2D794DBDAF278BADAD0B5BE50B6
AC8E28CE134FC276905EDD6F73D6FB8E02F595CFCC8F543AE7F4A8BD76BA419A
8F10215674316F870114D397622F7FBBDFD3531500F97C568FBB413FB90904DC
0C8CCAC8D99B1487B5E8D2C99B1E0C65B0E72F40F6C5E2C5E28A52D342B33342
A4E0D3B8C02271A0EBEA191440B745939CD21D9011AA404A4D1D3664EA8C7080
754DB77D76683B1B0436045885DFCF84E74D25216E33E6307F7811742AF89EB3
8967413077E3D2D0C5841DCDAD8FB8C718EC7EDF5EB488F5E9BEF0A4E20A2BD9
6A658B7AEF2AE64F56737BC8E33ED70315CAA8F987D73A297FB30E6FAE0F2213
44D5DAE39420BC749B608695A1CE2E8065B83B8E90E2E0325FB5F0450EF056D4
FEA2A8CE7758FAD9FAD2EDF61597F62F4357AC526FADE49E64F8C04D69C90C3C
A8A079E49950ACBC97561B19C71E05E0DBC89CBDFA8C6F8E4245604F7B67D049
A9BDB37BE89E0F53AF7F7989F2B1764EBD0F92738FBC6AF0937A2794FEC200CD
92759283D5C8A28E49092950725DA67CBC093CFFAD97FA91DC4E675BF721B38D
685F24BD90E081CFB2CE73847DD75B1B027578E4A8EC1A22A725AC42844C149C
552CDE067C245F913313480CB8D9DEBB5C69766E123B00897C7D36ACD730DA52
EB0D2A6EA3D1DF6C550D53713446F999EDA5BBFEDA52F87EE1CBC9184C516E98
EA6FECA3A1E4795BFDC51A61AD8A9055549378BC4F89226CB776DB32798B391E
04FE7AF62D3763834AB69E7F87A4E3E1E838639C37FC29A71F142AD978BBE2BA
5B0F7D74212F9331343FE32B6B89315D62FB3BA94034DD4C41F1BC0F6502067D
13BF0B7C0BAE9347CF1F43FFCE5F50B53A50A67249A7AC7CC90982D5DE5CF78F
CDEE64D5E31F7B1701DE237D0D88B1B0B193E97864C78FC3BE3847A1F3A26285
4A1DDB812D066D207503BD599811ED81F754A00F9461006CAE58A6ACD1DE3BE9
78C80DF6FF1FFA01A14FBD902687B0FCCF5A8D945387E9FA42BE9D7744DD3AE5
50DC5866071C0A5F056856FCE942591E1B9BA34344E6919DB150DEAA8211C9C4
E9D1991BC8E666B4D6B51686D6976C54D0B1E18F6BC1119AE8E12BD32E386BB8
8E593A81E17405C18999534138A46602D9C2AF03CFCE91C01D67659C89E12D28
F853240EB6607F3AD933A843A38D0A94
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 16 /dotlessi put
dup 19 /acute put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 126 /tilde put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E2A1040FAF2DE1FD6AFD5FD97EAAB614
956897A7BC784E9865B00EE8B49B918E886049F1F4939403EADAB83A4D8C332E
2221AF8F6F4A4954501CB6A6268AC96F7091245F034BD65542DF47BC7BBAD667
1EE6AF9187E298CB7AABA58E3FB5B4C7E86616C1A830A4A937C265CC28A83EED
8F3C971D6DF5A50A615B713F5332E0CF05C754FD76916FECE4DB2807334C34E1
E4C8CE3CBB1DC5BB7E2DB148F87327A3B858619033BAE39B898338B52C0D2D12
11F92EEDD8B36B388F4E911F74366983E8EBB19D9432F0FDFF08755B1EDC6616
16DC761EE14753D14F64772E4AB6A1FF87C7CB22FE8D704FEE155AF507CB853A
32E8C1F9337318EE898D9D677BAF74663FF915C5F0336E73962775E55A37F65E
F355E8BF2AC51223E93FB2EEA99EA55B53D6C9FB94AE94059216A403A3EC3347
2E4BBE4CE9FF66D8002C636C93CCAF12CBC1C779631F0C701CA641EF35F97A14
F8BF0AF60CDF4E7F46381F29E6429FF59F8B079893B523769C01D22D88A00E6C
F39DF234669FD69CD9FCDC8ED2C7D807A35B1AEE1C2FE78E8C1E2D1E7358A3AF
8A5C4C8BDEA1834C90FF43CAF829A075591E4AC3F42183D916967F5FBC0CD766
04FF14A354F95AE335976E04B58E733987A80BFF75CBCD814C6B5C42785DD8FD
E082F79CD58DE9EA553056C0CB82ECE81B5964E65894E18635C14F7BC2022362
96A9052306639F4672E90E3B9DD8A39A81053903CBEDE182EB881D3B2011F710
346FA83A41491BF3802E1C1467BC82F61E5EF76E8795F1EFE435012F457AA8C4
2F06B000CAD2F555B88EAA66BA3B52C93946C18E9FA69BA8FF4F49C560A78F87
D3790D5F5E7F41E99E0AC8EEB0B6D766C63DEFE557A914EE6AB0DB6630B6067E
5B94A198A70F1496230D684BE02A9FCCFA6DE3C96534F2BA060F77B4DE6F3678
788B7D89F5A00504B41A06AC68FC23108486A8D7E350740F6499219BF57D4651
FCBD371B9CEB6530734A815D7D0BC937D72200CCAACD6F07D66ABC40B5D16213
77BD018A014AF3D5A4188E4531C31D153A39768EC89DEE618957CBEF1D2EF046
07D221BB041EBEFD088DDE384C29527B52FCBB7B60EF15A63BB9FF2CEC87A105
5E7448E86A689DE8F48887F3E57B9104CA9106ACBB061519C801650F334CF757
A625267ED27C28E51B408360A81BC7DFE8BA9D7BE47ACCA84C0B32CF67050B47
8B8A91FB246BEE75E1EFDD1A2D9737CEF8B63B6148E74702EFEC1CAEB7CDCD67
0DB229D589E2E9B5B16202B292990D4D56DF5A8E649BD127207576DC6C1C584C
019EE93631D91E3BD5243A3466E047C078EB8BD421B270F069536512EBD31FD1
B91B4A0067F8BE18748C2AEE3157EFD44E143E58BB337F61F0448C79C6F02B27
F89221A87A16C41BA7E930382CAE9A7E6D828400DB7B413C51EF02622AA4BAF3
9847BCD12F93F532C769CB20D26174DDE62FA5D40FD10BD2C3ACCFCBCF71FD61
7F59FBAA8CBB9B2FCA98B1BADC2EFC07887C966F4FFAF5A94566AC09148E6320
6AF81E946A5D1E4C58E6477E986D4D1A0EAA802D1A5F52A3406B6581FDD4F3C5
1C6F5B8FE3C614EC7BE47D9276D25B71A5E10D16E8B940B99DE7F9D1BEABD625
3E09155198B303AE3E07621F77D87AD4AC2374357E07596A3350905288FC0415
1C5E5A20AD4418E6596BC910E44AD5CCB05BB9318B4DF1F8EA237FBC709AB340
B90B8C3520D243C5AB40B3DB8BB1A9146A7EB4829CDCA77F3D188DB950C0701D
FD513152BD223E710A7729D95884E6E429C019062FFDC6A21455251C1594A366
F18C6A34216C9223413958D55023A6046750126599042D60B393256274AEB1EA
AFA55A1045A8257FAFD4CEF50125DFB569154D87F2FF8F05A2DC5032B2107F15
9135B36F5E41D0F699629C096E3374545C34DAB55BFFEEEEA8DC55CB53B852AE
6B6FF7889E8E8D60A3E714E1DD493214C068DD6591F11D5AAC7C6B2C7DBFBFC1
66F294D87EDDD9AF6E891524021793F2F70EF9A6166656615F348BFC60E79AA0
AEF0FD2EA7B483BD6E2AF120237A55D2DCB1D0227EDA6A445F77AB2BF5719440
7DC651AAC7471831ED159098C233C95BA0BA13A17B9AFEFAF059BEDD75A945D2
C99DD53DDCD806CF8100381A977F9B9ECA44DF2D113B63FA0C48D212FBCE6356
BF7682304FB079ECED38229F8862D3873FA0D0324E77C404BB4978FFE87AB586
4BAD145669EB31422D89DCABC3BC6B739AE66BA3E84D76331C300FCE467500A9
782CEC1BAA7E395A6394BF8628E2E071F670181D14A4B00DC3F0D3F6D020FA57
2B2E10B5B997D564DA625DCF0EB2B202676BC658D4814054BCA1B1E6BA19C11A
42B0B74B4144CAB6BDC561F79FF019974556DB03165D0730E3462E0E0F73A29A
24B470060B5D57A363D560A5F1CD13671A2F27D3EF5D0454D429099EFFA10345
D3134CB9C343CBCFCC90AFC7E0948411F4AECC42F03E3E4BB9F71ABB865E2F99
120209DABE7E5EA492CCD13F02F62B23BBECE6DCDD9F12AF94D099887F9B1EA5
CA49E1960524C9F5474D75626C98742E62CBDE1E92ED1A98C6F9CD34414280AA
6618A27D6665F0195DE8D0ED253DE28A30356B314E5140F7AF7A94AABA53B7EC
46C12CA152EBB67F1D125BEE89270868A6C706B506659E10C620240D9B3F0B30
857DEBB354F3076C07499C4FA6A944D85A03FF0ED9AD91A473D8B20CF58C27B3
7FA1B26A2E82E0CED99F21196377F214077F41929B1E1D55DA429B9BE58B539E
9FFE58F9FC9241DB47BED01C413681B4BC8048E7544BC6E64AB98DB6973725C1
CE893A1C264A7914727A50704C686B3D4AE44EF2B70EF27E9FB8320636882FB4
9C71186CA7E19044C532ED5BDC96EEBC6C62F28F7940C2B82084D2B5426B8103
69E4789024989AEACCFF65FF72D3BAD83FE76C0C50D27EE880800AFEAC775F0D
8F8E604EC0B377949E8CA593F1B2281EFE0CABBC5745F338BCE445674585C7BD
74A524F82975ADAF195A75467B84E32A71C88536A9F56739EBD006453E222DDF
BCC76DA65C54CAA62D6BB645719AEF40629CC592664BCDE2CE7BE21983F367EF
734CDD0487E9834EFAFED9FE37D923F1992055BE3986E416C478EA8C6EED38BA
6D3F32E26C58B9ED166296350B79DDDBE3E40CE2F71AC3DFF946DE5C4D2F8220
3645854F3156307A457F4F3F6ECDD304D53EE1DDA3A306955BE41E2FFBF91DF6
2255E0EC2B0142D1C405FEDC1466EEEDCBEAF95D737404DD1442B11100FAB20E
8EE33D81C6BA2A8FBF097EA8B930D12A3DBA785218440EB5B8F46CA409D619AD
E3D542F53EF494F3115DB4D25A5C3192EA554406B7B7D6CDD3444AB885A5656E
8E60C3989BC1DD3244348B95A50E6193DBE85598AB04D6D78DE31B18F8A54360
8E47913A6840C9496E35E5136D99E34CD8B6827721E87A1516F02C4A10FF2BDC
BB0A8CB18E4073C6F3BE94CB4A4E8CA67AFBAC78CE810E0E57439B23D24E7063
B0ECAEE4300F52386E6E9B2154C2A8BF3504CE7BF3D60C67888F7E4BE0D0A2CE
01D815F64A402B7BCDA14EE5F9EA9A9F6B1DBA8D531B294DE77A99A40C36FD29
05D18A5C5EF009CB79AE26FBBADF052D87164DA3CD3BD16204AD5533BC4B1998
91C9FAB36147C1A32C87BCC2CA4C4320E5389D0F9756111C90DCAA56611BF52D
4CF1CEBA700378AA491BC8137420D620D493DF36C80FC1F88FD68638498AAF64
FE71D936D8F5E2145436EBD9867EA224C0F3E5C02A70A847B9770ED94938D447
0A8AE16549A641D9FB0355B6DE2015EE53653F913E3329284C6F8F240AB5BF79
1319B6F8BF68CC69471A6E83FBCF8D501DFBF4E40132CCE439DB4A63DEE7C9E8
A058782DD8B9BB85D6D95231A8FE8B1A19DFA5D077ED70DAFE1D3D08746695B7
85104C571D97F0263C2932C7EC855E339F41914362F1921D39A8CAF13B4B330F
90F66C9D63BE89E3B249D9A763535FA776F1054FC00144240F75E118DA313935
E51F03EF53257EBCB99197F5A71FCF0D0BDEC1ADF323BBE11222483D3455838C
9735C004642FE7DB276709E8B0A7525F0008480310711331A443C3C9A7A60992
9473050311CCD0425D79941BE568D7DDF7A87753DDE2F270601DDE05CCCEE878
D49424D34D89D1CE61A969A947BC7F70F9D1623065A108894ED04C5F4A56F9FC
7958AC46FAF6C68584B8CE340657931C5C6917246F9229B78F4AF88197495513
F3983FB26ACA96608F9B9A00DECCE3D4F1C6CF86A0BF500ED4C3C01EC519C0BF
19C3AA1A08770C955E92DE6EAC581399E06AF1C389CD3E22744A1C634FFD4E0C
6391C4BF522239CEB697080E55B4B66AC0BDA2436ADC2FBFF0E3727F391DEDA9
C0F04690A6C454E07868CDA0220D5D5ED290439F83E55A7E179AACBBD7CE70F1
0AF5D827C7CF5B71A6496B26801D51DF1CE3357B186DB2BCAD6FEF5D62CE96C3
F8898BE6579F9CF044AA46D6AA3E71FC1C83B0F62B03FE2F52764A1121FABBFD
099AAE6634AB4ED80E3F6E28AF134DEEF53CB5BC7B2FF142CCFA05127A03EB80
DEFD04D3FA8E57F7A6AF931B637BBE64638D46640CD3F6FE359CCEA1C03FD3E6
0576AAE729412ABC0C96E52108E16FD56EBCD71D225BEC6149E98584A5AF5AD2
54632B02BC230F77482CA10E6FE4FB3D6C973BBBF85318B0EB88CEEADF311713
278729BFD35CD360491E60D0A1430ECF1B81B4FA72FB76E65D77827633BD4060
762D487759581D532FC2C7A1C9740F9F853F0F79EEA4DE82BD344616490C2C2C
7B4D324A0B6E71FC1E8DA94789061D292739F4AA7E4F916C3D7339CB41684044
7E81F094E8A318C3AA82C321534F2C056CCAB06A27571BF5A31FDB37AA5F8999
F7BC7E22AADD388A88DD2D2C08DE8E9D454D971552D45357D850B88DB319EE43
CB97F42F6736A45BCC02BA51163FFA4E9D0FF53592CAB2D0D23DF72C1D51095B
8DA886FF7474EEF275D796530B5D92B65554BA6CCED7C28E16126D29B93AE563
31B4443007246E8B2CECC613C8DCE079A98B9C308132FA6557B4DC43B3636AF1
4476673CBC493E2A39980BDB990917DD7FB9AAFE099F0DAFB8BBDEE1CDA2EA25
7DDA94328299E8ED9F2ECDE76AD0002C79287BA0754C62E68ED022AC7531060D
49E886B0D14458DB6B666EE26A1A975A41186E4DDBEAEC884E0E4423048CC3A6
B6571D87C22EC59ADBF0729A2ED22936CE1952DBE8C21F98D4382D5066C8D102
1011FED86EB6794BC277D4AE4EBAA3801E619E005A238452868DF84F826FF7A0
A0AD0EA9C89F45789AA8026D498FDC785D90929368313BC0AA49D94DD080E075
E40238AE198C17B7B0F46D4F2F0EAFD691B91941FEBCD0593189494A3B0B9AA6
BF6B3E682F3024CF2C87A63F8F25738C6B51B3C870F2CF80F77ACC29B7F086F4
19F3546E99C084F3582DE879F8FF72222133BDBDD63ED1F4402424D7DB417AE8
C1328BE8932E04F66910CD4E8D75E3E83DDD9EFAB685D3B582FBBAACF2A3AB49
FA0E86518E586E4639F627F752EC8299DDE8B625751414A708CD1DB27398C68F
79E44B84E2FA122944FA57CC375535CFA16D1187848301C5064D53FC01F5E661
12E1CF5033D0CC1765460138FA791BAF932427F58278248CDB2C2E1CDA6C8888
0B9F55EC687FFF1FD720A8082FD21FDAEEF81A2581F4EA47AE62D863F5AE9EBC
3709EEF63C04CE68DB4E17400D96A0C0AEFB09569958DCD71E00C308733B98D0
F6D8791D481D17DFDE55700A5DE2BD2B2A21D63B796C0C0ACF47D7515A34B9D0
B23C8367B46C0EE6A16C3A64CBAFF5A2DE94AEED72C31EA077AA136F3D3D1319
E4F39DD4B092E453F6E56BCA8C2C17CFE0391F1DF3B65167A6A92C78B194DBFF
185708E9A2B3D210FB0B9780FED09F02BBA54815275547A20BB1A856778AD0E8
1045973357D179DAE6A8CA117A455287752F03BE19CB90D7600E2D79E258EA9B
20ABAE6ACB0B0569F2D08BF5C7B6A1625C39D346CAB35A5AA5DD4836B6F5BBAD
7680633DBCDC63B4E4DB5C34C87F2A70453FC6738115A4877CFA555656D46B4A
CF24262A131057A01B8B61671A827D084F358E7E4C6632CD41E4362BD7E2458C
8AAF55E6FF4A5F433F7E75D0EE0987A60491B7869FC801536C90A3608BF28632
9A33334E1AC4AB9A8A324D226DB669F6637B1A39E62500482D71FEE7192E76C7
706E477FDDAB6F2CAB480EA54E581A0C6C2FC26934BF67F3DEB8C8B086294056
31A963CFB8A80A10C31286876830CED5F20EE2113D26D88CDA9351CE33B7A3AC
96E492937CA0808FF341A2B3ED7AB5599D88BE3B70399187846531C88C6ECA21
A1D521A020C2F23838A1E9FB93B41E4C1C94E9D23C4BFAA2E1563B651CD81B50
E901EBB3EEF9FB0FCEDA38BD393F5B2CC98AEF2A91083922CB9049D032D17A26
EC52B798E059EC2E915B535EAE2D7D588D93B84659420C2691B4822210B41ECD
FDE07BBCC5636A3A7A6B8CBC98969290224DB29709ABC859447280744B2C1771
33881D13D86A023C1FD650495E260B1F1B7D98ECCDE892020AC6A7F24911EF8D
BAAC5AC1A3217BCD54A93115F852E68777031BF6A616A87654C042AD02C4FBA2
0A1E2A345185FA9D0CF32E0E92C037372473B38D086051F7E34FDFF88A008888
696429655676672A164D74E8497187487C7FF69D8B243762427995E39E6957A3
65904F6CA827D4CD76C31D34369BE9BEA295D629F14576B37D9C85E04A03956E
960F1B19C0647416B7EAE4C0A83F1EDEBFB4D40A8E4FC2A59532DEDF13FD964C
52528E544D85873902004D7F93A080D73455277A7AAE5580D4C82EEDB2FC6E96
28DFFDA059BB43388929A2FD9800E12F1785475696064E55A651904CB71AC017
9DE2BED77CC9F23001DB93ACEBDC850A31D5CA456CB29EA97AC59AAE18D195AF
BD2022558E1E87F14D291EF2A0B9F9F5A3E5242FC52DF8F14E37F038E6490399
F132042647E154BBAEFFB8D7D63D47CDA9469585EF1CBB497FE3656B3577434F
43312523C259EC95AC8DAD0249830F6254987E6FFFE4202EDD6D43807B0BBBE6
9F3132317321B26C716B02D0F867A6F5359955E4568585D2D889CDBF437452EF
FBDEAA6119A23AF10EDF1A360578D710C728A0218A5F9684174B9C79F4ADD58C
5D990EC334FD04C56EA2827EB2032CC382F9B14B49EA744F24F27DFB078B1A2E
D81771D8A9262F45039B5F44C36130F4C7391B1CA1F4057A62DB2D31B40C79A8
D04618D967A7DE895EAF4F884C8762E2AEDD2DACF34E09166065D91870BA39F7
709C6F61F8A47587DC7D288EF50E5ED40C0D73B8F2A360A295FD24C4B6584974
C8BB04B674F15D90EDB67C3D639242611F5CE6CD00936BE6E0E779CA28579F2C
264F407A6AB4AA49B443C48D27E7AEE2920D2D6D8EDD07DB17557458287C6DD9
6A642D01891D828F3CAE5C0F8E62E3F00ADCC373FD298E6986C602CE52EFA2C5
B451DEAC940FFBD1681EACCA3A7E05DACC7D9ECB1C96C66D245BFEEEA19E2338
3DDF030434684C699FB2573EFF2625C8E5882D1DB2A14DFAEDDF9486F28D6083
D3F0FF254F5B75D7480DBB0E644EAA2275B726AA3BAFEC67CED379AF4D27291C
5EE27B9F65A8DD7EAD22540225CCE507A85CE3C4C14FF291AA3E8153466DB12F
EC11BAE9B84C19E5A3BF4BAAA0320976333674E0F41A89473F1A091C8B4416F0
8A4DD8D770135293FA934399B05F26E18161093FDA6C6FBF6C40B00E6274E918
DD5D626480950036CE4329DC7EB25A7DFC48C4C95996F1D5CD5610AF28EDE356
EC523E9EF45211FCDD12A1AA0D0C7619A1ADF5282D61FAA0408E1B6D24A95A84
C462A0848ECD75C443473D758F2C4DA6B2784320F40C982AEF8CFC98E016EAAB
3032C4D7C790E9AD1CC782AC63EFBE4F0843A57B00A3D6B436C9CA75C7C7962D
A62BC4D7B9D8EEF4B684582434B0F026B480BF6B7020D1EB82525948E5007E37
4E66E4AE5DF60291A1BEEB815BA31E8773CA6CEE90B55E58A44660929D199AD1
EDD1D2207C808230F06023F8F859939FCC884D5B90EE6E31702C47218D98DDED
752BA9208B984B9320AE9F666464F98016DA19CAB8B5F54FEEA44B2EC50754CC
3934899F99B6B089F81A107F53DE4C07C3AFF9D8B46F339FE93D4D294BEEB7DA
CA6E38CA6BF8D0F8CFC8E9C618C00E7851F7988E4144A96496E8216D0CE1CFDD
88F165C5CCF7A4F06D38FF81C239A9D800EFFF537292CB8668F4B2747538677E
460BBB0831F8C8F4773F2E7BD629258C0D191B5F504637E1F0CCCFFD891D43E5
936AB8EA93A400A7CA97FC08CE9503C99F2580B2EA79A3A08173B7C3BB08533C
DD9E58F2C57D15FADBBE6B165DEDBD22FC5DCA88E5808CE53289D953CADC2765
87926422F6CC4768DA72F5969783E85141CD635AE5390C8F5A67CF81D9DC7D5B
6E2E46E0AB0A06E3950EBA2AD65FC4448D340DC02C1433A9EA9E3CB00EF77F76
DE2BA1C72179C4286C4F2D368DD8A005BBDB958A1FFC2EB19F0D9AF817FFF820
BE9B2A5530839D6E50483AB3B2CCA776F0829448B0E788429952DF1AF5187D31
58E4A8DD89E3C23228460B63F709ADAB27095588BDFEA59814849C845670A003
FB65543C9D6BA92E5C034BB523DC26A00F7B885A28E5920553AC58E9D4B1FFF2
D728A8B6A68A6D6B4685AD4A3981EFA076F9A70C3F19038B005DCA8ADF79D6EE
1EC54DBA0AD82B9F5C93E41C626C72FAB3089CF2270118215A0610A5101DF8C8
7A32130B64C68EBBBF3C14EBD9076176DDFE0A3DB29816334C09FCCE173BA480
E0BD0BF984C5108FAB89CE91947B0BBACFF989F36DDBFA1AD57EB4A0776167C1
A31B214F493D048ADF73AEE4F093319518401564C457FFFDA84B16AE5FB85D65
4BC8923E7894602A844EF89BBC37BAF0C42F2CE6592EAACC521BDCE686C39A78
8CFE5C6AABB131D8B464299CFC99E27194F0B159754696633BDC21CB5385D06E
AA9CF3F6D643B4A7DF192EB6FEF4E9141290AB572DC3E1C31F4983988D556F98
28B648D501048CC4BF099563B9ACB5D3F0A6E0E94FEADA89F8A3214C47510589
B61A5626AF57B2EF247C12B9F2CE4C08EB2BDEDC668008439BCC99C7FF235184
807361510E30B40490F4637D9A815CD9B2204DC3E7E0EA0ADDD3E00D444E61F0
D36A365EE6293933C10BB926EB98584832965EFEFE83F0C4BE9341A42DE9E12E
A111C5A33014C4ADF1C4DFC563AEE73F61AEEE03708C0E67361D840AD5022A39
E8F7A2488B8B2F108D8525F21B6954C1E96AF2494AA69026B8C29AE0BAF75153
8A26A8450801AB05EFC6C008E9BD7487AFE91D343FD1001F3EF23C1F84B97E5D
6CE5C1D55478124C7A4C9049A81C906E3CC3CD67207035682504E5132EA896D1
BCAF80E1E6B3E6440DDC207DCA221A807F1A39331723293F13477D6144BEFE12
A45C3D3007429D001569F7192B16880314D5FA114F2FD94582DE2AD747B8F029
3BCD3C8D3526404D99B57419FBD6D5759D5DC254A4791126EE3C872BC2992968
6EC728A28005FA51E714D65FB1827C25BA9B897030384DF94E5B684AAC789E77
D64FA86ED8C214636866EC5E5006E949277A32DE7DD9BD6AB2F5DC738644A240
AE65A560DF9767316E3F2434E4BD7577A7BAC8938EB2696FE202C8A5FC93605C
A1BE1BCF1224F2CA703C7F1B432C33CCD6A93E44807B7369D12E4C96DE29ED81
76FA7B4F07BC316C1E16565D59FFDE317D98824213CCAA9C3C0A446F6C3EB2C8
3D3AC1D6415DE30B15368447DB4B87543BC4A747CC290623A8DE1CF6621E1DF7
6973FB071E1AFED095F435D44E53A162D8AF4949EA93A1FD98803AF8580C2CF6
2D428D5B0DE946C262570762E5C2EA4A346C3BA6C89DBFDA1CC659DFFB184A32
EEE8EADB0EE1A0C1A875F1F304051CA8F61C4B2243D8EDEED413EA2D7B801D9D
44C2C20E33D88CEF8010933F2B4313FD18E3C3F4B6A6CEB8296DC73E37EDFD08
45BF19CE76100D85FDE39A1525D55DF4EB3FEDB436A7EE0AAE70B2422584A93D
568A49E3433F527D6C62D1626E07E17BDFF27816A9E201F8F2413C211D32E168
E37E9179A6A4F78E58216D01A25183267B2A943FD53213BA6CE11DB726C3A236
5773BF4CC1B3C65CD277EEDE30FBAD73EC4F136598478F3CFD37644B0571EF62
54EAD27B446AFABDB456843D64ECE484F751A220EB2C84296AEA3C4C8D3B02AE
6BC70834C0C34239E6485C21049DCCF33AA6AF65AC577D520658C5BF50AD0CE6
E3399FFFAD7DF1D4299EF695083E8683ED45581CF3BC25FA0CFB9DDCF7FC3C0F
779505E0BB169F8C3CE5C0E1D9F44691946FB9E8171BAC2DEC9695BCE6812A63
64029A51B51151095ECF7EADC3CF4CA5F213E724C7AF001DC971B24F29FF9B9C
5ADE36D61CFDFEBD82DC6A9E6BB2D45DA96DE8759214968D96F702FE145D9D90
EB95826B88EA94FA9B4254A718E2A867CBCEFACCC2A2EE5A81A0BC11DE94E653
EDA3496F5CB735D0C98D7AF705E8520988DB09A34BE7F593B7C1CE039CBC4BDC
3327BDD085324218A1E18D77BFECD908DF5F67D9A5B53DD9A64AE8C6ED76E06D
27EC94C2C202F7481C5F70E49FC1D5D5639723C8C0EE317D4E4D0440BE21AFC6
BB1004D8B899055ABF8C9399F3C3A5724E10BB38E7142B261D4DB8A86E22255E
00AA5D39CC746D5F3A444E013C370054B901F6B601F314C84E0CA444EFA660CB
876239DA024FAFDF9912EA57EC5D2F675145DBF8A0A6F2F30AD23789569A2B01
B221A92F1A06C11E4D9EEEA4F4157077644710ED3747053390ECD3AD6612C8BE
FCB10C211AE71460D53E1664A647455F7FCBCAB515BDA5CB2F52280BFE352535
BB68D315101CC195B709CF886119F93C2AE6BE6E16AFDE43CC3CBB8101056DFD
3B28A4EA35AF3BDD1C6FA1040E7EF1A28431FCF8960C3DB72D89E49A80245680
468740AC6BC2E3A93A092F55C4CF14331792F942FDEC97108558891298BD0984
E796B6DE480A16E8F6F6E1C9C47784F687A4E748A223C2564E8057E20A916F5F
431F3CC0DA46798F729690828BE543D34C2B215D85F8ADB77E6642EDF764814C
198F2866803BC7DCE42229AC212E95054ED92F0BCC6A31DBADCE35181F68C05C
BD24BBCA7F346AE87694AE8D3EE109A39644440FF8D39BD44407A44CC50889C1
52AC89515BF2727E57A9E91DB32022C74DC0AA38ED4E45E01D29F91B7947C491
0C6F592728D5508865337E67EC1BCC4BE3C2DC9E54C97FBB06F19B5D7645AF3D
814A936D6D0BF0DB9703F71E7321457621C25F189862CB8AB6E0E2F613C83CC1
CADDCDCDA3CEF4878DCA345DB5D1F7427D3AC28910102260B9AF89096643AFFC
8FF09273509BEFA23C2C1B4EF625FBAD24A1D0EE45DD4B547DF2DBECD5CE80C5
E57D5B819EAE2E12B7EA0DFF8D97C511E5860F26F6E3FA0E283153EE2CD5F799
B32A1CB9149B8412D8D38C93EACD03AB1F3C7484A1A668E5D3ACF2AD1EFA2C3B
ACA5EA06541FA08D7EC644371A186072EB5BF6C79A8100318246E438ED95A57B
623DD04615E7AD653B7A1729662A105A65ABB3D4839EB3EA7E7C942173E3938C
86A7ABB48B529264992B36515508782EF0454A9EA9BDDC5CBE051BA52A57B86D
8885A5F7E059F01B108B407C16D1831DDD95D231472249A9D9FCDD92498BD030
4A26414B295A90D29514D5EA36DABA2BE1FD3EC1615B9EFA7306BDD5C253A243
E6A53964EA00913A2AEED94016AC4B783A18733C9818054F9644FCC68FFC8835
C045AE0F5A04A8F4AF87851ED25610F4D758021B4205399F1B2FDC79EE2D228A
9F4EEAB897CBBF5B3626885A5FC39E0FA08796EFE086D7BA17BE3D8B0B7E9986
03B9F4B3BACCFB53AC88E1274C4AC9F36D34E0E61168EB131DC6CC479E282BF8
FC577E1DF1262049C006507132AF77FE225A2B38A58C1EA62D5B370F7F69D9B3
8DE9EF0470A25DB44998DDEAB5EE8459A49B5A994357C35E16DDF8B7B08655D5
42C69BC54DB71C363E6D716604D3593760A0986AB462FCE410B74416B4401D99
8C060B4A34975D14F33F6EB219E41CE10E5F8652A33220B0082C452806EA60B0
DD1FFACA40DF2D86A13DA98D903A88CDF8C5573DDE86AFE7C45399DEB3F08BF5
7B8D4D1295C5B8E339269CEC6BADF64136D1DF022C494061424FBC20BF078FF4
B5923DB2A480D4F1562ECA923DCDE56D1B72F4AE01C04F6F3CC9A0A36E19D4D2
BB836EF3E242EC4F7CCE5B45B5D30709E1EB799F506227568076A9D0D859BB03
6523731DCD0749A365F7B3F1814532541A587546F9D540844A07BFC60EB478FE
85ABFA6F8AFA0F2A99A461AE15B7A7A960011153A15D4257AD232982ADF08C31
800BB1FB880BDAAA7AB9AA16AFE63AB453F284407261F06326855BE8620CBCF4
25192783157BF72109A0CC964F774907968AB10BBDC5F104FD0022246B838F5A
36824DA5D76220180DF7639C99740035BE81C215A07762B3EF9D336D2966E65B
59C1BD808EC3F833B0C630BC0C096A49B29AB938BBDA8E825C0F32B3E4B747BF
CEFCE225171EAB59F55B3D6319BAE0B75C7E6BB982F0D22D1C4BB2E619BE6190
BF2AF112851AB7A0267F1316A104EBCA33202A4BF662717F272F56DE7297BC23
19CD2B4758D337F8F89F6178EE2494D250F6003F6808C664008D9371AEED8484
1F24FA6A8F3746CC79344B0A88652F09FA1A2D1F947E95AA62DA56A7F86696FC
4C04B0CBFD637B476343CD8C2D2559CB0B40711E579F0DC207B743F51B3C28FC
033A5E279C429B72EBC3DE789E7E523179BCF1BE319754DBD6A6312FCD962F7F
BF94383799DCC8E206E2B87575E411772707B73FA10C984BEAAD9368C42366BB
2C29B6D49DC8BEC162E2486D852157C80E0237FB1FB9C2EA21AB6A7DE64B9681
D25EF8D21F2FB4559BF790B3FDA061DF9502D583D928C9C5728875B89B00D5C4
EFBE8089359DBD0E8AA3F0498832E33BCB8148F506DA456A632D263E0CE5F75A
8591A49DDFB27DA9B6CDE53C969EE2BAFDAC689ED6B4A8737DBE3CF0FA601285
A081E1D874739FAAF6064C879B02E04A8FD54EBCD774E191583AA6894E4E61A7
6396769BF1C3B0453393B4D541404DE1F01BD8406D47365F55F034845EC3A215
22F90ABFDB8C59685FA01818B46A2E841C42085A2A5F5F7E6AB888FBF4A82063
C1929C1741B649CBBE9C9932102E02BA775A87815DD577A1D5B727E9E3BD2124
006DCF5C831B6A7391A80336D279BE544DA086DA64D65009F9C138F51981B759
516DE25278295F31403D2703277D6A0E9275681152E0F9F0BA9A40E5B5706BA7
96FFF605734FDCF4AEAE1CB87987349A0E2BA26E48D0DAC2D04134F2A8B20D48
9DD936D44458B5063F500F440D7387E056303D8623D29534F7DA9DE6AE772A58
CCF6DB503A99550983B30DB8BE7BF0CE3D78E5A9C49F33F49374C2D0DD2EFD2B
508DDFF566C12EB4187D2BD2809B3B64B6F294C293C502B553F3EE6276EB2395
D5FAA42FA3A42EC19C93B6A56BCB24CABC381BFF241A6DB01EA946C80C56B852
8185242CBE365B2FA9DE431CA9A3EF13CCE7878ECA7D599EB3209C27E40671B3
8BADE9EAB05A8B34BE21438BE912FDFB5039E9F1895372958F7F29CBEECA7E6F
004CFA43431CDF3590574501671EFA56FC2E880C66074EE5D36E677E6634B90D
63AB8714FAE62712A67C8B70C7732BE4597A81E05B73C65724881FE16A1928FD
455F277EA641B0C767C8A2C7CBDCC3D749D8D1451092FD32F526821C215017E9
57075E26E0A389733C0F1F619DF07A6685DE5EE703622C41B8BECA75182AED12
CAC7C3DCC617BAAA4554DD7181DA4121109CAC1310CC62846EB3B9B1DF46C976
C8F1D6C8508ECDC44DFE03F3F46E7FF7187BBCB87CBFB31FDBFB4A11F79CC8F3
E7459B25A21DBA6155555BE8A86B5582B84D71B6352562493F9CC4DA05B65FE3
D79073D31A4C122E3CC4AA78A5E9D864B6F7562392BCFDFA7B079CE78685838A
3B252FD90C32C775A96FB212AE37FCEC6C2A0D002683058BA7014640C4EF478B
E2A9E3F40DA267D78073F72774DD251A97C28AD1248A980E7AF31C23151743F0
EE4BB2640CDFA7F3732AA501686C2691F6F52017AF1E99DC04D7139606F9AC03
2D48D8163289048BA5CFCF9F3BF16A3BD001413C7FF2589CC0FE9620E7D6C272
B17A6F49A9D64D66480CBEA00978E2DC20E57627C17D3D65638438CD5800803E
C605D0862FA7B236D9DF7DF0D6CB224391AF718AFBC9C85D3ABA06032B0EFB1F
46AB131AB40155A4F2361E22EF215DF934442876D4EAC099C2F6060C7805B3FD
71AC12664EB977AB3FC26BAFD5217080A0ADCFF80667B0394B1FC9E9D3B315DB
8077535668B062348D76AC351394EBA4F088B3BC34EF887A57EFDD42EBF468FB
877BC632848418BF74BA143B792A04CB8E3DAE640D0FB789677D4842AD9DACBA
4DBCB8AA0F24646C8C9CA730115D8B25D04C86EA62112E01D8838FCF088345EB
D273139DEBC0DDDC8C2005CADDCBC06798B82CE89F40044334F20970A3852286
F3EEC06D9BDD18E6DC92F15C350242C5053B900AC16FF1A34DB4746BA2342DAD
159A602527C26C79FF8E1E60BE8CDCCF91F326CAFECBE3A06580A34048B65BB0
536840CB60E78186D6F25B6E6F8D5DE94E76D3038794177AACF1CA38E52F8B14
431655D791CB49B31A62D3B8D19E5093DF54826C55C66391A4D44294CE49F9FB
ABC193315C739DC06DCC71360B523DD2E0A0A46946FE683BA214F041EA75399F
C34D3636E50BA995E51893B46286CF26C6A23BC6DDF76D65A8866CA1EDAA5CCA
C90394FCDE135634DBCC0B0BFFDBB53089E423C3F4825F248E394D9CEC627967
9DD97C95CFBDFE01D3C22962BA24E88B914E053A4D5EB38179CAB93ACE857486
12B2D4D63C8EC568BD6A725E189AD5C16EC67B3FFEEC651823020F92A557C188
3870C3C24C7CC2AE92C98009E4C71CCE450448DB64179CE06CE921A84432A741
19612FD3D3938668C96E208FE51BF9585FA8BAA28B98C757E0ACFA2C0D3F04E7
E50FB4B6F41D4B86E26AA856079503049B3FB7E5A6E4EFFDE7E204C1BA1E2051
5242C1C52FADBF62A777BDF51AB199C8F5CBB03FCED0B77688E1188ABFCC2475
26AB8D3C48BBA917B1325E9A5F699386C6EE6275D677ADC0CC45A4A83712B4BE
155FA337D003039AFBA3C605409D926F4B2ED2EAD3923CCAF3EEADDBCDBA1456
B43E04EF62578FA4BAB91333E0E26831CD187B90DA59AB2214095592C7A1C78A
81A264B82B5F215AE620395F3A94CB19A4F4B9C8790D51F9DA4B32D9B0C33F25
702127C081458D8096525A983667EC20C8CD87EC428AC0BFB030D711CF056070
30796EA9EC48B8F23BDD39E78C5A33BDC47D1723D2DAFEE3D50FAF132977D3DD
D55A2DB172A3BB879F3990603FACC5B6A9EAE24500BFEBFF84381213D954B842
5115EE347DFC93EA009EC31A3982FF0F2B3236DEC42167CE531C6CD45977B90E
E8202EBAEC72ABF05C5AF72595D98009505E918E892184AE3C66F8E521AA50AD
8A3E9DB6DC67EB5A4B31F8DC154D6D54C18EAA96FB4DC0F4BAFCBBB1F4E12505
EF99D9CF3E7DA5ACCD61F923F0A50C03E5312DF2CE70BBEC90EEFBF1C316C6B3
8D92728BE6FE0BB4E8D6F9FC8FDC3D057C44E1555C04BFA582D900D80BDE6F9C
81A9D4B0E61D72C966ED75F000F877226D970D100EC4FFD9E7616FD67DF5DBFD
5BE72BB5D804CDF5429D31585C89E384AAA03B059F50CE70BD6B0E908162EA02
86281DBC0E7D4EF0A9F1BE1FEEE3635F5857733F4D00E745349E0B28074B9978
D988A3C8DF8A7F8262CCDB280D2D72CA228BEA70FB0B0C2022C49BE79F4D4FCC
78E7D217BC761E846A22A99848930234538A1B8C69F6E7B30AE3687C376C74EF
BD7BF211E10AF3F60F34375F829FB2702811FF29B24E9D20EF6241B5EC5515E1
D4C5337E41EBBFCC83DE56BFA26E6D398F97D689924A5D9B153F03B3E21EFB27
F5BA1C937ADCA216188BACC189A942C14B8FABFD76C69688E4FA0A928EDA648B
91B04C3459971C820100D7460BF852E9DD5C2A6E662A21CBF0FFF3BCF7399709
6F5B7290EDBA66AC9E9BBA78EE3EE58E1AD65017D181EE7E1C018AF1B234C282
F0C26B084942E760BA10AB615CFC8312EA17D1EFC0A12BA7DD4E4E6B8FB81AAC
8A5722BE93F830AC2990ECAA0248B6EFBD379F98583A8FE6867DCF5E55EE0AD4
34BBD7D4FE5F551D2E9E42B249F46285D57F8B782E063799E8E91143F2A31BAC
728545EBE3B61803F6E82D42F1896C7DD1D978C6FA6481FE8CF6F169EA1380EC
E867C5F7B957173AA263DA8E11FE93C765591D9EDCCF293B2AE382D3FB267A28
CEF1A017384F4EE1908F2204D604C413DD32D03B8CE34C06780073EFDD1A1298
3DBB0AE22DB3C87DFC08187EFB5738797AF67AED68916F431559A7E255A2A559
329D55FDC8737C64E9F8F945BD15609AB34045A4F952B38318421BAD125A6E35
AA01A9CA22767851742D17
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 19 /acute put
dup 40 /parenleft put
dup 41 /parenright put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 70 /F put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7A71316B2E148D
E2A1732B3627109EA446CB320EBBE2E78281CDF0890E2E72B6711335857F1E23
337C75E729701E93D5BEC0630CDC7F4E957233EC09F917E5CA703C7E93841598
0E73843FC6619DE017C8473A6D1B2BE5142DEBA285B98FA1CC5E64D2ADB981E6
472971848451A245DDF6AA3B8225E9AC8E4630B0FF32D679EC27ACAD85C6394E
A6F71023B660EE883D8B676837E9EBA4E42BA8F365433A900F1DC3A9F0E88A26
34C262D3C289BBBA4FF1F6CAE4E0B922DBEEAC1BAECFAA273F97864E23A17067
E7858A150FE32C8998E5709BD8A40F44D01EE9B8EC232FCFF3CE5DC0D927C107
A5FEDC7CF81F5C30DC71ED202FBA0400215A5C11BDFB4E6BED2D01E9227081CE
F9E2ABCB625DD78D41077E8755FB13A88398BE83E15010A7DA25AB077BAB93DA
8CE3F8C3F0FDE695CC7B67232B8C5CBC5F19BD94E5B07FBA399185DE929E7AAF
BF33D0D57802937D41B7B52ACC52C42324A778C1B3621E5D477E6CCD8C533945
350D52293E93A9D6F5C1D8D5302B106748D28E80FBB7CCCAD407EEA0E90F9588
D0FC71AE2F280FFDEADCD306FA827BBB443B734D02A5A1761CE6DCB70E4162B4
5C02C56E5FD8634F316A73E8FA00B32AE548FD01FC80E465AE747E7F5B211842
FD7ABC0CF246405E87D82A7AED3CD3C4A4321312E281496A584372E6512E6461
96F432DF334F869E4B06FDFB05CFF8F900F3AB63C4A776FC05AC5BC1CB41F5EF
9DC3A2057C2CC217E39EE608C99CFFEB12D61824D705AE959A056D45E12D9605
67A0A80D521805A8FE6B530E89F25F3261EDDB76075324CB89B40E830294B370
BC665F2E979F553B687682C1794A58961EE9EA81AE9D7F702C12DD394347763F
BD320D452F9009082FDFA78DF05602DC3C5B5C11E9F918E7A540432BE5EADF63
8A107ADEEB683DB66A70B8FDD0B236827EDC1C6E325671371353B6AACA956CE1
67899CCEEEF81FDE21753ED19477DE6664F4AB2B74B2B637BD16BFF1BBAFD2CE
622028EAAA2B3ADBF240B4A54D3A5894248AA341A21DEB2FA2C8EDE9F88BA687
A1DBC1BDD8DBE8FC309AAD1C9AE2F7D9E93B42D99CFBDE2BD271248D99C0EFC6
3A2B0480DA3D194871518A86FF387EB8116CF6ADC09502454FC95BD1F4F99C10
D952257303F6947CB19720041B505CDE8FCDBBADAF8C81C67CA778AA6F35E67E
750100E5FBC6CB53C83916E85824CDD3AA66C6A1991EA1211F0D693A5781FC46
FC3974AB59DCA4B1E952FE6EA8DD6857EB6B17925DF470AA4564B95F766A6EC8
2BD288FC5A4CBD6FE07FD562938C38710D22C6966391042F1A5CD1EED8C8C6F9
CFBD3E9008503264A2ECC4594BA46050E88B9C9F150D166BB9E2EBC155C16099
96F839D09F379BAACDDC108B3F2137A6B902231D536C3C026D95261E139B7462
9D9BEEBFB877D94F44C50566ED070C6968294FD38E1F25A4CBB8E8827AFAC822
4E227C9BE3F89714E572AF665CD35FF83AA35E56AA83A8ACC2C02C7C01165ECA
DD3EEE05DC7A9A9DDF3A826E8A2F72F944B8A5ADC65EA4561D8C127166B2C71C
F52DFF3804CA3FB7B47DE550A548967024DD87C1575B08E1C4198E09A4EF8280
B4074DE5BC7013062758C83F0EB5AC978C6492535A83C69B7F10FB22D6D315C4
124FD28037B20C1EE450F2A0EC95D67F53B970EEC1B91CDECC5B26E5E8CB6AF6
9EFB786932FC4B22FE4991CE7D5277DD0AA444A9270FEACF98E05C39F7094FC5
D52F1A87A8833C0107084DAB81DEF17B45394F3D2AD64B2955868734CC5A0FBC
3F656B0F4D35AD87DF5771DAA5424F4C0590E0F0F6C7C3C73BA3A5E6CFF7B801
13BBAFC38331F3CD57F69ABD948E3DB7FD0878537D405F104F2095A7489DD265
022F005622ECA9B83FE904947AED8689AAB1BBFC6336F794A0B01E8945E7F022
0C185F006F03F96DA2622245C48A865E9BC517F9CECCE5DF0D050FC5E2861261
32DE0EBC2FE56EBA93818EA0DAB773A1A4E4CCB1CC1F1C63537623850E0E837C
3EFE39A99A3D12C10F3A5CCD97FF13CDDF2E0205DC5C0D746983DE20FD8190CE
580378BBA9D92B5F4F4CD56D127EAF2C63B69F687BA7B1AD49E59C30A054F5BA
06C048A0D0101C5E4569F06B72FED312687C3E590CEFF6454A6B3804F6E7C6FA
445E6575AF29A388CA860D63D5B23D94A057687D037A61C95071907453B72F79
529992034DF3A2AB2F173533E70924521CFB7473EA083922394FA1BEB0EA7E7E
BE32014451DFD4A0B879823A2244EAF3944158A037F8147FE6B6721781693A8E
13A8F53C2E72CA53BF4AE712812C3CC8C8669126945EBC78AB7AC239A1AC8030
ED8ED64D2490F6D421F87BCE594960429430809DC8773E3E5028C78D30BD16F9
96731A7382F17CECE932F061DF82675AC6FC760DB1B2A4FFB68E77180AF4BC4C
79D059D63108C8E8ADB8CC6FDAA330BE8565C9DAB8E0A446016568F9D3BBAF2E
BCAAE4A6D884CB9EFECB36E4E548D8C68F4A00E3424B1F18832E5EC34BEC8288
8798B7EE620E3AE53F4CFEC40B03BABC132B6703AD97788097CF66EDE18ECD9D
00F02A0099E1256DB1363FC50D219615287809FAA451AB60FCC0080FE8287BD3
17FEF22A819FC155BE5845AE1E1305F069472513BB1C00D06DBDD1B69EC85047
A03EE3FF7F8150F60CA50049A33288247EFBF43CDAFBCC955D5115DA485F5147
406608E3CD77748B7F7F6307F4193AF6A0F8D36BE3E67E513678B4AF00165FB9
B6DE0E9A91A65787560034575DC2E60F084486B09D3C9C2D0070AE14CF6F4224
1C2750AADD516F0DDD9E311811F7452231BA3EDA57DB9F8BA62E793EB6C9AC7B
52E265A25249F2AEC4F9843A5EEF4BBB4515674E729B88C14955C341DF929A26
414DDAB5C59001BFD00B859E03C4C328557EACF26F1F8C85886AFF7D792C93E6
A36BB6F02EC8D3FFB786EC7A1CEB2FD569731F58D708E84813F58AAFFAD22E74
4BA9A5BAE2C0321ACED9BDDA998E12E10001C9641D0473EB2742E4F13F06AE04
51B77184F651018AB340E662A3AC7324317D6A192CD987204C7981703912BE10
87BFC01D8DE856C4073168F84125C5AF906F0D4377F24DB2F26C2AE4A693B187
2566D42F1CA7B5EF81B4E0BED3C30FF99644B915C78F22706A006341A1638D8C
3C54415E571A00E2928D7CEA34C35BEB110AB03B610A8D342035EEA65D85C997
0AED92D8A81843949AE099B15B62D8C29BD83FE743226CD0319E916C75D915DD
B5126F760907ABB8AD0CBC001EEAB9C52DF63F7D0219E6D5ADB5B15FA7690FF5
B461F3AC2E17D312AF580929EE1E589B1B09ED0AA4D3DA735548E88C5765B087
ECA7E58361CB9FBC94AC22B956612A046CC33162202E2E7277C45DE5DBADFAC5
0C3305E430E3C96A857C7A0773AB92DF60D947B7867616EC891FB594F0805DC3
119FD7C25F2AF0BD40D69CAECFF69193784D008AD02676DE86AA3E8F45F43303
A0877C1041CB6E9F3779A59F6C3FF1D8793EE5553945FD22DE8394960D249DDE
CDE95AF26FCFDBEC0AC2D5EC9B3439317680E8B5FE970705C3555DBEFF40639D
ED7038213255145A0350EC48E4906636F6A1D4D5AF26BE3F9BF4A688860A4B1A
64F6C207CC0B993E170656BFE525EE5E44CB154F9A5CFD3D12A8C2902B9A317E
2EE5030A301A17CC3AB5D3EAB114E1A60AD41272CEB7D8C4F9CC4C8543B2313B
5E1EED31A8DA4522EDFD4F0BD0CB2D77574DEE7068D43468AE77B4AE0DC350B1
1A9452756FFF198FFDC37DB44967915720CA5E7F2A4A57D72794D1E269ABD1F1
496A4CA52F721BCFD40CCAB48216CF9D72FD46599E6C7716868D80AA02D675A0
612868AB914D38C02C60118D4A2F57E9D987DD0251E259BAED975E404893927F
A04474032AC0A89DCEBD3FBDC318401383B15CFF693F726CD56777139BC7A18D
8F51842D3DBC90EBF3C6ED9996162F9926B2117ADD6E417D682B5CC8C5445F81
2A10F810534A8610067A220D942C2903A6C597FA5D6E080A39CED924C8480323
F032A1E10E72BB882C189247F69A9FB14CFE27299AB13C528F445F60DC4AD6AF
5649F10C24EE6C116E5D6E8E9EB3E1FDD0103025CCC3B8064BC7B3F9B509D165
B8672492CAAA2B6239F34385AE4FA843F487FFD1C8EA78910E784401C5D02510
8EFCF8836A6A5B5179E21B08DA20E082DE7A1851F5FCF9B0012630DFCABB1700
1FC8C7B65D8EC607F8DFCC701404FE971C67839F047C7D23AA33C75ADB56C9C9
273ED34880B4132DF3444CDD6FB117E3127A8388D2EC06AFE59791E31A94BD2B
C1A9ACD4AB4AE5A5DC068967550BB4700A644A4F0404FA4B25221659EAE7C9CA
C0D53654AFF31F302D00900ACD5F20C2805833CDC84F0FA4611FB4610C66F19A
BCA18D4F751B1C15BC85366181806A208B9D63977A3219A09F54C852A27190D2
7AE35199163EEC1ED569DE6EABC177FA22382FB76F179DB92631D35953BB91B1
5B488203C43FA18ED89228B11E4428471585982B51746CDA49571E654F1AEC24
40A458F0D55EDE81A85F02517BDF2FDC77729C981EF56E0F9997A5E60EB4890A
46F59DB688C114370EE670E694A532C9AE487F3F884F8B064A5AD3FB560D3338
80A5DDFDB2BF29A20962B71B9E1A6201CA054625B58615B686F3906DD1B9E1AA
2D6AE07A645EA69C7F5603363DA41EAB2A247DB01DB909F43B87C466EB514851
E303C64FB056E7E363514410C5B424ABCE2D4978DA5DCC171F924E99DDE4EA2E
032F612973305889946DABD263B5B4A9B41A4A5AD2CE52BF42660348727236C1
49C800BA0728152AB84EC7F9D24F2F8F691A2BAE99AFBB15BE13FFD230F9FE2F
55368EDF4952F01826631CCB11B298E42DB139FA4115EBACB23FF368F89D29BF
7D945F0B66EB7CEF37E517F0D5B2BEDF22492945BCA92E69555DF3E6997BC17C
9FDF48F767FFD3AE504DF552B606727061CF5DBE1C9143770E4B69A873119C79
BC305E4AE672E74D14226BEA148BB5CB0FAB89BC9298474BAA942280A9B53C95
5949E62E4CC65D45169CA565B63B4BB5744981EA0103D80E375816D985D54E27
023522CF1B7FCEBF7008ADEA1511CA7C1852193722264241B65C06488647D7D2
C89362F84477A20D8AF58D303FFCC842741B3B92BE5D6373B35F0120EC5E1731
D1C60CB86032D09B0E1384EAD7F5DF1A10DCFD325B092FE65449807E6E991F2E
9330FFED589869CD4261329AA8D2775D9083ACBCBE3CD2B6F2AAD3A6AB68ADA5
9625E4792DD5218B206007E69BA817B59A3451173FF4DBDF6C2B6B2953948828
71B8015F33FC55ED51733A48FA4E5176148C53160A14FF7EEF89891AFD288EED
7FAC0BC8F5C56A14B75B5CDBC7650681325CF5FAFF59000E49AB5612F9427A6E
8281CA0088964708094DE56DE21B38F33C19BD219283C9788CEE70F8EBD71CF5
EA427F0731CBEE8F85B2A12589775F0FC0BFD9311CF34CDFF374ED303D16A9B0
FD5D0F598DE0627CC2D8AE7A5BF8688DE590176F6D4C0F633798976C1B0E76EE
193D2F7EF27D4AEB0B2D44A7B92E71833E5A35533E40C1E40AF702992A156912
ACC74771A10CE4597F03767C21A97EC1E5EB839433BA1C5EA08BF307CDB43F2A
7CBA5BE0D0C23D73527EACD071EAC22E065AE9A291EC01A84B8FAFF5F0ABABFA
4D012552884A27801ED4D3B5D218EBBAD5C28C9645832F9E64F8311119EC5B9A
0C1805A8F9F6DB5626A629A845F2DDD33DF1F7E5EF9BFF3BEE2EFDFFE74DDD92
E50BE38EEC63A59244B792D8C114C940A9265AFB9B1D139B1CDB48E1F8B387B4
C207F58E8A87E6B4CF7A218A4CA500FA5FF2D8FD5CB13FDBBCA3880ADEECD44A
A41952DD9EA65E7842F2AD566C138DF4DD027A5F84A1A4E348C7386DB5AFE4DC
9FD761BC06478632E9CCD72534169E4F672223A8CD5E74F13682E99A35F92D78
A3C87542D4B2D6064E4DA6718948B311D01C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMCSC10
%!PS-AdobeFont-1.1: CMCSC10 1.0
%%CreationDate: 1991 Aug 18 17:46:49
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMCSC10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMCSC10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 19 /acute put
dup 46 /period put
dup 50 /two put
dup 53 /five put
dup 55 /seven put
dup 67 /C put
dup 77 /M put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 122 /z put
readonly def
/FontBBox{14 -250 1077 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A30EB76029337
900ECFB1390CA5C0C3A04528044F266BA17BE487C79B94FAC6D6484684C5BFEA
87BCCC77D40AD11552035E95E3007126418ED49B68468B38A14E88E68A267B98
076F1C9769A5AFBC285E5B158EAC9F926F1D6C0B8F1D57D9C31D25AE27123518
9D2CD92E5689E0213089BD268DA5E47525CB8EABAA4B78A15AEA34705889AB3A
FFB8953B5B3482E52BFA0940630ADF8C0AC2177D907324299EE980E850F203CD
B627962F43D5A678C44243CDE97853BDC6AB45FD5C09AD274DAF89929F583CC9
CCC24BDFC68B92111055ABA5F26D2DC67C70906F71C2957701D65AE746A60C30
40E6CB24B97FCDAD0487AE38A201FBF0E41BABD2181981A71940F1E707F91E5D
C8CA50CB16D8702D188E56D014D92F76CE0B52ABDB9110E32438D2BBF3E6A40B
7B005F10BB437812CAC6ED2996F7606DC962C4FDE207FF322782C343DF44CEC5
FF06A55C630C20E9AE1B0D1C5673753C43BA0767D65D1B451CC6380D8BB3C4DC
81E8FD8AA79BE993218686F29D3CD925566DD587F541A0DA1B1CC3BCEA2E6C7D
5E1016F6917A871F1BBAD96AF9E867735017119A381FCF33EB2D3E1E7093FD90
CDB0CED4818CFD9E201A03430CEC713620BE0D3254158931FB657C6AD4B2482A
0E7D070D7497892E9E942DF58E88CAF0C8221BF36BF7C435BF2C683A4A2EF4CB
E85820A8AD3486155A40143011BA9D76297F46DEF69ECA4596D6E4CAABF84091
22A96A4BC78A8DD072FEB759A68A44BE1164638B6D952147EE3C628F9A022060
1D1941E73310943FA782532ABB1116532AD67AEFE0758C051241E301C7E13A98
6447EB0180BF6799814BEA4DC0F727D0A40B7BC3B1269CDE174453D6A3C4479C
146001CF717DE25AC1BE5AEA5F2F1C17719251C429D3AED19EFAADBB532AFA81
CEA5183AD85762D8C4BE9DBC33D8E42B78964DFB20533FB7BA5A748A678D7B87
0E58CDD80BB182B89C98D0EACA676C44E7EB2114EB325F8E03196A48F5FD0E80
C58AC7E5F4D6CC773FEECBBB14424C7707812501C39F2CD754B2EEC0C78EF1A5
E5B51B9F09E25384B0B735893278E95194EB243FAE059FC6C10BC58F88088BD4
36266073322EBEC30C0CD7C184E68894D26D920A65AE3781AE06694DE7374135
61BE900A8A6A7962C07D4CEB85BB54ABAB3AD28A2B33BDECDB77A895AB3EFC8C
E048F2D29C2B2D15707776BF8874FE016539C884B970616C417EF3E0F85EF4D8
066116EFFBECC967128BDB192CA27AF5F1B861FBAD6F4F488C763AC570161D85
263CEF99E75F77373FC09DD6EA197F9E0C0E457C131514E8A6FC61BA6EDD2071
173EE3EC7DF4EADF97FF70ACFB6253E2523B4475EFCB3F4FE4ADB7A51C050337
BEAD1879EB3ECFCE928A3B12FE796493D1C555A6DD1C80C0F879CD16FC4A4A6A
05053A9637DB41971CBD09F769BE0144379C832A7FDCF72F9D7B5263301ADC02
0A7FC21D45E9B795C2DBE4A8DF5327A38F9AC0BCC52E3F5B5A49D31E0A522326
D3C509E0162CC5737DC86F49D04CF3AF2606AF0158CA217647948ABC3B46148D
0C355242EFECCE5804EEA6346C11F591467507D8FE7E53D488780506495A0C7F
9633C441D586C4C42706D1BBB472EBE135695CCBAF68B483D290C52AF153B5B4
768322D5CC0801DAA98A165FF75BD1F3D2F3EC2A6CFB60321E1E8C5835795A0B
87FF1EF8EBCFA27BF205E9DF9420AB249D12B9C49B17956C2AC861DFED4B4BDD
19EF4CC2941EB7F95BA5F1F431CA02C26CF3374639BF537948F1F39486B342A4
3750D0C639FF5A83F19026A81360F5222F9B725A4064B9F1229169DE3C1AEF5D
B7C786DACC3A2F1EF5A438E9A0ABB7141E3F36B3E046C92D8221D950337ABE11
C23ABCAF8CAC4965F292DC5ADA2E75C2870B713D6BC9CA22A3F655338B489AE4
B5571C681E0E1C636F0192C0B204CCC0FF8448722C76EC76D21C7F97B4B06738
785BB4FCFE2930F0994D347E882FD1F6DD6B1759DF328F5EB7C5127A92162D04
39A50914F027F9D9E4C6980DD3D0AAAEF1585AAD441784C5937682EC3F0C3F14
038584FB87F17B2D6743DCADFBA95703CAA3C6338EB620B1845048D905A2C126
F710566EC70AB20FF37916951E74CB1DCB8657100A6F9CE60AD85B647B1A2939
053BEE440536B413BC20B6EBCB8702DCCBE3628A6C44BFE159B2511FCB4E0A23
1869A27BEA5449ADF80ACCF8A15D4EB05C3F42B38DD306173D7EDBA1F3447E8A
8296994914425029BFDDD53AEAB36F28719E84B7A79B3C6D4AFB4AB2E2EE008F
78C478BFC2E8E15DDA6B240978DD195734DF22579858176E4E87FEB0E0597D99
0378DCF8259546109DB155951E7D8DD2FD1E3F7D0A637F6018F62BC8C5633053
46FEC131370C5BB340C695ECED4ECAE1A5B177AC7378CDEF7AD79B468DF2B0C0
E419B591B80EDBB1F13B7C2242FCBFE0EFFE19629DE349B6713F6688D721A3B3
838E391D0D9AA101B1F9B2C7A035A65B6C661896638C304971936791A518B5A3
11BF8670E679247787E1B573C1227BAFEC970F144BA87D6919D3731B9572F366
153D73D7A3868ADE558DC6645DA47DF3E1451FA1E99418FC8F9443DC8F7FF4CF
183E7AC4E15D600B49BC1EF88855C7EAA8B9165BE71A873A30BA7659548FF31C
A65EFC66AB469AD48DEC33D337F0AB9DE0ABBE62F649D5C959F68AFDBCF9033C
73A6E121769CB6C098EC8BF3606BEB96A4BD4A9F7D71FF46CEAE34B1C4833C45
17A44E4A3E674E8908D931AE8BBF19935A8CF0A1DD2812B97DECC32B54FD4452
69A66F07E5A2642A99F934D5D816AD78E89730EBB35E14441275753F7DBE2C7E
0AC42B68555C466A407E9B8F4749F1AD19C8C47783B1B428FACA7293D17FA631
BD044CCE5962322F56C40522046046FC10532D3A9D70509BC6BC3CC2DE0684A7
6D38F88804E09A46D53AEB5A10B00E7791F9EA2AE23E660107D84D1F753EB879
2190E9DFFE41B248F4889DA398AD0870F851BF2F38148B9F96A365037CD7E263
E624737923357636B27A6452A80E53FE45D4AA9D56C278BBDE41AFD4FB76D087
A3956108DD8C9CC2F5098E73D3160471BBD413B738124BF6E5754C85663DC578
7E2D087A467734E736ABABBB6709BC739FD5BBD5AAA18C57445FBD35A9222BCF
16454D06B4C9FCE0E97F486321FAA66747AEE52B917346C6E9D59E9D71A66B89
34492E11166E2175D51C875472A918D8E90E93E5F06D1DCCAF4AE4FF9D43FA8E
A6B1E3060F04AA6B0F14BB90B9BACC2CAAC13E1440D4E48586DCCE18822428E3
EE902D04286380C0AE947BA426CB149310E05438BF648684E0FACEABD32CEF31
FA00AFB0909FC81A2E7B5D487DB9BEA5D031C9C3449B3D39DB0BC1530DA021FD
B2D9BA1FD0AE627FB4BE7E775054126F6CB3666DC75ACD863363A7D495DFBB71
9D3E72C7F2D09D64F359029C0D1FC9DA818C8D4827EB9DC3D8CA2C6D2036B8B9
56618B07F91D241CD51F57366F52C794A6E084BA81177FDFA9FB5B3DE77B47CA
1EA0718F0EF4A7024CAD744A76CDBBFD4756FB306EB05EDA21253CE8A9CA4B02
1EBA98890DE691FC8B0694F8527E532AD8DC8FFAFB1DA3008D994E7A122202DE
5FBE0C4FF48F4B9FDD43D9E85CB8D06027A085F1417096F8AC93E7BA958CEF6A
B80D12344E8D8BA52C7EBAACEE45AACF6505D82208456FD0406DBEC64D5D1545
97ADCE4ECD3B15937D5E973FCBDBEAA28B6AFAAAC25F687995C7A864FAB8CC5D
17CB9DBB48F672C249F8F4FD57C3B56C6E82454F02C9D636EE3DA6D22815EAC3
305B1721B8C881D43B5AE9D6D8828E0FE799C3DBEAAAB21A53DA69C81A8D2787
EA84BB839151139996E6F6EF126E4289582F26525827C70FAD924BB1139D0A9F
9529169FC2F06F57ED9929E17DA5C1D3D3584E02CAD1188B6F49DE7FBE6B7653
BAE11DF67198A05C0BB91EBA3713F94D39EA4226A3F66B0DD7FF9B494AA12FF9
FFC2A2606CF734B49FA1C3C7B23CA625832960EA8818ECBC6F5BE809874F0673
89ED016160016E31831B9A5490E7C003F7915055DC2318148582B5A31DBE7893
075D2604235787D0B1644E27C5C395E45816592DCE89E791338B55A6B125FD13
6591708305EF5A8CEB61A433F37A9A4A67037DCD7E0BB3F07A2B442AB4237F9F
DA782DA798EA42E7758B1468BD7333DF49BB8852DA05E5F94C2F8D9CE9FF274B
435AF843926EC709A90E17D7604C6968E3906AC390EDE0D6839FA93B8FB2F777
AD53C45B541E6C7BBAF70CBE6737499FCB130C377C2FED924245F27F4F62A7E5
C995DAABE2CD17660ED455EF841DA4E47E66E5828DFE7C38E81EB7CC7135907A
78BE28E969380B008638FCDAB42467874576B2DF8E82F46A83A4E0D8139235A3
4DE3042BA1F367F22CE9C112CC9229CDFB139EF8773C1FC45ECFA7A25756E7D8
B0253013048773A7C648F7B008AD0DE9F8134A0F713FE60E74DF0EF05CE79164
209D89267BD9A6B21ABAF119AFDA5ED4DE90FF6748B796B17E2FAA2CDA3F3FB0
6F8DFF6EC5E7C70143516CDF03FAA2316319ADA1F337F1066661DE07312B1B78
330745AE600A6A3CCF99228C535B810272BD09A656B91B6AF090E1EE90A5710C
E974A535C10AA77F5095E41F1EF01694C3F50D46C13C7A37490D4FA8285DAA05
BE4DF9F021ED0867ADCDED24AFEC78DAB759EF5F4CC7F5194DAFF247D8649C77
9F198693C4072BF338F37B6C4020FE7322AB6EF9784A7050D7AA561A1ADE2B4A
58FC23C985E93E349FD45D05C899068BE3C606EF97F7311B8493475E3313A3B1
7B5B4556A6F1FEA89B52008DBEB4BBA7BAA9270EC47CE11B90E8C74A75AB5BDD
57C71EF6A0634941D7EB3275D38E51A2532E1C7C30F89239A8E7BFA13B27980F
2AA370A14776DE56B87EDFFF0FEECC3FB40AF4ADC4CDA36AEAC49CD0BB44C16A
CEC81210B70FF8F0105E26F143D241978E2E4D6907D666A5B9ECE590E04E29C4
12981E3FF0C519061A3717882A8113E51080A18A0988422386974987D8EF7F27
48F13BE9267E3BD1E8FE98E75DF72FC42A63689D032E1AC189F8B7117F3AC5E9
F14DE7420D4D97D720CD388EC6525F3B725237FFAD291D4D59FB834078093FBA
832D7E1D22CD3570CD7CF9C009D29FC5A4B05A2FBBFD0C62C5A108F037542DB2
92479453EF74EEDB07308955BDAF65BFAED6977F3018AB1B12AB3F663036AD13
0CC26A23445951833A15EC6BCCC3BFC747101AD47382998AB654497C5B85076E
BDA74E067965366734AD5190F7C33EE9F49A5299B56343234A5BCD06711810C3
A74E9387E3CF6805E46512884E6CB494904BF7A6E84390440CEC1AF45E2E527A
0090FA5ACB2A636603679742262807162A1D48CC1B7A3FFC9F9E14421277775E
C1904528EC24395C76918DF899288CF4A4578236B15994997CDE420E09359964
035118C23EB92A387BAF89ED152EE778FCA50B6706905474A4E63C59234DF7D6
7403239A94EE86EA8CCB95D6E449D99BF1970C3A9CA6983A7F4E09E1C59328EC
F8CE087B002BBCC3E3B6D4FB55AEAE12C304535BDBD20259E506ED7E4EED3A36
B84FFFFDCDF70357C5DCFE29A06614A59C72013284C18776FB255BED9CF2DC56
CA2D6B76BC4EC55C2A12EEBCD41DB3DF68F7C4BB5668B9889AFD611F21594206
A80946A13643638C387CBA17C9FC2376C12BBD4751F88439AFA8043331672D45
AFD53EAACA78698331BBC255D0574AACB4B0262B2781B21394D0398B37657DD2
1921282AC21BEFD5F522BB9E21F2993897BA6641FEFE365E58F02A46B73EFD09
85E4026FCBC7E5B44C0A9BBFB53A7C7BC1DCE6ED2553AB68E71C6C44F8A1A8F7
86714F2101F48272B22CE03025080ABD7C6C0791F7FAAC6A4535CC981E526F49
72C483A5D43EE59BA0B0D742B09D0C0CA08F13FC3DBC6AE7C7B8A42F5FD822F5
5E9963BA93B1E10F112D5D9893B2A510602F8C01B53285ECCBB8DC33D95CDEE9
586552E64EF3025D585082EFFA7571B20FA5D989CA8D04483EE708CA46D987F8
50418078F936373EA6D83786CE506E281936D2974CB0FEFB4654678952C6B9BB
5E8421C35C17474EDEA52B98F2B499B0ABC9AD285B53A697C6E8C9EDFE55576D
07ACA762519DC4709C092E943544B33573956D5B1B64DD6CF4F35A8525E5D435
92E7BD6880C7D5A37F99EF1F2A0D92BD0FC742A3B037AF7305F285FEF756FF8F
63F5A1B8ED22EDC041E688EBFEDD83EA8C47FCB6E549917F1771121B311290BA
B30E0B68BEBACD35BB67A7F9ECDA0DDD8857756A0CD57143CB3818DEB2434582
6976280C32F27F2092C585BE8FF0A565236D1350A917FB539B44531995C709E1
167E1CC891623F9B927FA6D6F8DED0B2A6E666EA5DFA9DF2FB1BBE179059160B
DB49651A644A36745C57D5D2EE5E0FA9FFCF229A427C0F4C7127065C6A75D91B
E297DC9BFDFAD4D28E34727531A93C84147117BE09E43BA21C1E5C8D070770E6
3D204ED8B5725430549A150C685F04827C1436FFAC8F8038431CE2F92B1926FB
3C70A0F1A3CD57C53F6519DBDE5E688E4D5C3A11F05A32B3742E98D909AF1DD7
340EFEF612E02860F877E6807B26299128BCF7DE836FCC18010952A688ADB973
D91AD60E5AFCF79B832756C3DF3C7A76642AB753FAB9E77D46FC372630AB240F
111F9E2955673A23623FA2BBB534E8015584468B71D57E00625BEC74B82E1738
F82487906E929DD0D27305B66E1D84FD3EB9664D6E1BFD4D07A6419014227FEA
A8BD105209269B882CA00581E59BBDB958CBA1C0CFCF01B03EEC727158FC8ECD
24708511B4911663576A9187D24C801B54E1F0AC4FBD68D6A0A7802093C50308
AEB298656A85A0AE837645F07A78048585B8431D3D7E9581974DB808EE8AE166
8C865DE127B6C4C26CD384A7A039C8094A4D2096A12B47DA8D869F3C649D1CBE
A591F77B91073D72E4827284D4EEB473A9FBBD56CBB2C965CF183FEDB8AF1574
ED510F32D75D8148F3E31578D1486C481A2DED4797BB66E9006021F129923F64
41E2D4481AFA15B5AA5C4CA02622CB373BB82998E35097A4DAE6C1FA8DC2EECB
0B2914639BF9AD8003F289032BBB85AD3420FAC29AE15BBAB2846F102C7F9C9A
0EDA552977F78835EB6360CEBD8B0B8D6949E2AD7CB53FEAEB09548A061F71CF
58AF0E700E103E43E29A2B17BF707324E4DA72AA7A0D54F2C8173A55A72799AC
1474F8452F5EC3114D72593B637DECE06E4D78CE0F0A1940BCF359E48979EE7D
17D789E4E7B9F0C483824246B0BC72BC010C76561899F8825BD9673226FD5C4E
CC3DA3F45463221E51B6D6D356C5A073081D39208215AE772FA67D793E8280CE
066A522763F2147C90B5F102B6B09271F0DD56BE457E6FB3A473D2540604F8C4
F3D26895D78FD99C3812AEE268E42DD9C1AC50646FEDE51FFF4878FEB55057EE
8C57690B86FF3861D0844082A7627CF4A9711D51437F751CA8E5D53BAE278E60
476CE6AAFE020ECA10F3AD4FE162FDBE8D2DA5BBE627C21F7C73E15D00049E02
D0EE46C9A5438B6C75D5A74EAEA49FC72A9F563BFF847FEC8543CFBA66
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 16 /dotlessi put
dup 19 /acute put
dup 65 /A put
dup 73 /I put
dup 74 /J put
dup 77 /M put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671CD8AB8FF325A
62FC5DD3D91489C6571ABED041CB2702DFFDE27E88F21909DF67AD2FEEF6F013
27AC596D8110837C87A667101B036A17A260EDF13657712D8EA05660AEF7F6AE
B2BA76C91D9BF7E9E849282A6CEF611703A5C436FB98ACDA386D646E70B506A6
45A482A8A36AA5CA9B41F4D24CE488C2184CACAED5924484B8CE242C2EADB2EC
AE8ED809856590B793A45B1B862B787F8EAE8A772005FBE31D42A3A58AAA6750
4122B7A1F5ED6C02490760B5EDE4D7AC3727F2DC755359B79D62CFA3933DAE22
9F9D59C195434AAE8C23B596BF638832EE95AC5DCB6BBDBB4A77BC5D92BE25F6
124B9D662B59F83BDDF7F4F5B6F8D5827BAF4EDFC56852C591B8E49BEE64C1B4
EBB75645BE95E84D74C5C561AB359C9FDE7A3191A99EFA1C683D64C10F31995D
212038D729EFB5703994244DFE1D0CABA204F29B932222B4015E207419C7AD42
A180B2EB31EC610A811B78DDCD3FC6522D72B229CF2B2D199A385C7D966A6A8E
4A9D4C625D4DB91CEEDB74C68DA7E7388B6E7474168B1BA8D6F2518CF791E0E7
162EB7BB1EA0C79996DC269677CEEC841379347F4F1390A749561B611D521EFB
6DF867B6DE646A8130EFD460AC468BBE2EC8D0DD931A32D95A021C1CF5EB40A3
91A392CC8E42F311BA280C83CAC8B5444F1E8501574C6A051E359849DF5C1C66
67E01DD00040B48783291530FDA3E187CBBE6B421765B127B7F447BFE78FC3AA
66376B882219530D26C5195D53713085A90777ABF8E8CFE62977572102CFEF5A
D991162F4A2424B1969DC307D5B5A851FCB1FA4C3BD71326A6742A715181F44D
A62C3DF9071C8B5D1D8E22E336AAA570C4F454B97D7B20E3C62602D04C5E2059
BB7747FF94BE6E8BEE5126B466BE486340E0A50E2D9B993CE9BEE50304C3906D
14EE7987B859F9F8D90BBE3BAE5D522442F9A9E3B1901AECCC3135B047AF65D8
12DBBA295E49955C67CA2AF15F0E0BE35562C73440B06D62334ED1C8A578D8A6
D43D87EE1F3B3F6BE05C12199061740903F8BD006FA237AE2D8F0E575F379717
E76688A7742EB3201EB808FCC79D2E1E1EEFE81FE7E36A8B715E10E92CF6D413
FD3B58324BD3D5FB0AEF3A9B78E5038E74AD1CC2A293322DA5FEA064A12990C0
8A1E439C10B7F945509A8DF310C89F5713A128310CE0DE966A78FE20B9972C1E
471A0F243AFE3582CDB87A06DCAC5CE481D37717DD1C4CEA253703B2EA7DC940
F31CFEAF76CB2F5C7C765701E1068E04D0EFF00475CC7D358F3E9AA3DA39CF85
F9146FCAE54A5005CE16294E53A3996352EACC91619C725D6599F205B5DBB285
A713125FF73188FEE1E24FDD991702BD71C8D6BA8BB36F0546422695E58E1668
046A9D657A0319AECC5A8C6226AED1E9223CBFA90CBF620C84A41D94E5CE0C2C
B845DFD763CED687B9601E8F99B54AA7129699217087FE84A671473D55ED489E
88281DC093CDF7EE4A772636723A9AB320B100E9D00718E0B14C78FCEE7B2D2C
A6E78DDC68AFDF3673A88EC7DE6E4208BD098BA9F6E9665C1EBA4349198C9528
EF69AED54D80F4510B699C96D4AD5234D6314815848919E2D839749E2304E65E
08D169D85F37A172FE851DF7CCB05EF5568CB9420468359F49515EF12D1E3881
50246A7D4394A83CC7F9A801DEE6F853F9B8D84CD0AC34E70BD5F5CBCD801250
99730235F6B2D22FF2C3B0A19BAD7C24594579FE56EFA72E5183E52A7F69087C
A7D5134C054516EE5000C32CBC16883FF5016B9DACBE2777B57A65C550FD4364
C8C5A16C960E6065FC8A23984DC0B549B8EFE7C4931677B82B8278D1062E16DB
6FFFAFD17877504414B207B770878BB0F5EA5CCBD6D3D47945A3E4D323B063C8
EF93B1A7C767186358331DC7772BA6F5B431DEF6D45E20679899C503F4AAD183
70233B0EED140C0B4AFBD19356717F2F47287CA95316A942E15BC27EDA129FAD
BA4B225F5431A5B14C54423D5E88CB82C9D8652DDB76F39096BD0ABE660F32ED
88B1A72D3D626DA71F2415D6D0556C8263F30718CAB23087E4F412529D6EFF0E
EAC32DA2F0D82A047FEC10EB0CB9FCAAA8F093CE10B5AB50F3A8A86011175BA5
C5F8E8FDE9DDF18E52636E0A622416AB02605EB32ED35636147A444B1A4348F3
47243F5F6CD3944B2CF1E7E04864D9C91E4F36A1C6C0E8AC24A0583C70F15062
A29B76A9A55ED5461A337B4D5D74C876DC1AB29CA41699BFA091CD75444009C4
B6B9E3D6DC2ED445DF418786F28645A856B30F8045FA5CB7FDF03135C91B2D9E
34D70FD44EF8BEF81422B03BCF14AAA844B8B2306AC1D512243C01F63BD137EB
D2872BD19AD7F8F2A92975003C3B31E096B870B9C9F031A30B91804DEFBD1155
90C47F6F97D01421C4BB84CB1C130C3496659BB9B8C90FC619415CD8FD8DFC9A
74228D20603A665ACD2D1C9DF51E06A839E5EA4F90B854AD58DE04EED2B576AE
DB9962318AF847E8C505A94C35B11691762F05469AA0E35C1EC3B8B2F4D5C94A
FFD690A44A467B48BC94F12D370C373044BDCE6F8776F3DF6A9E819B6280B6A5
3054CB435EC1A1FA6EC149A0AD0D75E59034940BA770108D4639EC0D646100AC
D10A8510BE01196E590EF1A56F36F5B46B9EC1A681D977BF058E75D0C64568BB
232687CF344EA69701A51F05A8F491F94A421F0481DA0AD97B4AC4D956065579
F83F279C5298C761514EB01D80E989514735AAB3C47BD79DC0AFAD6B42FAD3B9
DE542EB0C3FB657FBF88112C711FD76B516F6C9C7819D58BDF414AEB2B4B96DF
D8DE9A50FD6A03166F40A5732B4A825FF9006A6C861574D05D6A0A909E45C860
AD748C0B8FF7B2E0CC92BCC02B0B392F85E1E5CEE7389AB35EFEE6493FE395C1
DA2F86315DBC37A8DA6CC7A25102B8CC36B6E4E26F78168E346D5990C8BE8CB4
9962907F00B16971836D4EFB2DBBECE47C9E68D4423C5EDE2D8BC9E7A590F815
BF89026234AF4B069B9ED4C5D340178FD3A38ADE34DAE38F0544B424AC5647BF
E7F513E7EFD2958F044E93372D7DF5469FF63B71CD60973654DF7B2025A618D7
0BA46BC7006AD0584523EDDCA0229E71583B6F733A25958B4B65E567010A284E
63C5576BCCA9D4D04C6AFF3C102A26F69D07882EBF7A051D341BDFEA7663FCA8
2AEA4E5BF36C16B3CDD6D6F085368666AA0E2216375044D8B181062F69C84D8A
452053DF997A23D396A0C180EE14A93D43408E9C08EE10F07CBC75B1C50A0306
F06708ACDDAC98AA3BBE87246905C27F35E6D0422051EBE72C6C863A1E7232E6
9E1BD493749498272DCF9B69DC58C57185261ECD160D04027AA9D5735E7BDBE7
A96FF4060EED2EACFBF22259FC847F94DDE6671CD6CA57E0148A1A9C45E219CC
71D93F027103F1CFFE2A60F284165E45EFA73AB8551A5341805DCDB4D508F195
106CAC61BF168CDA7F727099E3C82046EB9A88E128B3062DD7AC8B229A8858C4
D11E9EA6EAABD4C42552E1A4F446732581E82563D682F8F902E70D744D7C5C8D
841AE410BB1695340535DCBE0A44230EBD13C259720205FE70D14269C49E77D6
4FBEBBA69AB16187C84DD0E583F721C8559F58F2E26087A593F7D3ACCFFF240E
D43C52B12AECFAA8C2652C7CF6CA1495F8F26FD4335B2FEAFDD8B72256395D44
DD7BDC28932CA65859797B3D1EBDBBD5FEC230C73027B3A7296C19498B33AF91
1DA2BF99CBBBAB3A73EC93E5FAA35166301997BC1D352BB84E2B2FD992C10959
D6BE9748B10A309AB105A2B3733254B3D94AE1D3A57B195FF400C89FB2B0EDBE
1DAFC7ED2707063C631FB87CBF6BD2D115B471375DAD51C795F6BFE2BA5B8E5B
5F33DC4B36539D56B92FA3013C5466334A8570D8C2A182ADBD2582AF859BC4ED
5002FF582DCB08213EC6235B7E644E1B7522AC9087D0F6B0D02BE96A4A989830
2312A1F2C182679BF5DBBC88D2EE25A8DBBD5EF8F2BC04C27E1683A47BDAF612
5E4C022670ACA517CE386CEA60F1758D3491D75270A7BA5E86C3CD82B6DA665E
5F34421B6DC4CA77F415DEC78E217FCC443599F25BF0DA5F0F0B903BA4A0A169
678A89EF6937422726CB2E720DC45FC5D92835A56AB0D88B09AB5E12E30E470D
CCAFCF8ED7CD02508D75E3A5F818FE34BA7E3FA321597810B980C9C797E4F73D
68388852FCC5D7C56D676B64F86B22FBA25E5B45015EED36433B82DC8F962023
01A6C0AFF235D2AC7D3573F024EC02861DADBCAFB375F107AECB14459B3437E6
CD4F31AB4DA68C6BDA087210CE4D4DABC32F8013ABCBADBAD8EDECF7C33DB5FF
2F82C7BA8BF08B9BE34BB31D5C20A9356C0B0179DE3975D44D410DCD82CD8598
9DCB06F8F91810FD6D4BBCB9901DDA7E52E8DBFE194EB7A79365D1CA348CBC3A
909AA034322D5756A3462F1E19602CB00102B95AAE8EE85BCCAD4A6264EDC99A
7726
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI12
%!PS-AdobeFont-1.1: CMTI12 1.0
%%CreationDate: 1991 Aug 18 21:06:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /colon put
dup 65 /A put
dup 104 /h put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
/FontBBox{-36 -251 1103 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
525003F3DBE5BF07B2E83E66B7F97DDD7CE0EEB75A78BD9227BF359D002B6ADB
8AC57A33FED4EF021A7085B1E2B933DE602F0FF71467ECD501744AE338AF29A0
26F7D368AC6F25CCB882DB7B7343566192BD687E1349225982823027D3B66703
3B0DB7A7E680A682B98023D39C7FAE81A5D5B867A0A66C8AA0DBC83B1596A84F
0436AC6A7900B767BDCCE0060A4811003C79FDCC71D73F7F2D0A6675E93AD21A
56B4CD8EF75EED3DE8C0A18BEBF7B9D1BE72504872D56EDB272F1E97FC726CB6
68C85C713059DA19F6C2E0F3E12710A59B6FC4699AE883DE8C8615B7292AC25C
D5714B6CFB14EF0EF11EB13009BEBA4F345A5D3D6D9926ABC2BAD7DB1328651E
437BFB3C46DA7B62219660FC368CF3D3704DAD3AB461C28F711665BF484BF61C
052093D231CA65618EA463D63E406ECE858D180A6C0589B2FEDC321371C28E77
DE974D655DF5FF7D41ED01FE717D928A885F6FA6CFE4D2C0807F8E7F937916E0
96EDD1A3BA67802B1F4A49100E75613BA0356D9DCBBAD4DAB3C59E70A47058F5
2163D1730F0EE4D1F87C3A4AE723A23CFD7986FC4FBD399347E9F5946354E013
D860FC446AFF0B0744F5DA27CC777C96ADB388D1E835DDCBE123FB517679B9B7
EF696E091A9D51510BE264701A41C04FA8125A48F306ACA7A83E35D5BA0C296A
BC594ECA2CB27E92FED95B595C21E5BF0DA724D40761CB377BDE5FB98C9D152D
6C0DC98C4083E9656321BFC445CD6FCC142DEF16E27DD6FAD0B3185223B1A7D6
779F39C70793184F2C3B721FD0AE6D8E063BD47804785DAEA74AF8C75483B713
65061658FAA9BD624637783BF125DC8D1C60B691398D34238E7A0678988206F2
4A7B14E093E2FDCCEE4048E31184A3FF359A602C328C4D517FF0AC487B72F792
795CE82D63CBE5841001B7BF23E06D11F3AD9FF3516DB82353A087F963630CCD
0C31D06A88E3267B9340437AE367C3AC9B441DC1D31030149B2EE54996E66FA4
0373EC6DF9C05D22246B8CDED0CBECB9848B5A15646108B61169E82231604119
9C9B7989033E3E810BF239CB2D2FDBE37DE13CFAC7E598907C6F29F52383D7CC
73163FF9F7758CCE45E7F4E76F83E9EBABC2E6752309F8C2AC0C947C3828C6DB
2E05C7DABA6468F6A0E53BE7AA7B22939C24A0DAAE676F0E7F8E2D3063113DE9
2BEC1607877BC8CDD0935152C2A45A705B368117253C35521DF43473A196035C
AE042AF3282EBBC070A725A52690F0436E9CA759C449718CB7C1A6D5256C310D
EBB5950F86E1302C15AFB6769EEE56E67489F6853CA2A33715A471D4D0C6C8D7
F8B189DD7930D198315FF9B4439C2B3A2A476F67CCB611891520C8E99E346372
18E44D2E38DFF08BEEB90212C7844F3B2D5725B0156AB746CAA751BBB45FBF88
A9BD5DA531E75848992FC7B2DC423377999E93C898FA978BF052C4410891F4D2
B17ED00D32D0A37BAD07CC3C07F3B55032AAC4F30A7B4A31A9320864B3FA8B98
546E05E12858F6C96CA8764F48101892063F377D62D97EFC401DADDFCA17FB1D
607CBFD1CA9A4C95D7EB3F51902973D4A9E93B01E1A0F68696C20401F864ACC7
FBEFBE4153133E3B511FF643612B47FC1F773C27A974015C6469D6A78074DDBD
7BD26F6928F617F8690C313678F1470B7588D19E69983EF7A0C541AEFA718D51
7268CC75C41EF3D3BFE9FE0275DC51AA4082CA8375DFC137EE1280868CB3F5FE
1565585B787268983402130985DBBA42B2B562213195B8321A9CE224189BF906
1D2A6E953F7D440256360AAD37A2F878BB2908F7DE3BE20142B6DA6F4F412984
8C997A785804741F42C99DD3A8B848455FE6590274A12DF5F3BFFD89EA00F0ED
4A11D66ECC1B961D138FCA27F9A0C6A181CAC8070A8710D63B0332BD041DD1B6
2ABCD7B18E96E94CBFE2AF620498C8C03508B35AEBAA64B91103CED37B8C7AF5
2A74F9EBBBA164DC94D1DA3045ABDE67DDA056A9AD064FD72E1968AECD69B9DC
4A8AC419BD07329DD11C2DB3A7953522F972583BFDF8EFE644F4AB29AB1ECD7F
1E290173937702074B573C5FB0A135039E770BF280A42DBE88AD86EAF044410D
791A2857ABB306A028E85AD6041E12486B466EF9B8AEC150E06256CF09D1F559
B9C0EB830B0FC332DAD3CF2D6D1CD294AF15B7A25EC23B8FC1F1D9E289347DED
7BBF9553E77DAF64B4CB414ACE821D763034C666B2496CB635EA6B604726F555
22E0A7372D0F39FA814C6A1CF5D589FAF69445CA97041980D0896E6C6FF9C2F1
A08CD8249BB3617EC3B846AE1BC6FC71039F2358634B491068423F8246E4DE15
8E18849CFD6037F9FB0945C30D02338F9CDCD1FB5A91836C88943E43F21061BC
4C8694F0D0CB014A272C2E7909220CA77DCCFDE25C6CA972DFCEF2C1CF797565
03B61A762ED314F250D3AF6DA9E1A13559B40841CED232295D41212A4484FB80
FC900EB2365FEF8C13BFEEEA2A747A8B513A9193AD98B7F7B000FCBB5E1D826F
7E6B5CF173737221980F620D264D8903FCC0DD510C08D298718010E7C07F8B33
98D2D54E4004AC7ED3AF6C4C5A84D82D222C170F7E05FABCFA71B0E5F7BA6A50
08B0B494740788140ECC600BB68A115EBF96A565757882C73416FB635DD7F99D
7E8A063BC1C2E83A231C045865B06F1522C83A9F41DA208F0908C173AFA15DC5
4AD7EBFF4A4FFFEB0D69BA5D3E0B3E92A4DDB7C3CFA7F1DB2186FF44731B1F92
2EBDA571B761419942D2B5931F1B9ACF09682D10D8E66B11AAB304C9CEED7C2E
90B2B3D29680AB7BE2829E535AA2861FC8EDC6FCD91071E1F9086A9786A4D585
565E950C479B19D3BE4DCFC7761E7FEA0535DCB2BD8A945922139F399C6424AD
E25FE896838D51522F62201C85
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (report.dvi)
@start /Fa 205[28 50[{}1 41.511 /CMR5 rf /Fb 255[52{}1
58.1154 /CMSY7 rf /Fc 150[22 105[{}1 41.511 /CMMI5 rf
/Fd 145[41 4[23 25[50 9[49 69[{}4 58.1154 /CMMI7 rf /Fe
152[42 42 101[65{}3 83.022 /CMSY10 rf /Ff 205[33 33 7[26
26 40[{}4 58.1154 /CMR7 rf /Fg 135[47 7[42 1[50 73 3[29
19[57 49 51 63 2[63 3[71 1[36 3[61 7[42 1[23 23 26[52
31[{}17 83.022 /CMMI10 rf /Fh 136[44 1[44 44 44 44 1[44
44 44 44 44 2[44 44 2[44 44 44 44 44 1[44 36[44 10[44
44 46[{}21 83.022 /CMTT10 rf /Fi 129[42 3[37 44 44 1[44
46 32 33 33 44 46 42 46 69 23 1[25 23 46 42 25 37 46
37 46 42 3[23 1[23 5[62 60 46 61 65 57 65 62 1[52 65
1[30 62 65 54 57 63 60 1[62 3[65 1[23 23 42 42 42 42
42 42 42 42 42 42 42 23 28 23 2[32 32 2[69 17[42 2[23
3[46 12[{}68 83.022 /CMR10 rf /Fj 138[75 52 53 55 2[67
75 7[41 61 75 60 75 65 14[100 1[92 25[67 67 67 67 67
67 7[52 52 40[{}22 119.552 /CMBX12 rf /Fk 133[50 4[61
59 46 1[63 1[63 61 74 51 6[56 2[58 61 10[81 5[74 12[78
67[{}15 99.6264 /CMCSC10 rf /Fl 138[54 38 38 38 2[49
54 1[27 2[27 1[49 1[43 1[43 54 49 13[54 5[89 2[50 35
7[73 45[49 2[27 16[{}20 99.6264 /CMR12 rf /Fm 138[52
32 40 41 2[50 6[50 38[72 6[30 58[{}8 99.6264 /CMTI12
rf /Fn 139[75 1[79 2[97 108 1[54 1[59 54 5[86 108 94
12[135 3[132 9[122 50[97 19[{}14 172.188 /CMBX12 rf /Fo
138[73 71 55 72 1[67 76 73 89 61 1[51 36 3[67 75 71 1[73
11[97 94 73 2[89 2[118 9[94 47[66 19[{}22 119.552 /CMCSC10
rf /Fp 138[88 85 66 3[91 88 107 74 2[43 3[80 90 85 1[88
13[88 27[79 1[79 2[79 3[46 26[79 19[{}18 143.462 /CMCSC10
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 817 560 a Fp(Simula)m(ci)1436 548
y(\023)1430 560 y(on)55 b(de)e(Sistemas)h(72.25)528 1014
y Fo(Simula)m(ci)1042 1004 y(\023)1037 1014 y(on)47 b(de)d(un)i(Centr)m
(o)f(de)g(Mantenimiento)551 1113 y(p)-8 b(ara)45 b(Unid)m(ades)h(de)e
(Transpor)-8 b(te)45 b(de)f(P)-10 b(asajer)m(os)p 440
1331 2865 12 v 910 1554 a Fn(T)-16 b(raba)11 b(jo)64
b(Pr)o(\023)-96 b(actico)65 b(Final)p 440 1748 V 1299
2180 a Fm(A)n(uthors:)1299 2296 y Fl(Alb)s(erto)33 b(Miguel)g
Fk(Pose)1299 2412 y Fl(Juan)g(Ignacio)g Fk(Ca)-7 b(t)g(alano)1299
2528 y Fl(Mart)c(\023)-38 b(\020n)33 b Fk(P)-9 b(alombo)1299
2644 y Fl(San)m(tiago)33 b(Jos)m(\023)-46 b(e)33 b Fk(V)-12
b(azquez)p eop end
%%Page: 1 2
TeXDict begin 1 1 bop 440 538 a Fj(1)135 b(Pun)l(to)45
b(\(a\))440 720 y Fi(Se)28 b(mo)r(delaron)f(los)g(in)n(terv)-5
b(alos)26 b(de)i(tiemp)r(os)g(en)n(tre)g(arrib)r(os)e(y)i(el)g(tiemp)r
(o)g(de)g(servicio)e(de)440 819 y(ER)c(a)f(partir)g(de)h(los)f(datos)g
(pro)n(vistos)f(en)i(los)f(arc)n(hiv)n(os)f(hist\023)-42
b(oricos)20 b Fh(arriboscop)e Fi(y)j Fh(ercop)440 919
y Fi(resp)r(ectiv)-5 b(amen)n(te.)40 b(P)n(ara)27 b(ello,)i(se)g
(gra\014caron)d(los)i(histogramas)f(corresp)r(ondien)n(tes.)39
b(En)440 1019 y(la)19 b(Figura)f(1)h(v)n(emos)f(el)i(histograma)d
(corresp)r(ondien)n(te)h(a)g(los)h(in)n(terv)-5 b(alos)18
b(de)h(tiemp)r(os)h(en)n(tre)440 1118 y(arrib)r(os.)34
b(P)n(ara)21 b(la)j(elecci\023)-42 b(on)23 b(de)g(los)g(in)n(terv)-5
b(alos)23 b(de)g(clase)g(se)g(utiliz\023)-42 b(o)24 b(el)g(criterio)e
(de)i(Nu)r(~)-44 b(nez.)440 1218 y(Como)29 b(p)r(o)r(demos)h(v)n(er)f
(in)n(tuitiv)-5 b(amen)n(te,)32 b(la)e(distribuci\023)-42
b(on)29 b(de)i(los)e(datos)h(en)g(este)g(caso)f(es)440
1318 y(una)35 b(exp)r(onencial.)59 b(En)34 b(la)h(Figura)f(2)h(p)r(o)r
(demos)g(v)n(er)f(el)h(histograma)e(corresp)r(ondien)n(te)440
1417 y(a)h(los)g(tiemp)r(os)h(de)g(servicios)e(de)h(ER.)h(De)g(n)n(uev)
n(o,)g(in)n(tuitiv)-5 b(amen)n(te)35 b(p)r(o)r(demos)g(v)n(er)e(que)440
1517 y(la)k(distribuci\023)-42 b(on)37 b(en)g(este)g(caso)f(es)h(una)g
(normal.)65 b(Adem\023)-42 b(as,)39 b(el)e(sim)n(ulado)g(es)f(un)i(tip)
r(o)440 1616 y(pro)r(ceso)c(que)h(generalmen)n(te)f(tiene)i
(distribuci\023)-42 b(on)35 b(de)h(ese)f(tip)r(o.)60
b(Esto)35 b(nos)f(sirv)n(e)h(para)440 1716 y(reforzar)25
b(n)n(uestra)i(hip\023)-42 b(otesis.)455 3816 y @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 3401 @rwi @setspecial
%%BeginDocument: ../src/parteA/hist_arribos.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: hist_arribos.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Sat Dec 12 18:35:08 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (hist_arribos.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Sj,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Dec 12 18:35:08 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
630 420 M
63 0 V
6269 0 R
-63 0 V
stroke
546 420 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MRshow
1.000 UL
LTb
630 1228 M
63 0 V
6269 0 R
-63 0 V
stroke
546 1228 M
[ [(Helvetica) 140.0 0.0 true true 0 (100)]
] -46.7 MRshow
1.000 UL
LTb
630 2035 M
63 0 V
6269 0 R
-63 0 V
stroke
546 2035 M
[ [(Helvetica) 140.0 0.0 true true 0 (200)]
] -46.7 MRshow
1.000 UL
LTb
630 2843 M
63 0 V
6269 0 R
-63 0 V
stroke
546 2843 M
[ [(Helvetica) 140.0 0.0 true true 0 (300)]
] -46.7 MRshow
1.000 UL
LTb
630 3651 M
63 0 V
6269 0 R
-63 0 V
stroke
546 3651 M
[ [(Helvetica) 140.0 0.0 true true 0 (400)]
] -46.7 MRshow
1.000 UL
LTb
630 4458 M
63 0 V
6269 0 R
-63 0 V
stroke
546 4458 M
[ [(Helvetica) 140.0 0.0 true true 0 (500)]
] -46.7 MRshow
1.000 UL
LTb
630 420 M
0 63 V
0 4137 R
0 -63 V
stroke
630 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MCshow
1.000 UL
LTb
1781 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1781 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.2)]
] -46.7 MCshow
1.000 UL
LTb
2933 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2933 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.4)]
] -46.7 MCshow
1.000 UL
LTb
4084 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4084 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.6)]
] -46.7 MCshow
1.000 UL
LTb
5235 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5235 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.8)]
] -46.7 MCshow
1.000 UL
LTb
6386 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6386 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
630 4620 N
630 420 L
6332 0 V
0 4200 V
-6332 0 V
Z stroke
LCb setrgbcolor
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (Cantidad de arribos)]
] -33.3 MCshow
grestore
LTb
LCb setrgbcolor
3796 70 M
[ [(Helvetica) 100.0 0.0 true true 0 (Intervalos de clase)]
] -33.3 MCshow
LTb
3796 4830 M
[ [(Helvetica) 100.0 0.0 true true 0 (Histograma del tiempo entre arribo de unidades)]
] -33.3 MCshow
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
gsave 631 420 N 0 0 V 0 4135 V 482 0 V 0 -4135 V 1 PolyFill
631 420 M
0 4135 V
482 0 V
0 -4135 V
-482 0 R
0 4135 V
482 0 V
0 -4135 V
-482 0 V
stroke
LT2
gsave 1113 420 N 0 0 V 0 1930 V 483 0 V 0 -1930 V 1 PolyFill
1113 420 M
0 1930 V
483 0 V
0 -1930 V
stroke
LT0
1113 420 M
0 1930 V
483 0 V
0 -1930 V
-483 0 V
stroke
LT4
gsave 1596 420 N 0 0 V 0 1058 V 482 0 V 0 -1058 V 1 PolyFill
1596 420 M
0 1058 V
482 0 V
0 -1058 V
stroke
LT0
1596 420 M
0 1058 V
482 0 V
0 -1058 V
-482 0 V
stroke
LT6
gsave 2078 420 N 0 0 V 0 388 V 483 0 V 0 -388 V 1 PolyFill
2078 420 M
0 388 V
483 0 V
0 -388 V
stroke
LT0
2078 420 M
0 388 V
483 0 V
0 -388 V
-483 0 V
stroke
LT8
gsave 2561 420 N 0 0 V 0 210 V 483 0 V 0 -210 V 1 PolyFill
2561 420 M
0 210 V
483 0 V
0 -210 V
stroke
LT0
2561 420 M
0 210 V
483 0 V
0 -210 V
-483 0 V
stroke
LT1
gsave 3044 420 N 0 0 V 0 145 V 482 0 V 0 -145 V 1 PolyFill
3044 420 M
0 145 V
482 0 V
0 -145 V
stroke
LT0
3044 420 M
0 145 V
482 0 V
0 -145 V
-482 0 V
stroke
LT3
gsave 3526 420 N 0 0 V 0 137 V 483 0 V 0 -137 V 1 PolyFill
3526 420 M
0 137 V
483 0 V
0 -137 V
stroke
LT0
3526 420 M
0 137 V
483 0 V
0 -137 V
-483 0 V
stroke
LT5
gsave 4009 420 N 0 0 V 0 40 V 483 0 V 0 -40 V 1 PolyFill
4009 420 M
0 40 V
483 0 V
0 -40 V
stroke
LT0
4009 420 M
0 40 V
483 0 V
0 -40 V
-483 0 V
stroke
LT7
gsave 4492 420 N 0 0 V 0 16 V 482 0 V 0 -16 V 1 PolyFill
4492 420 M
0 16 V
482 0 V
0 -16 V
stroke
LT0
4492 420 M
0 16 V
482 0 V
0 -16 V
-482 0 V
stroke
gsave 4974 420 N 0 0 V 0 8 V 483 0 V 0 -8 V 1 PolyFill
4974 420 M
0 8 V
483 0 V
0 -8 V
-483 0 R
0 8 V
483 0 V
0 -8 V
-483 0 V
stroke
LT2
gsave 5457 420 N 0 0 V 0 0 V 482 0 V 0 0 V 1 PolyFill
5457 420 M
482 0 V
stroke
LT0
5457 420 M
482 0 V
-482 0 V
stroke
LT4
gsave 5939 420 N 0 0 V 0 8 V 483 0 V 0 -8 V 1 PolyFill
5939 420 M
0 8 V
483 0 V
0 -8 V
stroke
LT0
5939 420 M
0 8 V
483 0 V
0 -8 V
-483 0 V
stroke
LTb
630 4620 N
630 420 L
6332 0 V
0 4200 V
-6332 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 440 3999 a(Figure)25 b(1:)36 b(Histograma)24
b(corresp)r(ondien)n(te)g(a)h(los)g(in)n(terv)-5 b(alos)25
b(de)h(tiemp)r(os)g(en)n(tre)f(arrib)r(os.)565 4281 y(Se)30
b(utilizaron)f(los)h(test)g(de)h Fg(\037)1512 4251 y
Ff(2)1579 4281 y Fi(y)f(el)g(Gr\023)-42 b(a\014co)29
b(QQ)h(para)f(v)n(eri\014car)f(que)i(las)g(distribu-)440
4381 y(ciones)36 b(son)g(las)g(indicadas)g(previamen)n(te.)63
b(La)36 b(tabla)g(corresp)r(onde)f(al)h(test)h(realizado)440
4480 y(para)g(v)n(eri\014car)f(la)i(distribuci\023)-42
b(on)38 b(exp)r(onencial)f(de)h(los)g(tiemp)r(os)g(en)n(tre)g(arrib)r
(os,)h(se)f(v)n(e)440 4580 y(en)e(la)g(T)-7 b(abla)35
b(1.)62 b(El)36 b(test)g Fg(\037)1366 4550 y Ff(2)1440
4580 y Fi(arro)5 b(j\023)-42 b(o)34 b(un)i(v)-5 b(alor)35
b(de)h(18)p Fg(:)p Fi(213)e(que)i(implica)g(un)g(niv)n(el)g(de)440
4680 y(signi\014caci\023)-42 b(on)26 b(de)i(5\045.)565
4779 y(Adem\023)-42 b(as,)29 b(se)h(utiliz\023)-42 b(o)29
b(el)h(test)f(de)h Fg(\037)1679 4749 y Ff(2)1746 4779
y Fi(para)e(v)n(eri\014car)g(la)h(distribuci\023)-42
b(on)29 b(normal)f(de)i(los)440 4879 y(tiemp)r(os)36
b(de)g(servicio)f(de)h(ER.)g(Las)f(tablas)g(corresp)r(ondien)n(tes)f(a)
i(los)f(tests)h(realizados)440 4978 y(para)29 b(v)n(eri\014car)f(la)i
(distribuci\023)-42 b(on)30 b(normal)g(de)g(los)g(tiemp)r(os)g(de)h
(servicios)d(de)j(ER,)f(se)g(v)n(en)440 5078 y(en)22
b(las)g(T)-7 b(ablas)21 b(2)h(y)g(3.)34 b(El)22 b(test)h
Fg(\037)1465 5048 y Ff(2)1524 5078 y Fi(arro)5 b(j\023)-42
b(o)20 b(un)i(v)-5 b(alor)21 b(de)h(1)p Fg(:)p Fi(56995)e(que)i
(implica)g(un)g(niv)n(el)g(de)440 5178 y(signi\014caci\023)-42
b(on)27 b(de)i(5\045.)40 b(P)n(ara)26 b(el)j(de)g(KS,)f(obtuvimos)g(un)
h(v)-5 b(alor)28 b(de)h(0.94737.)37 b(Se)29 b(v)n(eri\014ca)440
5277 y(la)g(distribuci\023)-42 b(on)28 b(y)n(a)g(que)h(es)g(ma)n(y)n
(or)e(a)h(0)p Fg(:)p Fi(486,)g(que)h(es)g(el)g(v)-5 b(alor)27
b(obtenido)i(de)g(tabla)g(para)440 5377 y(un)f(niv)n(el)f(de)h
(signi\014caci\023)-42 b(on)26 b(de)i(0.05)e(y)i(7)f(in)n(terv)-5
b(alos.)1851 5662 y(1)p eop end
%%Page: 2 3
TeXDict begin 2 2 bop 455 2433 a @beginspecial 50 @llx
50 @lly 410 @urx 302 @ury 3401 @rwi @setspecial
%%BeginDocument: ../src/parteA/hist_servicios.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: hist_servicios.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Sat Dec 12 16:56:44 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (hist_servicios.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Santiago,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Dec 12 16:56:44 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
686 448 M
63 0 V
6241 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 602 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MRshow
0.500 UL
LTb
686 1282 M
63 0 V
6241 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 602 1282 M
[ [(Helvetica) 140.0 0.0 true true 0 (2)]
] -46.7 MRshow
0.500 UL
LTb
686 2117 M
63 0 V
6241 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 602 2117 M
[ [(Helvetica) 140.0 0.0 true true 0 (4)]
] -46.7 MRshow
0.500 UL
LTb
686 2951 M
63 0 V
6241 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 602 2951 M
[ [(Helvetica) 140.0 0.0 true true 0 (6)]
] -46.7 MRshow
0.500 UL
LTb
686 3786 M
63 0 V
6241 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 602 3786 M
[ [(Helvetica) 140.0 0.0 true true 0 (8)]
] -46.7 MRshow
0.500 UL
LTb
686 4620 M
63 0 V
6241 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 602 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 (10)]
] -46.7 MRshow
0.500 UL
LTb
1057 448 M
0 63 V
0 4109 R
0 -63 V
stroke
0.00 0.00 0.00 C 1057 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.2)]
] -46.7 MCshow
0.500 UL
LTb
1798 448 M
0 63 V
0 4109 R
0 -63 V
stroke
0.00 0.00 0.00 C 1798 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.4)]
] -46.7 MCshow
0.500 UL
LTb
2540 448 M
0 63 V
0 4109 R
0 -63 V
stroke
0.00 0.00 0.00 C 2540 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.6)]
] -46.7 MCshow
0.500 UL
LTb
3282 448 M
0 63 V
0 4109 R
0 -63 V
stroke
0.00 0.00 0.00 C 3282 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.8)]
] -46.7 MCshow
0.500 UL
LTb
4023 448 M
0 63 V
0 4109 R
0 -63 V
stroke
0.00 0.00 0.00 C 4023 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1)]
] -46.7 MCshow
0.500 UL
LTb
4765 448 M
0 63 V
0 4109 R
0 -63 V
stroke
0.00 0.00 0.00 C 4765 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.2)]
] -46.7 MCshow
0.500 UL
LTb
5507 448 M
0 63 V
0 4109 R
0 -63 V
stroke
0.00 0.00 0.00 C 5507 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.4)]
] -46.7 MCshow
0.500 UL
LTb
6248 448 M
0 63 V
0 4109 R
0 -63 V
stroke
0.00 0.00 0.00 C 6248 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.6)]
] -46.7 MCshow
0.500 UL
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
stroke
0.00 0.00 0.00 C 6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.8)]
] -46.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
686 4620 N
686 448 L
6304 0 V
0 4172 V
-6304 0 V
Z stroke
0.00 0.00 0.00 C 280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Frecuencia)]
] -46.7 MCshow
grestore
LTb
0.00 0.00 0.00 C 3838 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Intervalos de clase)]
] -46.7 MCshow
LTb
3838 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Histograma del tiempo de atencion de unidades)]
] -46.7 MCshow
1.000 UP
0.500 UL
LTb
1.000 UL
LT0
0.00 0.00 0.50 C gsave 871 448 N 0 0 V 0 834 V 742 0 V 0 -834 V 1 PolyFill
871 448 M
0 834 V
742 0 V
0 -834 V
stroke
0.500 UL
LT0
0.00 0.00 0.00 C 871 448 M
0 834 V
742 0 V
0 -834 V
-742 0 V
stroke
1.000 UL
LT2
0.00 0.00 0.50 C gsave 1798 448 N 0 0 V 0 1669 V 742 0 V 0 -1669 V 1 PolyFill
1798 448 M
0 1669 V
742 0 V
0 -1669 V
stroke
0.500 UL
LT0
0.00 0.00 0.00 C 1798 448 M
0 1669 V
742 0 V
0 -1669 V
-742 0 V
stroke
1.000 UL
LT4
0.00 0.00 0.50 C gsave 2726 448 N 0 0 V 0 2503 V 741 0 V 0 -2503 V 1 PolyFill
2726 448 M
0 2503 V
741 0 V
0 -2503 V
stroke
0.500 UL
LT0
0.00 0.00 0.00 C 2726 448 M
0 2503 V
741 0 V
0 -2503 V
-741 0 V
stroke
1.000 UL
LT6
0.00 0.00 0.50 C gsave 3653 448 N 0 0 V 0 3338 V 741 0 V 0 -3338 V 1 PolyFill
3653 448 M
0 3338 V
741 0 V
0 -3338 V
stroke
0.500 UL
LT0
0.00 0.00 0.00 C 3653 448 M
0 3338 V
741 0 V
0 -3338 V
-741 0 V
stroke
1.000 UL
LT8
0.00 0.00 0.50 C gsave 4580 448 N 0 0 V 0 4172 V 741 0 V 0 -4172 V 1 PolyFill
4580 448 M
0 4172 V
741 0 V
0 -4172 V
stroke
0.500 UL
LT0
0.00 0.00 0.00 C 4580 448 M
0 4172 V
741 0 V
0 -4172 V
-741 0 V
stroke
1.000 UL
LT1
0.00 0.00 0.50 C gsave 5507 448 N 0 0 V 0 2503 V 741 0 V 0 -2503 V 1 PolyFill
5507 448 M
0 2503 V
741 0 V
0 -2503 V
stroke
0.500 UL
LT0
0.00 0.00 0.00 C 5507 448 M
0 2503 V
741 0 V
0 -2503 V
-741 0 V
stroke
1.000 UL
LT3
0.00 0.00 0.50 C gsave 6248 448 N 0 0 V 0 834 V 742 0 V 0 -834 V 1 PolyFill
6248 448 M
0 834 V
742 0 V
0 -834 V
stroke
0.500 UL
LT0
0.00 0.00 0.00 C 6248 448 M
0 834 V
742 0 V
0 -834 V
-742 0 V
stroke
LTb
686 4620 N
686 448 L
6304 0 V
0 4172 V
-6304 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 570 2615 a Fi(Figure)27 b(2:)37 b(Histograma)25
b(corresp)r(ondien)n(te)h(a)h(los)g(tiemp)r(os)h(de)g(servicios)e(de)i
(ER.)440 2969 y Fj(2)135 b(Pun)l(to)45 b(\(b\))440 3151
y Fi(Las)36 b(colas)g(del)h(sistema)g(se)g(denominan)f(como)h(se)f(m)n
(uestra)g(en)i(la)e(Figura)g(3.)65 b(Como)440 3250 y(p)r(o)r(demos)27
b(v)n(er,)g(quedan)g(determinadas)g(p)r(or)g(el)h(conjun)n(to)1305
3432 y Fg(S)f Fi(=)c Fe(f)p Fg(U)9 b(I)e(;)14 b(E)5 b(R)q
Fi(1)p Fg(;)14 b(E)5 b(R)q Fi(2)p Fg(;)14 b(E)5 b(R)q
Fi(3)p Fg(;)14 b(S)5 b(T)12 b Fe(g)440 3613 y Fi(El)36
b(estado)f(del)h(sistema)f(se)h(encuen)n(tra)f(compuesto)g(p)r(or)h(la)
f(longitud)h(y)g(el)g(estado)f(de)440 3713 y(servicio)27
b(\(busy/free\))g(de)h(cada)f(una)h(de)g(las)g(3)f(colas.)37
b(Las)27 b(caracter)-9 b(\023)-32 b(\020sticas)25 b(del)j(sistema,)440
3812 y(determinan)23 b(que)f(to)r(das)h(las)f(colas)g(se)g(mo)r(delan)h
(como)f(de)h(capacidad)e(in\014nita)i(y)g(utilizan)440
3912 y(la)k(disciplina)h(FIF)n(O)f(\(First)h(In)g(First)f(Out\).)440
4186 y Fj(3)135 b(Pun)l(to)45 b(\(c\))440 4368 y Fi(Los)28
b(ev)n(en)n(tos)g(de)h(n)n(uestro)e(sistema)i(quedan)f(de\014nidos)h(p)
r(or)f(las)g(llegadas)g(y)g(partidas)g(de)440 4468 y(una)c(UI)h(a)g
(cada)e(una)i(de)g(las)f(etapas)f(del)i(pro)r(ceso)e(de)i(man)n
(tenimien)n(to.)36 b(Como)24 b(p)r(o)r(demos)440 4567
y(v)n(er)j(en)g(la)h(Figura)e(3,)h(los)g(tip)r(os)h(de)g(ev)n(en)n(tos)
e(estan)h(dados)g(p)r(or)g(el)h(conjun)n(to)1135 4749
y Fg(E)g Fi(=)23 b Fe(f)p Fg(I)7 b(U)i(I)e(;)14 b(O)r(U)9
b(I)e(;)14 b(I)7 b(E)e(R)q(;)14 b(O)r(E)5 b(R)q(;)14
b(I)7 b(S)e(T)i(;)14 b(O)r(S)5 b(T)12 b Fe(g)440 4930
y Fi(Como)36 b(asumimos)f(que)i(la)f(salida)f(de)i(una)f(secci\023)-42
b(on)36 b(y)g(paso)f(a)h(la)g(pr\023)-42 b(oxima)36 b(se)g(realiza)440
5030 y(instan)n(taneamen)n(te,)25 b(p)r(o)r(demos)g(uni\014car)f(los)h
(tip)r(os)g(de)g(ev)n(en)n(tos)f Fg(O)r(U)9 b(I)33 b
Fi(con)25 b Fg(I)7 b(E)e(R)26 b Fi(y)f Fg(O)r(E)5 b(R)440
5129 y Fi(con)27 b Fg(I)7 b(S)e(T)12 b Fi(.)36 b(P)n(or)26
b(lo)h(tan)n(to)g Fg(E)33 b Fi(nos)27 b(queda)g(reducido)g(a)1357
5311 y Fg(E)h Fi(=)23 b Fe(f)p Fg(I)7 b(U)i(I)e(;)14
b(I)7 b(E)e(R)q(;)14 b(I)7 b(S)e(T)i(;)14 b(O)r(S)5 b(T)12
b Fe(g)1851 5662 y Fi(2)p eop end
%%Page: 3 4
TeXDict begin 3 3 bop 533 452 2679 4 v 583 544 a Fi(Clase)251
b Fg(O)1092 556 y Fd(i)1527 544 y Fg(E)1588 556 y Fd(i)1920
544 y Fg(O)1983 556 y Fd(i)2029 544 y Fe(\000)18 b Fg(E)2173
556 y Fd(i)2358 544 y Fi(\()p Fg(O)2453 556 y Fd(i)2500
544 y Fe(\000)g Fg(E)2644 556 y Fd(i)2672 544 y Fi(\))2704
514 y Ff(2)2861 503 y(\()p Fd(O)2937 511 y Fc(i)2963
503 y Fb(\000)p Fd(E)3064 511 y Fc(i)3090 503 y Ff(\))3116
478 y Fa(2)p 2861 525 289 4 v 2967 572 a Fd(E)3016 580
y Fc(i)p 533 584 2679 4 v 583 654 a Fi(1)252 b(512.000000)95
b(483.209027)g(-28.790973)h(828.920123)f(1.715448)583
753 y(2)252 b(239.000000)95 b(249.533949)109 b(10.533949)h(110.964084)
95 b(0.444685)583 853 y(3)252 b(131.000000)95 b(128.861814)116
b(-2.138186)158 b(4.571839)138 b(0.035479)583 953 y(4)272
b(48.000000)138 b(66.545523)130 b(18.545523)110 b(343.936416)95
b(5.168438)583 1052 y(5)272 b(26.000000)138 b(34.364770)151
b(8.364770)g(69.969378)117 b(2.036079)583 1152 y(6)272
b(18.000000)138 b(17.746309)f(-0.253691)158 b(0.064359)138
b(0.003627)583 1251 y(7)272 b(17.000000)158 b(9.164371)h(-7.835629)137
b(61.397088)117 b(6.699542)583 1351 y(8)293 b(5.000000)179
b(4.732572)159 b(-0.267428)f(0.071518)138 b(0.015112)583
1451 y(9)293 b(2.000000)179 b(2.443947)173 b(0.443947)f(0.197089)138
b(0.080644)583 1550 y(10)251 b(1.000000)179 b(1.262079)173
b(0.262079)f(0.068685)138 b(0.054422)583 1650 y(11)251
b(0.000000)179 b(0.651750)173 b(0.651750)f(0.424778)138
b(0.651750)583 1750 y(12)251 b(1.000000)179 b(0.336570)159
b(-0.663430)f(0.440139)138 b(1.307719)p 533 1783 V 638
1942 a(T)-7 b(able)27 b(1:)36 b(C\023)-42 b(omputos)28
b(para)e(el)i(test)f Fg(\037)1855 1912 y Ff(2)1920 1942
y Fi(para)g(la)g(distribuci\023)-42 b(on)27 b(exp)r(onencial.)p
623 2144 2499 4 v 673 2236 a(Clase)230 b Fg(O)1161 2248
y Fd(i)1533 2236 y Fg(E)1594 2248 y Fd(i)1864 2236 y
Fg(O)1927 2248 y Fd(i)1974 2236 y Fe(\000)18 b Fg(E)2118
2248 y Fd(i)2275 2236 y Fi(\()p Fg(O)2370 2248 y Fd(i)2417
2236 y Fe(\000)g Fg(E)2561 2248 y Fd(i)2589 2236 y Fi(\))2621
2206 y Ff(2)2771 2196 y(\()p Fd(O)2847 2204 y Fc(i)2874
2196 y Fb(\000)p Fd(E)2975 2204 y Fc(i)3001 2196 y Ff(\))3027
2171 y Fa(2)p 2771 2217 289 4 v 2877 2265 a Fd(E)2926
2273 y Fc(i)p 623 2276 2499 4 v 673 2346 a Fi(1)272 b(2.000000)117
b(1.210939)96 b(-0.789061)131 b(0.622618)g(0.514161)673
2446 y(2)272 b(4.000000)117 b(3.619368)96 b(-0.380632)131
b(0.144881)g(0.040029)673 2545 y(3)272 b(6.000000)117
b(7.209408)110 b(1.209408)145 b(1.462667)131 b(0.202883)673
2645 y(4)272 b(8.000000)117 b(9.574088)110 b(1.574088)145
b(2.477754)131 b(0.258798)673 2744 y(5)251 b(10.000000)96
b(8.478138)g(-1.521862)131 b(2.316063)g(0.273181)673
2844 y(6)272 b(6.000000)117 b(5.005838)96 b(-0.994162)131
b(0.988358)g(0.197441)673 2944 y(7)272 b(2.000000)117
b(2.452396)110 b(0.452396)145 b(0.204662)131 b(0.083454)p
623 2977 V 723 3136 a(T)-7 b(able)27 b(2:)37 b(C\023)-42
b(omputos)27 b(para)f(el)i(test)g Fg(\037)1941 3106 y
Ff(2)2006 3136 y Fi(para)e(la)h(distribuci\023)-42 b(on)27
b(normal.)440 3491 y Fj(4)135 b(Pun)l(to)45 b(\(d\))440
3672 y Fi(P)n(ara)33 b(la)i(sim)n(ulaci\023)-42 b(on)34
b(se)g(utiliz\023)-42 b(o)36 b(el)f(generador)d(de)j(n)n(umeros)f
(pseudo-aleatorios)e(GLC)440 3772 y(de)j(o)r(cta)n(v)n(e,)h(utilizando)
f(como)g(semilla)g(el)g(n)n(umero)f(1000.)58 b(El)35
b(tiemp)r(o)h(de)f(sim)n(ulaci\023)-42 b(on)440 3872
y(se)29 b(extiende)h(hasta)f(apro)n(ximadamen)n(te)e(22000)g(min)n
(utos,)j(aunque)g(se)f(le)g(prop)r(orcionan)440 3971
y(en)n(tradas)k(al)i(sistema)f(p)r(or)h(50)f(hs.)59 b(Esto)34
b(se)g(implemen)n(t\023)-42 b(o)36 b(de)f(esta)f(manera)g(para)f(que)
440 4071 y(se)g(otorgue)e(un)i(margen)f(que)h(p)r(ermita)g(\014nalizar)
f(la)g(atenci\023)-42 b(on)33 b(de)g(to)r(das)f(las)h(unidades)440
4171 y(encoladas.)h(Los)25 b(resultados)e(obtenidos)i(para)f(la)g
(longitud)h(de)g(la)g(cola)f(en)h(UI)g(se)g(pueden)440
4270 y(v)n(er)35 b(en)g(la)g(Figura)g(4.)60 b(Como)35
b(p)r(o)r(demos)g(v)n(er,)i(al)e(inicio)g(de)h(la)f(sim)n(ulaci\023)-42
b(on,)36 b(la)g(misma)440 4370 y(aumen)n(ta)c(de)h(forma)e(casi)h
(lineal)h(llegando)e(a)h(un)h(m\023)-42 b(aximo)32 b(de)g(apro)n
(ximadamen)n(te)f(180)440 4469 y(unidades)23 b(en)g(la)g(cola.)35
b(Luego)22 b(de)h(este)g(pun)n(to)g(comienza)f(el)i(descenso,)f(que)g
(coincide)g(con)440 4569 y(el)34 b(instan)n(te)f(en)h(el)f(cual)g(se)h
(dejan)f(de)h(ingresar)e(unidades)h(al)g(sistema.)54
b(Este)34 b(comp)r(or-)440 4669 y(tamien)n(to)25 b(es)f(esp)r(erado,)g
(y)n(a)g(que)h(dado)f(que)h(el)g(tiemp)r(o)g(de)g(atenci\023)-42
b(on)25 b(de)g(la)f(UI)h(tiene)h(una)440 4768 y(distribuci\023)-42
b(on)28 b(uniforme)h(en)n(tre)f(10)f(y)i(20)e(\(min)n(utos\),)i(se)g
(presen)n(ta)e(un)i(cuello)f(de)h(b)r(otella)440 4868
y(en)23 b(este)g(pun)n(to.)36 b(Esto)22 b(sucede)h(p)r(orque)g(la)g(en)
n(trada)f(tiene)h(distribuci\023)-42 b(on)23 b(exp)r(onencial)g(con)440
4968 y(media)k(8)p Fg(:)p Fi(2202)f(min)n(utos.)475 5067
y(En)d(la)g(Figura)f(5)h(p)r(o)r(demos)g(v)n(er)f(la)h(longitud)g(de)g
(la)g(cola)f(de)h(ER)g(duran)n(te)f(la)h(sim)n(ulaci\023)-42
b(on.)440 5167 y(Como)26 b(el)h(tiemp)r(o)g(de)g(atenci\023)-42
b(on)26 b(tiene)h(distribuci\023)-42 b(on)27 b(gaussiana)e(con)h(media)
h(1.05,)e(es)i(es-)440 5266 y(p)r(erable)j(que)g(la)g(longitud)g(de)g
(la)g(cola)f(se)h(man)n(tenga)f(en)h(0)g(p)r(ermanen)n(temen)n(te,)g(y)
n(a)f(que)440 5366 y(ap)r(enas)23 b(sale)f(una)i(unidad)f(de)h(UI,)f
(alguno)g(de)g(los)g(servidores)e(de)j(ER)f(y)n(a)f(esta)h(disp)r
(onible)1851 5662 y(3)p eop end
%%Page: 4 5
TeXDict begin 4 4 bop 440 460 3492 4 v 490 530 a Fg(x)537
542 y Fd(i)p 843 560 4 100 v 894 530 a Fi(0.052632)138
b(0.105263)124 b(0.157895)g(0.210526)g(0.263158)g(0.157895)g(0.052632)
490 629 y Fg(i=n)p 843 659 V 283 w Fi(0.032249)138 b(0.128636)124
b(0.320630)g(0.575598)g(0.801380)g(0.934690)g(1.000000)509
698 y Fd(i)p 500 712 42 4 v 500 759 a(n)569 730 y Fe(\000)18
b Fg(x)699 742 y Fd(i)p 843 760 4 102 v 894 730 a Fi(-0.020383)110
b(0.023373)124 b(0.162735)g(0.365072)g(0.538222)g(0.776795)g(0.947368)
490 831 y Fg(x)537 843 y Fd(i)583 831 y Fe(\000)676 799
y Fd(i)p Fb(\000)p Ff(1)p 676 813 109 4 v 710 860 a Fd(n)p
843 861 4 102 v 894 831 a Fi(0.052632)g(-0.037594)96
b(-0.127820)g(-0.218045)g(-0.308271)g(-0.556391)g(-0.804511)p
440 865 3492 4 v 693 1014 a(T)-7 b(able)27 b(3:)37 b(C\023)-42
b(omputos)27 b(para)f(el)i(test)g Fg(K)6 b(S)f Fi(.)36
b(P)n(ara)25 b(la)i(distribuci\023)-42 b(on)28 b(normal)455
2959 y @beginspecial 0 @llx 0 @lly 920 @urx 567 @ury
3401 @rwi @setspecial
%%BeginDocument: ./states.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/sj/ss/ss2009/tp_final/doc/states.dia
%%Creator: Dia v0.96.1
%%CreationDate: Sat Dec 12 15:47:30 2009
%%For: sj
%%Orientation: Portrait
%%Magnification: 1.0000
%%BoundingBox: 0 0 920 567
%%BeginSetup
%%EndSetup
%%EndComments
%%BeginProlog
[ /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E
/F /G /H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W /X /Y
/Z /bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft /a /b /c
/d /e /f /g /h /i /j /k /l /m
/n /o /p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section /dieresis /copyright
/ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron /degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf
/threequarters /questiondown /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde
/Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute /Ucircumflex
/Udieresis /Yacute /Thorn /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
/ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
/uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] /isolatin1encoding exch def
/cp {closepath} bind def
/c {curveto} bind def
/f {fill} bind def
/a {arc} bind def
/ef {eofill} bind def
/ex {exch} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth pop} bind def
/tr {translate} bind def

/ellipsedict 8 dict def
ellipsedict /mtrx matrix put
/ellipse
{ ellipsedict begin
   /endangle exch def
   /startangle exch def
   /yrad exch def
   /xrad exch def
   /y exch def
   /x exch def   /savematrix mtrx currentmatrix def
   x y tr xrad yrad sc
   0 0 1 startangle endangle arc
   savematrix setmatrix
   end
} def

/mergeprocs {
dup length
3 -1 roll
dup
length
dup
5 1 roll
3 -1 roll
add
array cvx
dup
3 -1 roll
0 exch
putinterval
dup
4 2 roll
putinterval
} bind def
/dpi_x 300 def
/dpi_y 300 def
/conicto {
    /to_y exch def
    /to_x exch def
    /conic_cntrl_y exch def
    /conic_cntrl_x exch def
    currentpoint
    /p0_y exch def
    /p0_x exch def
    /p1_x p0_x conic_cntrl_x p0_x sub 2 3 div mul add def
    /p1_y p0_y conic_cntrl_y p0_y sub 2 3 div mul add def
    /p2_x p1_x to_x p0_x sub 1 3 div mul add def
    /p2_y p1_y to_y p0_y sub 1 3 div mul add def
    p1_x p1_y p2_x p2_y to_x to_y curveto
} bind def
/start_ol { gsave 1.1 dpi_x div dup scale} bind def
/end_ol { closepath fill grestore } bind def
28.346000 -28.346000 scale
-4.509815 -20.610125 translate
%%EndProlog


0.100000 slw
[1.000000] 0 sd
[1.000000] 0 sd
0 slj
1.000000 1.000000 1.000000 srgb
n 17.200000 4.150000 m 17.200000 17.500000 l 23.750000 17.500000 l 23.750000 4.150000 l f
n 17.200000 4.150000 m 17.200000 4.150000 0.000000 0.000000 180.000000 270.000000 ellipse f
n 23.750000 4.150000 m 23.750000 4.150000 0.000000 0.000000 270.000000 360.000000 ellipse f
n 17.200000 4.150000 m 17.200000 17.500000 l 23.750000 17.500000 l 23.750000 4.150000 l f
n 17.200000 17.500000 m 17.200000 17.500000 0.000000 0.000000 90.000000 180.000000 ellipse f
n 23.750000 17.500000 m 23.750000 17.500000 0.000000 0.000000 0.000000 90.000000 ellipse f
0.000000 0.000000 0.000000 srgb
n 17.200000 4.150000 m 23.750000 4.150000 l s
n 17.200000 17.500000 m 23.750000 17.500000 l s
n 17.200000 4.150000 0.000000 0.000000 180.000000 270.000000 ellipse s
n 23.750000 4.150000 0.000000 0.000000 270.000000 360.000000 ellipse s
n 17.200000 4.150000 m 17.200000 17.500000 l s
n 23.750000 4.150000 m 23.750000 17.500000 l s
n 17.200000 17.500000 0.000000 0.000000 90.000000 180.000000 ellipse s
n 23.750000 17.500000 0.000000 0.000000 0.000000 90.000000 ellipse s
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 8.875000 10.600000 1.625000 1.000000 0 360 ellipse f
0.000000 0.000000 0.000000 srgb
n 8.875000 10.600000 1.625000 1.000000 0 360 ellipse cp s
gsave 8.575000 10.742500 translate 0.035278 -0.035278 scale
start_ol
448 3200 moveto
896 3200 lineto
896 1276 lineto
896 767 1077 543 conicto
1259 320 1665 320 conicto
2069 320 2250 543 conicto
2432 767 2432 1276 conicto
2432 3200 lineto
2880 3200 lineto
2880 1223 lineto
2880 586 2572 261 conicto
2265 -64 1665 -64 conicto
1063 -64 755 261 conicto
448 586 448 1223 conicto
448 3200 lineto
end_ol grestore 
gsave 9.002095 10.742500 translate 0.035278 -0.035278 scale
start_ol
448 3200 moveto
896 3200 lineto
896 0 lineto
448 0 lineto
448 3200 lineto
end_ol grestore 
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 20.625000 5.600000 1.625000 1.000000 0 360 ellipse f
0.000000 0.000000 0.000000 srgb
n 20.625000 5.600000 1.625000 1.000000 0 360 ellipse cp s
gsave 20.053750 5.742500 translate 0.035278 -0.035278 scale
start_ol
448 3200 moveto
2432 3200 lineto
2432 2816 lineto
896 2816 lineto
896 1920 lineto
2368 1920 lineto
2368 1536 lineto
896 1536 lineto
896 384 lineto
2496 384 lineto
2496 0 lineto
448 0 lineto
448 3200 lineto
end_ol grestore 
gsave 20.420901 5.742500 translate 0.035278 -0.035278 scale
start_ol
2017 1504 moveto
2155 1456 2285 1299 conicto
2416 1143 2547 869 conicto
3008 0 lineto
2522 0 lineto
2120 816 lineto
1956 1135 1802 1239 conicto
1649 1344 1383 1344 conicto
896 1344 lineto
896 0 lineto
448 0 lineto
448 3200 lineto
1459 3200 lineto
2014 3200 2287 2971 conicto
2560 2742 2560 2280 conicto
2560 1979 2421 1780 conicto
2282 1581 2017 1504 conicto
896 2816 moveto
896 1728 lineto
1459 1728 lineto
1782 1728 1947 1866 conicto
2112 2005 2112 2274 conicto
2112 2543 1947 2679 conicto
1782 2816 1459 2816 conicto
896 2816 lineto
end_ol grestore 
gsave 20.825515 5.742500 translate 0.035278 -0.035278 scale
start_ol
576 320 moveto
1280 320 lineto
1280 2880 lineto
512 2752 lineto
512 3072 lineto
1289 3200 lineto
1728 3200 lineto
1728 320 lineto
2432 320 lineto
2432 0 lineto
576 0 lineto
576 320 lineto
end_ol grestore 
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 20.585000 10.610000 1.625000 1.000000 0 360 ellipse f
0.000000 0.000000 0.000000 srgb
n 20.585000 10.610000 1.625000 1.000000 0 360 ellipse cp s
gsave 20.013750 10.752500 translate 0.035278 -0.035278 scale
start_ol
448 3200 moveto
2432 3200 lineto
2432 2816 lineto
896 2816 lineto
896 1920 lineto
2368 1920 lineto
2368 1536 lineto
896 1536 lineto
896 384 lineto
2496 384 lineto
2496 0 lineto
448 0 lineto
448 3200 lineto
end_ol grestore 
gsave 20.380901 10.752500 translate 0.035278 -0.035278 scale
start_ol
2017 1504 moveto
2155 1456 2285 1299 conicto
2416 1143 2547 869 conicto
3008 0 lineto
2522 0 lineto
2120 816 lineto
1956 1135 1802 1239 conicto
1649 1344 1383 1344 conicto
896 1344 lineto
896 0 lineto
448 0 lineto
448 3200 lineto
1459 3200 lineto
2014 3200 2287 2971 conicto
2560 2742 2560 2280 conicto
2560 1979 2421 1780 conicto
2282 1581 2017 1504 conicto
896 2816 moveto
896 1728 lineto
1459 1728 lineto
1782 1728 1947 1866 conicto
2112 2005 2112 2274 conicto
2112 2543 1947 2679 conicto
1782 2816 1459 2816 conicto
896 2816 lineto
end_ol grestore 
gsave 20.785515 10.752500 translate 0.035278 -0.035278 scale
start_ol
833 320 moveto
2385 320 lineto
2385 0 lineto
320 0 lineto
320 320 lineto
570 585 1001 1030 conicto
1432 1476 1542 1605 conicto
1753 1848 1836 2015 conicto
1920 2183 1920 2346 conicto
1920 2610 1736 2777 conicto
1552 2944 1258 2944 conicto
1048 2944 816 2864 conicto
584 2785 320 2624 conicto
320 3072 lineto
589 3167 822 3215 conicto
1056 3264 1249 3264 conicto
1760 3264 2064 3011 conicto
2368 2758 2368 2335 conicto
2368 2134 2292 1954 conicto
2216 1775 2016 1530 conicto
1961 1467 1665 1165 conicto
1370 863 833 320 conicto
end_ol grestore 
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 20.595000 15.670000 1.625000 1.000000 0 360 ellipse f
0.000000 0.000000 0.000000 srgb
n 20.595000 15.670000 1.625000 1.000000 0 360 ellipse cp s
gsave 20.023750 15.812500 translate 0.035278 -0.035278 scale
start_ol
448 3200 moveto
2432 3200 lineto
2432 2816 lineto
896 2816 lineto
896 1920 lineto
2368 1920 lineto
2368 1536 lineto
896 1536 lineto
896 384 lineto
2496 384 lineto
2496 0 lineto
448 0 lineto
448 3200 lineto
end_ol grestore 
gsave 20.390901 15.812500 translate 0.035278 -0.035278 scale
start_ol
2017 1504 moveto
2155 1456 2285 1299 conicto
2416 1143 2547 869 conicto
3008 0 lineto
2522 0 lineto
2120 816 lineto
1956 1135 1802 1239 conicto
1649 1344 1383 1344 conicto
896 1344 lineto
896 0 lineto
448 0 lineto
448 3200 lineto
1459 3200 lineto
2014 3200 2287 2971 conicto
2560 2742 2560 2280 conicto
2560 1979 2421 1780 conicto
2282 1581 2017 1504 conicto
896 2816 moveto
896 1728 lineto
1459 1728 lineto
1782 1728 1947 1866 conicto
2112 2005 2112 2274 conicto
2112 2543 1947 2679 conicto
1782 2816 1459 2816 conicto
896 2816 lineto
end_ol grestore 
gsave 20.795515 15.812500 translate 0.035278 -0.035278 scale
start_ol
1715 1773 moveto
2053 1705 2242 1489 conicto
2432 1273 2432 956 conicto
2432 469 2105 202 conicto
1779 -64 1177 -64 conicto
975 -64 761 -16 conicto
548 32 320 128 conicto
320 576 lineto
499 418 711 337 conicto
924 256 1156 256 conicto
1561 256 1772 431 conicto
1984 607 1984 942 conicto
1984 1251 1787 1425 conicto
1590 1600 1238 1600 conicto
896 1600 lineto
896 1920 lineto
1253 1920 lineto
1546 1920 1701 2050 conicto
1856 2180 1856 2424 conicto
1856 2675 1696 2809 conicto
1536 2944 1238 2944 conicto
1069 2944 875 2897 conicto
681 2851 448 2752 conicto
448 3136 lineto
684 3200 890 3232 conicto
1097 3264 1280 3264 conicto
1753 3264 2028 3046 conicto
2304 2828 2304 2457 conicto
2304 2198 2151 2020 conicto
1998 1842 1715 1773 conicto
end_ol grestore 
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 10.500000 10.600000 m 18.960000 10.610000 l s
0.100000 slw
[] 0 sd
0 slj
n 17.450001 10.608215 m 18.954090 15.609997 l s
n 17.450001 10.608215 m 18.965910 5.610003 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 22.210000 10.610000 m 30.560044 10.568145 l s
0.100000 slw
[] 0 sd
0 slj
n 23.709981 10.602481 m 22.184938 5.610063 l s
n 23.709981 10.602481 m 22.235062 15.609937 l s
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 32.185000 10.560000 1.625000 1.000000 0 360 ellipse f
0.000000 0.000000 0.000000 srgb
n 32.185000 10.560000 1.625000 1.000000 0 360 ellipse cp s
gsave 31.821250 10.702500 translate 0.035278 -0.035278 scale
start_ol
2368 3072 moveto
2368 2624 lineto
2125 2753 1910 2816 conicto
1695 2880 1494 2880 conicto
1146 2880 957 2741 conicto
768 2603 768 2348 conicto
768 2134 893 2025 conicto
1019 1916 1369 1849 conicto
1627 1797 lineto
2105 1706 2332 1477 conicto
2560 1249 2560 865 conicto
2560 408 2248 172 conicto
1936 -64 1334 -64 conicto
1107 -64 850 -15 conicto
594 33 320 128 conicto
320 576 lineto
584 449 837 384 conicto
1091 320 1336 320 conicto
1708 320 1910 458 conicto
2112 597 2112 853 conicto
2112 1077 1969 1203 conicto
1827 1330 1502 1393 conicto
1243 1443 lineto
756 1541 538 1750 conicto
320 1960 320 2334 conicto
320 2766 617 3015 conicto
915 3264 1437 3264 conicto
1660 3264 1892 3216 conicto
2125 3168 2368 3072 conicto
end_ol grestore 
gsave 32.190898 10.702500 translate 0.035278 -0.035278 scale
start_ol
0 3200 moveto
2752 3200 lineto
2752 2816 lineto
1600 2816 lineto
1600 0 lineto
1152 0 lineto
1152 2816 lineto
0 2816 lineto
0 3200 lineto
end_ol grestore 
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 33.810000 10.560000 m 36.413199 10.551575 l s
[] 0 sd
0 slj
0 slc
n 36.788197 10.550362 m 36.289009 10.801979 l 36.413199 10.551575 l 36.287391 10.301981 l ef
n 36.788197 10.550362 m 36.289009 10.801979 l 36.413199 10.551575 l 36.287391 10.301981 l cp s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 4.560189 10.620186 m 6.763210 10.603653 l s
[] 0 sd
0 slj
0 slc
n 7.138200 10.600839 m 6.640090 10.854584 l 6.763210 10.603653 l 6.636338 10.354598 l ef
n 7.138200 10.600839 m 6.640090 10.854584 l 6.763210 10.603653 l 6.636338 10.354598 l cp s
gsave 5.100000 9.700000 translate 0.035278 -0.035278 scale
start_ol
640 4800 moveto
1280 4800 lineto
1280 0 lineto
640 0 lineto
640 4800 lineto
end_ol grestore 
gsave 5.357258 9.700000 translate 0.035278 -0.035278 scale
start_ol
576 4800 moveto
1216 4800 lineto
1216 1893 lineto
1216 1124 1495 786 conicto
1775 448 2402 448 conicto
3025 448 3304 786 conicto
3584 1124 3584 1893 conicto
3584 4800 lineto
4224 4800 lineto
4224 1813 lineto
4224 884 3763 410 conicto
3302 -64 2402 -64 conicto
1498 -64 1037 410 conicto
576 884 576 1813 conicto
576 4800 lineto
end_ol grestore 
gsave 5.996656 9.700000 translate 0.035278 -0.035278 scale
start_ol
640 4800 moveto
1280 4800 lineto
1280 0 lineto
640 0 lineto
640 4800 lineto
end_ol grestore 
gsave 11.010000 9.622500 translate 0.035278 -0.035278 scale
start_ol
3002 4416 moveto
2470 4416 2063 4154 conicto
1656 3893 1354 3357 conicto
1162 3015 1061 2631 conicto
960 2248 960 1858 conicto
960 1182 1279 815 conicto
1598 448 2182 448 conicto
2707 448 3119 713 conicto
3531 978 3823 1501 conicto
4019 1852 4121 2237 conicto
4224 2622 4224 3006 conicto
4224 3678 3903 4047 conicto
3583 4416 3002 4416 conicto
2160 -64 moveto
1272 -64 764 461 conicto
256 987 256 1899 conicto
256 2421 454 2965 conicto
653 3510 1001 3935 conicto
1411 4435 1914 4681 conicto
2418 4928 3024 4928 conicto
3908 4928 4418 4407 conicto
4928 3887 4928 2988 conicto
4928 2434 4734 1899 conicto
4541 1364 4179 929 conicto
3766 426 3267 181 conicto
2769 -64 2160 -64 conicto
end_ol grestore 
gsave 11.696858 9.622500 translate 0.035278 -0.035278 scale
start_ol
1064 4800 moveto
1719 4800 lineto
1152 1893 lineto
1117 1698 1102 1571 conicto
1088 1444 1088 1348 conicto
1088 906 1336 677 conicto
1584 448 2063 448 conicto
2685 448 3031 787 conicto
3377 1127 3525 1893 conicto
4092 4800 lineto
4745 4800 lineto
4165 1813 lineto
3973 852 3435 394 conicto
2898 -64 1963 -64 conicto
1234 -64 809 294 conicto
384 652 384 1266 conicto
384 1377 401 1515 conicto
418 1654 453 1813 conicto
1064 4800 lineto
end_ol grestore 
gsave 12.336257 9.622500 translate 0.035278 -0.035278 scale
start_ol
1152 4800 moveto
1805 4800 lineto
862 0 lineto
192 0 lineto
1152 4800 lineto
end_ol grestore 
gsave 14.770000 9.632500 translate 0.035278 -0.035278 scale
start_ol
640 4800 moveto
1280 4800 lineto
1280 0 lineto
640 0 lineto
640 4800 lineto
end_ol grestore 
gsave 15.027258 9.632500 translate 0.035278 -0.035278 scale
start_ol
640 4800 moveto
3648 4800 lineto
3648 4288 lineto
1280 4288 lineto
1280 2816 lineto
3584 2816 lineto
3584 2304 lineto
1280 2304 lineto
1280 512 lineto
3712 512 lineto
3712 0 lineto
640 0 lineto
640 4800 lineto
end_ol grestore 
gsave 15.579236 9.632500 translate 0.035278 -0.035278 scale
start_ol
2932 2261 moveto
3146 2190 3349 1959 conicto
3552 1728 3756 1324 conicto
4416 0 lineto
3717 0 lineto
3085 1243 lineto
2843 1730 2616 1889 conicto
2390 2048 1998 2048 conicto
1280 2048 lineto
1280 0 lineto
640 0 lineto
640 4800 lineto
2109 4800 lineto
2949 4800 3362 4457 conicto
3776 4115 3776 3423 conicto
3776 2972 3560 2674 conicto
3344 2376 2932 2261 conicto
1280 4288 moveto
1280 2560 lineto
2109 2560 lineto
2586 2560 2829 2780 conicto
3072 3000 3072 3427 conicto
3072 3854 2829 4071 conicto
2586 4288 2109 4288 conicto
1280 4288 lineto
end_ol grestore 
gsave 24.330000 9.692500 translate 0.035278 -0.035278 scale
start_ol
3002 4416 moveto
2470 4416 2063 4154 conicto
1656 3893 1354 3357 conicto
1162 3015 1061 2631 conicto
960 2248 960 1858 conicto
960 1182 1279 815 conicto
1598 448 2182 448 conicto
2707 448 3119 713 conicto
3531 978 3823 1501 conicto
4019 1852 4121 2237 conicto
4224 2622 4224 3006 conicto
4224 3678 3903 4047 conicto
3583 4416 3002 4416 conicto
2160 -64 moveto
1272 -64 764 461 conicto
256 987 256 1899 conicto
256 2421 454 2965 conicto
653 3510 1001 3935 conicto
1411 4435 1914 4681 conicto
2418 4928 3024 4928 conicto
3908 4928 4418 4407 conicto
4928 3887 4928 2988 conicto
4928 2434 4734 1899 conicto
4541 1364 4179 929 conicto
3766 426 3267 181 conicto
2769 -64 2160 -64 conicto
end_ol grestore 
gsave 25.016858 9.692500 translate 0.035278 -0.035278 scale
start_ol
1152 4800 moveto
4160 4800 lineto
4055 4288 lineto
1687 4288 lineto
1413 2816 lineto
3685 2816 lineto
3580 2304 lineto
1308 2304 lineto
971 512 lineto
3398 512 lineto
3293 0 lineto
192 0 lineto
1152 4800 lineto
end_ol grestore 
gsave 25.568837 9.692500 translate 0.035278 -0.035278 scale
start_ol
1688 4288 moveto
1366 2560 lineto
2186 2560 lineto
2668 2560 2966 2835 conicto
3264 3111 3264 3554 conicto
3264 3910 3064 4099 conicto
2864 4288 2489 4288 conicto
1688 4288 lineto
2857 2313 moveto
3062 2265 3198 2076 conicto
3335 1887 3515 1324 conicto
3935 0 lineto
3232 0 lineto
2864 1243 lineto
2722 1723 2536 1885 conicto
2350 2048 1965 2048 conicto
1262 2048 lineto
862 0 lineto
192 0 lineto
1152 4800 lineto
2586 4800 lineto
3254 4800 3611 4500 conicto
3968 4201 3968 3637 conicto
3968 3137 3662 2771 conicto
3357 2406 2857 2313 conicto
end_ol grestore 
gsave 28.460000 9.672500 translate 0.035278 -0.035278 scale
start_ol
640 4800 moveto
1280 4800 lineto
1280 0 lineto
640 0 lineto
640 4800 lineto
end_ol grestore 
gsave 28.717258 9.672500 translate 0.035278 -0.035278 scale
start_ol
3520 4672 moveto
3520 4032 lineto
3161 4226 2842 4321 conicto
2523 4416 2227 4416 conicto
1711 4416 1431 4205 conicto
1152 3995 1152 3606 conicto
1152 3280 1337 3114 conicto
1523 2948 2040 2846 conicto
2420 2765 lineto
3148 2627 3494 2279 conicto
3840 1932 3840 1349 conicto
3840 654 3367 295 conicto
2895 -64 1983 -64 conicto
1639 -64 1251 17 conicto
863 98 448 256 conicto
448 896 lineto
844 674 1224 561 conicto
1605 448 1972 448 conicto
2530 448 2833 667 conicto
3136 886 3136 1293 conicto
3136 1647 2926 1847 conicto
2716 2047 2236 2147 conicto
1853 2224 lineto
1111 2370 779 2681 conicto
448 2992 448 3547 conicto
448 4189 894 4558 conicto
1340 4928 2123 4928 conicto
2459 4928 2807 4864 conicto
3156 4800 3520 4672 conicto
end_ol grestore 
gsave 29.271733 9.672500 translate 0.035278 -0.035278 scale
start_ol
-64 4800 moveto
4032 4800 lineto
4032 4288 lineto
2304 4288 lineto
2304 0 lineto
1664 0 lineto
1664 4288 lineto
-64 4288 lineto
-64 4800 lineto
end_ol grestore 
gsave 34.070000 9.632500 translate 0.035278 -0.035278 scale
start_ol
2627 4416 moveto
1920 4416 1504 3883 conicto
1088 3350 1088 2430 conicto
1088 1514 1504 981 conicto
1920 448 2627 448 conicto
3334 448 3747 981 conicto
4160 1514 4160 2430 conicto
4160 3350 3747 3883 conicto
3334 4416 2627 4416 conicto
2627 4928 moveto
3645 4928 4254 4249 conicto
4864 3571 4864 2430 conicto
4864 1293 4254 614 conicto
3645 -64 2627 -64 conicto
1606 -64 995 613 conicto
384 1290 384 2430 conicto
384 3571 995 4249 conicto
1606 4928 2627 4928 conicto
end_ol grestore 
gsave 34.756858 9.632500 translate 0.035278 -0.035278 scale
start_ol
3520 4672 moveto
3520 4032 lineto
3161 4226 2842 4321 conicto
2523 4416 2227 4416 conicto
1711 4416 1431 4205 conicto
1152 3995 1152 3606 conicto
1152 3280 1337 3114 conicto
1523 2948 2040 2846 conicto
2420 2765 lineto
3148 2627 3494 2279 conicto
3840 1932 3840 1349 conicto
3840 654 3367 295 conicto
2895 -64 1983 -64 conicto
1639 -64 1251 17 conicto
863 98 448 256 conicto
448 896 lineto
844 674 1224 561 conicto
1605 448 1972 448 conicto
2530 448 2833 667 conicto
3136 886 3136 1293 conicto
3136 1647 2926 1847 conicto
2716 2047 2236 2147 conicto
1853 2224 lineto
1111 2370 779 2681 conicto
448 2992 448 3547 conicto
448 4189 894 4558 conicto
1340 4928 2123 4928 conicto
2459 4928 2807 4864 conicto
3156 4800 3520 4672 conicto
end_ol grestore 
gsave 35.311334 9.632500 translate 0.035278 -0.035278 scale
start_ol
-64 4800 moveto
4032 4800 lineto
4032 4288 lineto
2304 4288 lineto
2304 0 lineto
1664 0 lineto
1664 4288 lineto
-64 4288 lineto
-64 4800 lineto
end_ol grestore 
showpage

%%EndDocument
 @endspecial 1086 3142 a(Figure)f(3:)36 b(Diagrama)26
b(de)i(estados)e(del)i(sistema.)440 3490 y(para)e(atenderlo.)565
3689 y(P)n(or)i(\023)-44 b(ultimo,)27 b(p)r(o)r(demos)h(v)n(er)e(la)i
(Figura)e(6)h(que)h(nos)f(m)n(uestra)g(la)g(longitud)g(de)h(la)f(cola)
440 3789 y(de)33 b(ST)g(duran)n(te)f(to)r(da)g(la)g(sim)n(ulaci\023)-42
b(on.)51 b(P)n(o)r(demos)32 b(v)n(er)f(que)i(se)f(comp)r(orta)g(tam)n
(bi)n(\023)-39 b(en)31 b(de)440 3889 y(una)37 b(forma)f(apro)n
(ximadamen)n(te)f(lineal,)k(aumen)n(tando)d(mien)n(tras)h(existen)f
(ingresos)g(al)440 3988 y(sistema)27 b(y)h(comenzando)e(su)i(descenso)e
(ap)r(enas)h(se)g(detienen)i(los)e(mismos.)440 4263 y
Fj(5)135 b(Pun)l(to)45 b(\(e\))440 4445 y Fi(A)30 b(partir)f(de)h(la)g
(realizaci\023)-42 b(on)27 b(de)j(10)f(sim)n(ulaci\023)-42
b(ones)29 b(de)h(50)f(hs)h(cada)e(una,)j(se)e(obtuvieron)440
4544 y(las)e(estimaci\023)-42 b(ones)27 b(presen)n(tadas)e(en)j(la)f
(tabla)h(4)f(y)g(la)h(mostrada)e(a)h(con)n(tin)n(uaci\023)-42
b(on.)440 4644 y(Estimaci\023)g(on)24 b(del)h(tiemp)r(o)h(medio)e(p)r
(or)h(clien)n(te)g(en)g(el)g(sistema:)35 b(7927)p Fg(:)p
Fi(73)p Fg(=pm)p Fi(1592)19 b(con)25 b(un)440 4744 y(niv)n(el)i(de)h
(signi\014caci\023)-42 b(on)26 b(del)i(5\045.)440 5018
y Fj(6)135 b(Pun)l(to)45 b(\(f)12 b(\))440 5200 y Fi(Se)25
b(v)-5 b(ari\023)-42 b(a)23 b(la)h(probabilidad)g Fg(p)g
Fi(de)h(que)f(una)g(unidad)h(pase)f(el)h(testeo)f(del)g(Sector)g(de)h
(T)-7 b(esteo)440 5300 y(en)n(tre)35 b(0)g(y)h(1)f(con)h(un)g(paso)e
(de)i(0)p Fg(:)p Fi(05.)60 b(P)n(ara)33 b(cada)i(uno)h(de)f(estos)g(20)
g(v)-5 b(alores)34 b(de)i Fg(p)g Fi(se)440 5399 y(realizan)28
b(10)h(sim)n(ulaciones.)42 b(En)29 b(cada)g(sim)n(ulaci\023)-42
b(on)28 b(se)i(estima)f(el)h(tiemp)r(o)g(promedio)e(en)1851
5662 y(4)p eop end
%%Page: 5 6
TeXDict begin 5 5 bop 440 2937 a @beginspecial 50 @llx
50 @lly 410 @urx 302 @ury 4252 @rwi @setspecial
%%BeginDocument: ./img/cola_UI.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: cola_UI.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Sat Dec 12 19:55:40 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (cola_UI.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Dec 12 19:55:40 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
770 448 M
63 0 V
6157 0 R
-63 0 V
stroke
686 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MRshow
0.500 UL
LTb
770 912 M
63 0 V
6157 0 R
-63 0 V
stroke
686 912 M
[ [(Helvetica) 140.0 0.0 true true 0 (20)]
] -46.7 MRshow
0.500 UL
LTb
770 1375 M
63 0 V
6157 0 R
-63 0 V
stroke
686 1375 M
[ [(Helvetica) 140.0 0.0 true true 0 (40)]
] -46.7 MRshow
0.500 UL
LTb
770 1839 M
63 0 V
6157 0 R
-63 0 V
stroke
686 1839 M
[ [(Helvetica) 140.0 0.0 true true 0 (60)]
] -46.7 MRshow
0.500 UL
LTb
770 2302 M
63 0 V
6157 0 R
-63 0 V
stroke
686 2302 M
[ [(Helvetica) 140.0 0.0 true true 0 (80)]
] -46.7 MRshow
0.500 UL
LTb
770 2766 M
63 0 V
6157 0 R
-63 0 V
stroke
686 2766 M
[ [(Helvetica) 140.0 0.0 true true 0 (100)]
] -46.7 MRshow
0.500 UL
LTb
770 3229 M
63 0 V
6157 0 R
-63 0 V
stroke
686 3229 M
[ [(Helvetica) 140.0 0.0 true true 0 (120)]
] -46.7 MRshow
0.500 UL
LTb
770 3693 M
63 0 V
6157 0 R
-63 0 V
stroke
686 3693 M
[ [(Helvetica) 140.0 0.0 true true 0 (140)]
] -46.7 MRshow
0.500 UL
LTb
770 4156 M
63 0 V
6157 0 R
-63 0 V
stroke
686 4156 M
[ [(Helvetica) 140.0 0.0 true true 0 (160)]
] -46.7 MRshow
0.500 UL
LTb
770 4620 M
63 0 V
6157 0 R
-63 0 V
stroke
686 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 (180)]
] -46.7 MRshow
0.500 UL
LTb
770 448 M
0 63 V
0 4109 R
0 -63 V
stroke
770 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MCshow
0.500 UL
LTb
2184 448 M
0 63 V
0 4109 R
0 -63 V
stroke
2184 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (5000)]
] -46.7 MCshow
0.500 UL
LTb
3597 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3597 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (10000)]
] -46.7 MCshow
0.500 UL
LTb
5011 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5011 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (15000)]
] -46.7 MCshow
0.500 UL
LTb
6425 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6425 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (20000)]
] -46.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
770 4620 N
770 448 L
6220 0 V
0 4172 V
-6220 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Longitud de la cola\(personas\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3880 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Instante de la simulacion\(minutos\))]
] -46.7 MCshow
LTb
3880 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Longitud de la cola de la Unidad de Inspeccion a lo largo de la simulacion)]
] -46.7 MCshow
1.000 UP
0.500 UL
LTb
0.500 UL
LT0
775 448 M
4 23 V
0 -23 V
1 0 V
0 23 V
2 0 V
1 -23 V
3 0 V
1 0 V
1 0 V
4 0 V
1 0 V
1 0 V
2 0 V
0 23 V
3 0 V
2 -23 V
3 23 V
2 -23 V
0 23 V
0 23 V
2 0 V
0 24 V
1 -24 V
1 24 V
4 0 V
0 -24 V
2 24 V
2 -24 V
4 -23 V
2 23 V
1 24 V
1 23 V
0 23 V
1 0 V
0 -23 V
1 0 V
1 23 V
2 -23 V
3 -23 V
0 23 V
1 23 V
1 23 V
2 -23 V
1 23 V
4 -23 V
4 0 V
0 23 V
1 -23 V
0 23 V
1 23 V
0 23 V
2 24 V
0 23 V
2 -23 V
1 23 V
3 -23 V
3 23 V
1 -23 V
1 0 V
1 23 V
0 23 V
1 23 V
0 -23 V
1 0 V
3 -23 V
4 23 V
0 -23 V
0 23 V
1 0 V
1 23 V
1 -23 V
0 23 V
3 23 V
0 23 V
1 24 V
1 23 V
0 -23 V
5 -24 V
4 -23 V
1 0 V
1 23 V
0 24 V
1 23 V
2 -23 V
4 0 V
1 -24 V
1 24 V
0 23 V
3 23 V
1 -23 V
0 23 V
1 0 V
3 23 V
1 0 V
0 23 V
1 -23 V
2 23 V
1 24 V
1 23 V
0 23 V
1 -23 V
1 0 V
0 23 V
2 -23 V
stroke 918 935 M
4 23 V
0 -23 V
1 0 V
2 23 V
2 -23 V
3 23 V
0 23 V
1 -23 V
4 -23 V
1 0 V
0 23 V
2 23 V
1 -23 V
2 23 V
1 -23 V
0 23 V
3 -23 V
1 0 V
2 23 V
0 23 V
1 23 V
1 -23 V
1 0 V
0 23 V
3 24 V
0 -24 V
1 0 V
1 24 V
0 23 V
2 -23 V
1 23 V
1 23 V
2 -23 V
1 23 V
1 23 V
1 23 V
1 -23 V
3 23 V
1 -23 V
1 0 V
1 23 V
3 -23 V
3 23 V
2 -23 V
2 23 V
1 24 V
1 -24 V
3 0 V
1 -23 V
0 23 V
3 24 V
0 23 V
0 -23 V
0 23 V
1 0 V
1 23 V
3 23 V
0 -23 V
1 0 V
0 23 V
1 23 V
2 23 V
0 24 V
0 23 V
1 23 V
0 -23 V
1 23 V
1 23 V
1 23 V
1 23 V
0 -23 V
1 23 V
0 24 V
1 23 V
1 23 V
1 -23 V
2 23 V
1 23 V
1 -23 V
1 0 V
1 23 V
1 23 V
1 24 V
0 23 V
0 -23 V
2 23 V
0 23 V
0 23 V
1 23 V
1 -23 V
1 23 V
3 -23 V
0 23 V
1 0 V
2 23 V
1 24 V
0 -24 V
3 24 V
1 -24 V
3 24 V
1 -24 V
1 24 V
4 -24 V
0 24 V
stroke 1042 1700 M
2 23 V
2 23 V
0 23 V
0 -23 V
1 0 V
3 23 V
0 -23 V
1 0 V
0 23 V
1 23 V
2 23 V
1 -23 V
0 23 V
1 24 V
2 0 V
0 23 V
0 23 V
2 -23 V
1 0 V
0 23 V
0 23 V
2 0 V
2 -23 V
1 23 V
2 23 V
0 -23 V
0 23 V
1 24 V
4 -24 V
2 24 V
2 23 V
1 -23 V
0 23 V
0 23 V
0 23 V
3 23 V
2 -23 V
3 23 V
1 -23 V
0 23 V
0 23 V
1 24 V
3 -24 V
5 -23 V
1 0 V
1 23 V
1 24 V
2 -24 V
0 24 V
1 23 V
2 23 V
0 -23 V
0 23 V
2 23 V
1 23 V
1 24 V
0 23 V
0 -23 V
1 23 V
2 -23 V
1 0 V
2 23 V
1 23 V
0 23 V
1 23 V
1 -23 V
0 23 V
5 -23 V
2 23 V
3 -23 V
1 23 V
1 0 V
0 23 V
2 -23 V
1 0 V
0 23 V
0 24 V
2 23 V
1 -23 V
1 0 V
2 23 V
1 -23 V
0 23 V
3 23 V
2 23 V
1 -23 V
1 23 V
1 23 V
0 23 V
1 24 V
0 -24 V
1 0 V
1 0 V
0 24 V
2 -24 V
1 0 V
1 24 V
3 -24 V
4 24 V
1 -24 V
1 0 V
2 24 V
1 -24 V
3 24 V
stroke 1169 2488 M
1 -24 V
2 24 V
1 23 V
2 -23 V
1 23 V
2 23 V
1 23 V
0 -23 V
3 23 V
2 -23 V
2 0 V
1 -23 V
3 23 V
0 23 V
0 23 V
2 24 V
0 -24 V
1 24 V
0 23 V
0 23 V
1 23 V
2 23 V
1 23 V
0 -23 V
1 0 V
3 -23 V
1 23 V
0 23 V
4 -23 V
1 0 V
2 23 V
1 24 V
1 -24 V
0 24 V
1 0 V
0 23 V
0 23 V
1 23 V
0 23 V
2 -23 V
1 0 V
0 23 V
3 -23 V
0 23 V
3 -23 V
1 0 V
0 23 V
3 -23 V
3 23 V
0 -23 V
1 23 V
2 -23 V
1 0 V
2 23 V
3 23 V
0 -23 V
2 23 V
1 24 V
0 -24 V
1 0 V
2 24 V
1 23 V
1 -23 V
0 23 V
0 23 V
2 23 V
1 23 V
1 -23 V
1 0 V
4 0 V
0 -23 V
1 23 V
2 -23 V
5 -23 V
5 23 V
0 23 V
0 -23 V
1 23 V
1 23 V
0 24 V
1 23 V
2 0 V
0 -23 V
3 -24 V
1 24 V
2 23 V
0 -23 V
1 23 V
1 23 V
1 23 V
1 23 V
1 23 V
1 -23 V
3 23 V
1 24 V
0 -24 V
1 0 V
3 0 V
0 -23 V
1 0 V
0 23 V
1 24 V
1 23 V
0 -23 V
stroke 1296 3137 M
1 0 V
3 0 V
1 0 V
1 -24 V
0 24 V
2 0 V
1 23 V
0 23 V
1 -23 V
0 23 V
3 -23 V
1 23 V
0 23 V
1 23 V
1 24 V
1 23 V
1 -23 V
1 0 V
2 23 V
2 23 V
1 -23 V
1 23 V
1 0 V
2 -23 V
2 23 V
0 23 V
1 23 V
0 23 V
1 24 V
0 -24 V
1 24 V
0 23 V
0 23 V
1 0 V
0 23 V
2 -23 V
1 0 V
3 23 V
1 -23 V
2 23 V
1 23 V
0 -23 V
1 0 V
0 23 V
1 0 V
2 -23 V
4 23 V
0 -23 V
3 23 V
2 -23 V
0 23 V
4 -23 V
2 0 V
2 0 V
0 23 V
0 -23 V
4 -23 V
2 0 V
1 -23 V
0 23 V
2 0 V
0 23 V
0 23 V
2 -23 V
6 -23 V
3 23 V
1 -23 V
1 0 V
3 -23 V
5 -23 V
0 23 V
4 -23 V
3 23 V
2 -23 V
0 23 V
0 23 V
2 23 V
1 -23 V
1 0 V
1 23 V
2 23 V
0 -23 V
2 23 V
1 23 V
0 24 V
2 23 V
0 -23 V
4 -24 V
0 24 V
1 0 V
2 -24 V
1 24 V
1 0 V
1 23 V
1 23 V
0 -23 V
1 0 V
0 23 V
0 23 V
1 23 V
1 0 V
2 -23 V
1 0 V
0 23 V
stroke 1429 3623 M
1 0 V
1 24 V
2 -24 V
1 0 V
2 24 V
0 -24 V
3 24 V
1 23 V
0 -23 V
1 23 V
0 23 V
1 23 V
2 -23 V
1 0 V
1 23 V
1 23 V
1 23 V
1 -23 V
0 23 V
1 24 V
2 0 V
0 23 V
0 23 V
1 -23 V
1 0 V
0 23 V
1 23 V
2 0 V
1 0 V
0 -23 V
1 23 V
0 23 V
0 23 V
1 24 V
1 23 V
0 -23 V
1 0 V
1 23 V
0 23 V
3 -23 V
1 23 V
1 23 V
1 -23 V
1 0 V
1 0 V
2 -23 V
3 23 V
1 23 V
0 -23 V
3 -23 V
1 0 V
3 -23 V
0 23 V
3 -23 V
1 0 V
4 -24 V
0 24 V
4 -24 V
3 24 V
0 23 V
1 23 V
1 -23 V
4 23 V
0 -23 V
1 0 V
0 23 V
0 23 V
4 -23 V
2 23 V
0 23 V
1 24 V
1 23 V
0 -23 V
1 0 V
3 23 V
0 -23 V
3 23 V
1 -23 V
4 -24 V
0 24 V
4 -24 V
1 0 V
1 24 V
2 23 V
0 23 V
0 23 V
1 23 V
1 -23 V
1 0 V
0 23 V
2 0 V
1 23 V
1 0 V
1 -23 V
0 23 V
1 24 V
2 23 V
0 -23 V
1 23 V
1 23 V
2 23 V
0 23 V
0 -23 V
1 0 V
stroke 1550 4249 M
2 23 V
1 -23 V
1 23 V
1 0 V
1 24 V
1 0 V
0 23 V
0 23 V
2 -23 V
1 23 V
2 23 V
0 23 V
1 -23 V
2 23 V
3 -23 V
3 -23 V
0 23 V
0 23 V
2 23 V
1 -23 V
0 23 V
4 0 V
1 -23 V
0 23 V
2 24 V
1 23 V
0 -23 V
1 0 V
5 -24 V
2 0 V
0 24 V
1 -24 V
1 0 V
3 -23 V
1 0 V
1 23 V
1 24 V
0 -24 V
2 24 V
0 23 V
3 -23 V
3 23 V
1 -23 V
1 0 V
2 -24 V
1 24 V
3 23 V
1 -23 V
0 23 V
2 0 V
1 23 V
1 23 V
1 -23 V
1 0 V
2 -23 V
3 -23 V
1 0 V
3 -24 V
1 0 V
4 0 V
0 -23 V
1 0 V
1 0 V
2 -23 V
4 -23 V
3 -23 V
3 0 V
2 -23 V
2 0 V
2 -24 V
4 -23 V
1 0 V
3 0 V
2 -23 V
3 -23 V
1 0 V
1 0 V
3 -23 V
3 -24 V
4 -23 V
1 0 V
4 -23 V
1 0 V
3 -23 V
4 -23 V
3 -23 V
4 -24 V
1 0 V
1 0 V
1 0 V
0 -23 V
1 0 V
2 0 V
1 -23 V
5 -23 V
5 -23 V
1 0 V
4 -24 V
5 -23 V
4 -23 V
4 -23 V
3 -23 V
1 0 V
3 -23 V
stroke 1742 3786 M
4 -24 V
2 0 V
1 -23 V
5 0 V
0 -23 V
2 0 V
1 0 V
0 -23 V
4 -23 V
2 0 V
2 -23 V
1 0 V
1 0 V
1 -24 V
4 -23 V
1 0 V
2 0 V
1 0 V
1 -23 V
3 -23 V
1 0 V
2 0 V
1 -23 V
2 0 V
1 0 V
1 -24 V
1 0 V
3 -23 V
5 -23 V
4 0 V
1 0 V
0 -23 V
5 -23 V
4 -23 V
4 -24 V
1 0 V
4 -23 V
3 -23 V
3 0 V
2 -23 V
5 -23 V
4 -23 V
2 0 V
2 -24 V
1 0 V
3 -23 V
5 -23 V
1 0 V
1 0 V
3 -23 V
1 0 V
4 -23 V
1 0 V
1 0 V
2 -24 V
3 -23 V
5 -23 V
4 -23 V
1 0 V
2 0 V
2 -23 V
1 0 V
3 -23 V
1 0 V
3 -24 V
5 -23 V
3 -23 V
5 -23 V
1 0 V
2 -23 V
5 -24 V
5 -23 V
4 -23 V
3 0 V
2 -23 V
6 -23 V
4 -23 V
5 -24 V
5 -23 V
5 -23 V
1 0 V
5 -23 V
4 -23 V
4 -23 V
5 -24 V
3 -23 V
1 0 V
3 -23 V
4 -23 V
5 -23 V
2 0 V
1 -24 V
1 0 V
3 -23 V
1 0 V
5 -23 V
2 0 V
1 -23 V
1 0 V
5 -23 V
3 0 V
1 -23 V
1 0 V
4 -24 V
stroke 2015 2325 M
5 -23 V
2 0 V
3 -23 V
4 -23 V
1 0 V
3 0 V
1 -23 V
1 0 V
4 -23 V
1 0 V
4 -24 V
3 -23 V
3 -23 V
2 0 V
1 -23 V
1 0 V
3 0 V
0 -23 V
1 0 V
3 -24 V
1 0 V
1 0 V
3 -23 V
1 0 V
3 -23 V
1 0 V
5 -23 V
4 -23 V
1 0 V
4 -23 V
1 0 V
3 0 V
1 -24 V
1 0 V
5 -23 V
3 -23 V
3 -23 V
4 -23 V
4 -24 V
3 -23 V
2 0 V
1 -23 V
5 -23 V
1 0 V
1 -23 V
2 0 V
2 -23 V
1 0 V
5 -24 V
5 -23 V
5 -23 V
1 0 V
1 0 V
3 -23 V
5 -23 V
4 -23 V
1 0 V
4 -24 V
5 -23 V
1 0 V
3 -23 V
4 -23 V
3 0 V
0 -23 V
1 0 V
2 0 V
2 -24 V
3 0 V
1 -23 V
3 -23 V
4 -23 V
4 -23 V
1 0 V
1 0 V
1 -23 V
5 -24 V
3 0 V
1 -23 V
3 -23 V
2 0 V
2 -23 V
4 -23 V
5 -23 V
2 0 V
3 -24 V
3 -23 V
2 0 V
2 -23 V
1 0 V
2 0 V
1 -23 V
4 0 V
1 -23 V
1 0 V
5 -24 V
5 -23 V
4 -23 V
2 0 V
2 -23 V
5 -23 V
1 0 V
3 -23 V
5 -24 V
2 0 V
stroke 2282 888 M
3 -23 V
5 -23 V
1 0 V
3 -23 V
4 -23 V
4 -24 V
1 0 V
4 -23 V
1 0 V
3 -23 V
5 -23 V
3 0 V
1 0 V
1 -23 V
3 0 V
0 -23 V
4 -24 V
5 -23 V
1 0 V
5 -23 V
4 -23 V
3 -23 V
1 0 V
2 -23 V
4 -24 V
5 0 V
0 -23 V
4 -23 V
1 0 V
2 0 V
1 0 V
3 0 V
14 0 V
6 0 V
17 0 V
2 0 V
1 0 V
13 0 V
15 0 V
3 0 V
4 0 V
11 0 V
1 0 V
1 0 V
4 0 V
2 0 V
1 0 V
7 0 V
3 0 V
37 0 V
39 0 V
15 0 V
1 0 V
12 0 V
1 0 V
2 0 V
6 0 V
5 0 V
1 0 V
3 0 V
8 0 V
40 0 V
2 0 V
46 0 V
12 0 V
4 0 V
5 0 V
2 0 V
10 0 V
4 0 V
5 0 V
39 0 V
4 0 V
6 0 V
10 0 V
5 0 V
2 0 V
6 0 V
50 0 V
14 0 V
9 0 V
1 0 V
4 0 V
3 0 V
15 0 V
9 0 V
7 0 V
1 0 V
30 0 V
5 0 V
4 0 V
2 0 V
26 0 V
7 0 V
37 0 V
19 0 V
15 0 V
11 0 V
17 0 V
14 0 V
16 0 V
10 0 V
8 0 V
37 0 V
stroke 3177 448 M
15 0 V
12 0 V
1 0 V
4 0 V
16 0 V
4 0 V
3 0 V
1 0 V
6 0 V
1 0 V
4 0 V
3 0 V
3 0 V
7 0 V
20 0 V
1 0 V
1 0 V
15 0 V
11 0 V
10 0 V
4 0 V
2 0 V
66 0 V
3 0 V
4 0 V
8 0 V
6 0 V
4 0 V
1 0 V
3 0 V
1 0 V
9 0 V
6 0 V
12 0 V
10 0 V
2 0 V
19 0 V
1 0 V
4 0 V
3 0 V
18 0 V
2 0 V
2 0 V
1 0 V
12 0 V
1 0 V
44 0 V
16 0 V
31 0 V
9 0 V
4 0 V
24 0 V
8 0 V
13 0 V
8 0 V
16 0 V
1 0 V
5 0 V
1 0 V
38 0 V
17 0 V
18 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
22 0 V
2 0 V
27 0 V
33 0 V
35 0 V
3 0 V
1 0 V
16 0 V
1 0 V
4 0 V
9 0 V
10 0 V
1 0 V
16 0 V
7 0 V
23 0 V
9 0 V
15 0 V
34 0 V
1 0 V
6 0 V
14 0 V
2 0 V
5 0 V
6 0 V
2 0 V
15 0 V
13 0 V
26 0 V
10 0 V
8 0 V
2 0 V
6 0 V
8 0 V
5 0 V
14 0 V
8 0 V
stroke 4198 448 M
14 0 V
1 0 V
1 0 V
7 0 V
19 0 V
8 0 V
2 0 V
1 0 V
33 0 V
14 0 V
10 0 V
2 0 V
1 0 V
20 0 V
11 0 V
1 0 V
10 0 V
17 0 V
8 0 V
39 0 V
2 0 V
5 0 V
1 0 V
30 0 V
2 0 V
22 0 V
1 0 V
5 0 V
3 0 V
27 0 V
1 0 V
17 0 V
2 0 V
6 0 V
6 0 V
1 0 V
39 0 V
1 0 V
2 0 V
12 0 V
4 0 V
29 0 V
11 0 V
3 0 V
38 0 V
11 0 V
9 0 V
1 0 V
35 0 V
15 0 V
21 0 V
3 0 V
11 0 V
3 0 V
1 0 V
16 0 V
15 0 V
10 0 V
1 0 V
7 0 V
20 0 V
3 0 V
9 0 V
2 0 V
17 0 V
10 0 V
1 0 V
1 0 V
7 0 V
3 0 V
1 0 V
16 0 V
24 0 V
39 0 V
10 0 V
1 0 V
9 0 V
50 0 V
1 0 V
1 0 V
3 0 V
22 0 V
3 0 V
27 0 V
1 0 V
23 0 V
2 0 V
6 0 V
12 0 V
7 0 V
18 0 V
8 0 V
15 0 V
6 0 V
13 0 V
22 0 V
2 0 V
1 0 V
1 0 V
1 0 V
1 0 V
12 0 V
7 0 V
5 0 V
stroke 5289 448 M
2 0 V
2 0 V
25 0 V
23 0 V
38 0 V
35 0 V
22 0 V
29 0 V
5 0 V
13 0 V
3 0 V
41 0 V
2 0 V
1 0 V
15 0 V
5 0 V
3 0 V
5 0 V
19 0 V
22 0 V
19 0 V
1 0 V
34 0 V
3 0 V
13 0 V
12 0 V
4 0 V
1 0 V
15 0 V
10 0 V
1 0 V
17 0 V
5 0 V
1 0 V
15 0 V
14 0 V
5 0 V
3 0 V
6 0 V
1 0 V
8 0 V
2 0 V
17 0 V
1 0 V
8 0 V
23 0 V
8 0 V
3 0 V
6 0 V
25 0 V
3 0 V
6 0 V
1 0 V
7 0 V
6 0 V
5 0 V
11 0 V
17 0 V
9 0 V
2 0 V
5 0 V
1 0 V
29 0 V
8 0 V
25 0 V
5 0 V
3 0 V
2 0 V
7 0 V
7 0 V
29 0 V
4 0 V
4 0 V
3 0 V
9 0 V
5 0 V
1 0 V
19 0 V
8 0 V
2 0 V
25 0 V
2 0 V
1 0 V
2 0 V
1 0 V
9 0 V
4 0 V
9 0 V
1 0 V
14 0 V
10 0 V
3 0 V
4 0 V
4 0 V
1 0 V
10 0 V
2 0 V
10 0 V
6 0 V
14 0 V
15 0 V
18 0 V
38 0 V
4 0 V
stroke 6330 448 M
13 0 V
14 0 V
1 0 V
4 0 V
15 0 V
4 0 V
4 0 V
12 0 V
10 0 V
16 0 V
3 0 V
7 0 V
3 0 V
3 0 V
4 0 V
23 0 V
4 0 V
17 0 V
25 0 V
1 0 V
5 0 V
1 0 V
16 0 V
2 0 V
2 0 V
5 0 V
10 0 V
1 0 V
9 0 V
16 0 V
1 0 V
22 0 V
7 0 V
2 0 V
33 0 V
34 0 V
1 0 V
7 0 V
29 0 V
stroke
LTb
770 4620 N
770 448 L
6220 0 V
0 4172 V
-6220 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 183 x Fi(Figure)40 b(4:)64 b(Longitud)40
b(de)h(la)g(cola)f(de)h(la)f(Unidad)i(de)f(Insp)r(ecci\023)-42
b(on)40 b(a)h(lo)g(largo)e(de)i(la)440 3219 y(sim)n(ulaci\023)-42
b(on.)440 3551 y(cada)26 b(cola)h(de)g(una)g(unidad,)h(la)f(longitud)g
(media)g(de)g(cada)g(cola,)f(y)h(la)g(o)r(cupaci\023)-42
b(on)26 b(media)440 3651 y(de)j(cada)f(ER)h(en)f(funci\023)-42
b(on)30 b(de)f Fg(p)p Fi(.)40 b(Dic)n(has)29 b(estimaciones)e(se)i(m)n
(uestran)f(en)h(las)f(\014guras)g(7,)440 3751 y(8,)g(9)g(para)f(los)h
(promedios)f(en)h(cada)f(cola)g(de)i(una)f(unidad;)h(las)e(\014guras)g
(10,)h(11,)f(12)h(para)440 3850 y(la)d(longitud)h(media)f(de)h(cada)e
(cola;)i(y)f(las)g(\014guras)f(13,)h(14,)h(15)e(para)h(la)g(o)r
(cupaci\023)-42 b(on)24 b(media)440 3950 y(de)k(cada)e(ER.)565
4049 y(Que)32 b(la)h(ma)n(y)n(or)e(o)r(cupaci\023)-42
b(on)32 b(del)h(servidor)f(o)r(curra)f(en)i(la)g(Estaci\023)-42
b(on)32 b(de)h(Reparaci\023)-42 b(on)440 4149 y(1)29
b(es)g(un)g(detalle)g(de)h(implemen)n(taci\023)-42 b(on.)41
b(Esto)28 b(se)h(deb)r(e)h(a)f(que)g(se)g(asigna)e(el)j(clien)n(te)f(a)
g(la)440 4249 y(primer)d(ER)g(libre.)36 b(Se)27 b(observ)-5
b(a)25 b(como)h(el)h(tiemp)r(o)g(de)f(un)h(clien)n(te)g(en)f(las)g
(colas)g(ER)g(y)g(ST)440 4348 y(decrece)d(al)g(aumen)n(tar)g(la)g
(probabilidad)g(de)g(pasar)f(el)i(test)g(de)g(la)f(ST.)2673
4327 y(\023)2666 4348 y(Esto)g(es)g(esp)r(erable,)440
4448 y(y)n(a)i(que)g(a)h(ma)n(y)n(or)e(probabilidad)g(de)i(pasar)e(p)r
(or)h(ST,)h(menos)g(clien)n(tes)f(regresan)f(a)h(la)g(cola)440
4548 y(ER.)e(Un)g(an\023)-42 b(alisis)22 b(similar)g(se)h(puede)g
(realizar)f(observ)-5 b(ando)21 b(la)i(longitud)f(de)i(am)n(bas)d
(colas.)440 4647 y(Sin)28 b(em)n(bargo,)e(v)n(emos)g(como)h(v)-5
b(ariar)26 b Fg(p)h Fi(no)h(afecta)440 4922 y Fj(References)482
5104 y Fi([1])41 b(T)-7 b(abla)27 b Fg(\037)896 5073
y Ff(2)933 5104 y Fi(.)611 5303 y Fh(http://www.wiph)o(ala)o(.n)o(et/)o
(re)o(se)o(arc)o(h/)o(man)o(ua)o(l/)611 5402 y(statistic/chi_c)o(uad)o
(ra)o(do.)o(ht)o(ml)1851 5662 y Fi(5)p eop end
%%Page: 6 7
TeXDict begin 6 6 bop 440 3123 a @beginspecial 50 @llx
50 @lly 410 @urx 302 @ury 4252 @rwi @setspecial
%%BeginDocument: ./img/cola_ER.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: cola_ER.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Sat Dec 12 19:55:40 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (cola_ER.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Dec 12 19:55:40 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
854 448 M
63 0 V
6073 0 R
-63 0 V
stroke
770 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1)]
] -46.7 MRshow
0.500 UL
LTb
854 1491 M
63 0 V
6073 0 R
-63 0 V
stroke
770 1491 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.5)]
] -46.7 MRshow
0.500 UL
LTb
854 2534 M
63 0 V
6073 0 R
-63 0 V
stroke
770 2534 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MRshow
0.500 UL
LTb
854 3577 M
63 0 V
6073 0 R
-63 0 V
stroke
770 3577 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.5)]
] -46.7 MRshow
0.500 UL
LTb
854 4620 M
63 0 V
6073 0 R
-63 0 V
stroke
770 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 (1)]
] -46.7 MRshow
0.500 UL
LTb
854 448 M
0 63 V
0 4109 R
0 -63 V
stroke
854 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MCshow
0.500 UL
LTb
2249 448 M
0 63 V
0 4109 R
0 -63 V
stroke
2249 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (5000)]
] -46.7 MCshow
0.500 UL
LTb
3643 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3643 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (10000)]
] -46.7 MCshow
0.500 UL
LTb
5038 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5038 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (15000)]
] -46.7 MCshow
0.500 UL
LTb
6432 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6432 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (20000)]
] -46.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
854 4620 N
854 448 L
6136 0 V
0 4172 V
-6136 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Longitud de la cola\(personas\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3922 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Instante de la simulacion\(minutos\))]
] -46.7 MCshow
LTb
3922 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Longitud de la cola de las Estaciones de Reparacion a lo largo de la simulacion)]
] -46.7 MCshow
1.000 UP
0.500 UL
LTb
0.500 UL
LT0
859 2534 M
4 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
1 0 V
5 0 V
2 0 V
1 0 V
1 0 V
3 0 V
2 0 V
3 0 V
1 0 V
1 0 V
1 0 V
2 0 V
1 0 V
3 0 V
1 0 V
1 0 V
3 0 V
3 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
2 0 V
3 0 V
1 0 V
1 0 V
2 0 V
1 0 V
4 0 V
4 0 V
1 0 V
1 0 V
2 0 V
2 0 V
1 0 V
3 0 V
3 0 V
1 0 V
1 0 V
1 0 V
1 0 V
3 0 V
1 0 V
3 0 V
1 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
4 0 V
1 0 V
4 0 V
2 0 V
1 0 V
1 0 V
4 0 V
2 0 V
1 0 V
3 0 V
2 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
1 0 V
1 0 V
1 0 V
2 0 V
4 0 V
3 0 V
2 0 V
3 0 V
1 0 V
4 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
3 0 V
3 0 V
2 0 V
4 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
stroke 1044 2534 M
2 0 V
1 0 V
3 0 V
1 0 V
1 0 V
1 0 V
3 0 V
3 0 V
2 0 V
2 0 V
1 0 V
1 0 V
3 0 V
1 0 V
3 0 V
1 0 V
1 0 V
3 0 V
1 0 V
1 0 V
2 0 V
1 0 V
1 0 V
1 0 V
2 0 V
1 0 V
1 0 V
1 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
1 0 V
1 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
1 0 V
3 0 V
4 0 V
1 0 V
4 0 V
1 0 V
2 0 V
1 0 V
1 0 V
3 0 V
1 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
4 0 V
2 0 V
2 0 V
1 0 V
3 0 V
2 0 V
3 0 V
1 0 V
1 0 V
3 0 V
5 0 V
1 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
2 0 V
1 0 V
1 0 V
1 0 V
1 0 V
4 0 V
3 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
stroke 1217 2534 M
1 0 V
3 0 V
2 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
2 0 V
1 0 V
1 0 V
3 0 V
3 0 V
1 0 V
1 0 V
1 0 V
1 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
3 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
3 0 V
1 0 V
1 0 V
3 0 V
1 0 V
2 0 V
1 0 V
1 0 V
1 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
3 0 V
1 0 V
3 0 V
3 0 V
1 0 V
2 0 V
1 0 V
2 0 V
3 0 V
1 0 V
2 0 V
3 0 V
2 0 V
1 0 V
2 0 V
1 0 V
4 0 V
1 0 V
2 0 V
1 0 V
4 0 V
5 0 V
1 0 V
1 0 V
1 0 V
2 0 V
3 0 V
1 0 V
2 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
3 0 V
1 0 V
1 0 V
3 0 V
1 0 V
1 0 V
1 0 V
1 0 V
2 0 V
1 0 V
1 0 V
1 0 V
2 0 V
1 0 V
1 0 V
3 0 V
stroke 1386 2534 M
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
2 0 V
3 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
1 0 V
1 0 V
1 0 V
2 0 V
4 0 V
2 0 V
1 0 V
1 0 V
1 0 V
2 0 V
4 0 V
4 0 V
1 0 V
4 0 V
2 0 V
2 0 V
4 0 V
2 0 V
1 0 V
2 0 V
2 0 V
5 0 V
1 0 V
3 0 V
1 0 V
4 0 V
5 0 V
4 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
4 0 V
3 0 V
2 0 V
1 0 V
1 0 V
1 0 V
2 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
3 0 V
1 0 V
1 0 V
1 0 V
2 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
2 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
4 0 V
1 0 V
2 0 V
1 0 V
2 0 V
4 0 V
1 0 V
3 0 V
3 0 V
1 0 V
3 0 V
5 0 V
3 0 V
3 0 V
1 0 V
stroke 1574 2534 M
1 0 V
4 0 V
1 0 V
4 0 V
2 0 V
1 0 V
1 0 V
1 0 V
2 0 V
1 0 V
3 0 V
1 0 V
4 0 V
4 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
1 0 V
3 0 V
1 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
3 0 V
3 0 V
2 0 V
1 0 V
4 0 V
1 0 V
2 0 V
1 0 V
1 0 V
5 0 V
2 0 V
1 0 V
1 0 V
3 0 V
2 0 V
1 0 V
2 0 V
3 0 V
3 0 V
1 0 V
3 0 V
3 0 V
2 0 V
2 0 V
1 0 V
2 0 V
3 0 V
3 0 V
3 0 V
1 0 V
4 0 V
1 0 V
1 0 V
1 0 V
1 0 V
4 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
4 0 V
1 0 V
3 0 V
2 0 V
3 0 V
1 0 V
3 0 V
1 0 V
2 0 V
1 0 V
4 0 V
5 0 V
3 0 V
1 0 V
3 0 V
3 0 V
5 0 V
2 0 V
1 0 V
3 0 V
5 0 V
6 0 V
stroke 1789 2534 M
4 0 V
5 0 V
4 0 V
4 0 V
3 0 V
1 0 V
3 0 V
3 0 V
3 0 V
1 0 V
4 0 V
1 0 V
2 0 V
5 0 V
2 0 V
2 0 V
1 0 V
2 0 V
4 0 V
3 0 V
1 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
3 0 V
1 0 V
2 0 V
2 0 V
1 0 V
4 0 V
4 0 V
1 0 V
5 0 V
4 0 V
4 0 V
1 0 V
4 0 V
3 0 V
3 0 V
2 0 V
5 0 V
3 0 V
1 0 V
1 0 V
3 0 V
4 0 V
4 0 V
1 0 V
1 0 V
4 0 V
5 0 V
1 0 V
2 0 V
3 0 V
5 0 V
5 0 V
2 0 V
2 0 V
1 0 V
3 0 V
1 0 V
2 0 V
1 0 V
4 0 V
1 0 V
3 0 V
4 0 V
2 0 V
2 0 V
5 0 V
4 0 V
1 0 V
4 0 V
3 0 V
2 0 V
5 0 V
4 0 V
1 0 V
4 0 V
1 0 V
4 0 V
5 0 V
1 0 V
5 0 V
3 0 V
1 0 V
3 0 V
6 0 V
3 0 V
1 0 V
3 0 V
4 0 V
5 0 V
1 0 V
1 0 V
1 0 V
4 0 V
5 0 V
2 0 V
2 0 V
5 0 V
3 0 V
stroke 2076 2534 M
2 0 V
4 0 V
1 0 V
4 0 V
2 0 V
3 0 V
4 0 V
1 0 V
3 0 V
1 0 V
1 0 V
4 0 V
5 0 V
3 0 V
2 0 V
1 0 V
2 0 V
1 0 V
4 0 V
4 0 V
2 0 V
3 0 V
4 0 V
5 0 V
5 0 V
5 0 V
3 0 V
2 0 V
5 0 V
3 0 V
3 0 V
4 0 V
4 0 V
3 0 V
2 0 V
1 0 V
4 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
2 0 V
5 0 V
1 0 V
4 0 V
1 0 V
4 0 V
1 0 V
1 0 V
3 0 V
5 0 V
1 0 V
4 0 V
4 0 V
5 0 V
1 0 V
3 0 V
4 0 V
3 0 V
1 0 V
2 0 V
1 0 V
1 0 V
3 0 V
1 0 V
3 0 V
4 0 V
4 0 V
1 0 V
1 0 V
1 0 V
4 0 V
3 0 V
1 0 V
1 0 V
3 0 V
1 0 V
1 0 V
1 0 V
4 0 V
5 0 V
1 0 V
2 0 V
2 0 V
4 0 V
1 0 V
3 0 V
2 0 V
1 0 V
4 0 V
1 0 V
1 0 V
5 0 V
4 0 V
5 0 V
2 0 V
2 0 V
5 0 V
4 0 V
5 0 V
2 0 V
2 0 V
6 0 V
stroke 2354 2534 M
3 0 V
4 0 V
5 0 V
5 0 V
3 0 V
5 0 V
3 0 V
1 0 V
1 0 V
3 0 V
4 0 V
5 0 V
5 0 V
1 0 V
4 0 V
3 0 V
3 0 V
4 0 V
4 0 V
1 0 V
4 0 V
3 0 V
4 0 V
14 0 V
5 0 V
17 0 V
2 0 V
1 0 V
13 0 V
15 0 V
2 0 V
1 0 V
3 0 V
1 0 V
11 0 V
1 0 V
4 0 V
3 0 V
7 0 V
3 0 V
37 0 V
38 0 V
15 0 V
13 0 V
2 0 V
6 0 V
6 0 V
3 0 V
8 0 V
1 0 V
39 0 V
2 0 V
45 0 V
12 0 V
4 0 V
4 0 V
2 0 V
11 0 V
4 0 V
4 0 V
1 0 V
38 0 V
4 0 V
6 0 V
10 0 V
5 0 V
1 0 V
7 0 V
49 0 V
14 0 V
9 0 V
4 0 V
4 0 V
14 0 V
9 0 V
7 0 V
1 0 V
29 0 V
1 0 V
4 0 V
1 0 V
3 0 V
2 0 V
26 0 V
7 0 V
37 0 V
18 0 V
15 0 V
11 0 V
17 0 V
13 0 V
16 0 V
10 0 V
8 0 V
37 0 V
14 0 V
12 0 V
1 0 V
4 0 V
16 0 V
3 0 V
3 0 V
2 0 V
6 0 V
stroke 3290 2534 M
1 0 V
4 0 V
3 0 V
3 0 V
6 0 V
20 0 V
1 0 V
1 0 V
15 0 V
10 0 V
1 0 V
10 0 V
4 0 V
2 0 V
65 0 V
3 0 V
3 0 V
9 0 V
5 0 V
5 0 V
3 0 V
1 0 V
9 0 V
1 0 V
5 0 V
12 0 V
10 0 V
2 0 V
18 0 V
1 0 V
5 0 V
2 0 V
18 0 V
2 0 V
3 0 V
12 0 V
1 0 V
43 0 V
16 0 V
31 0 V
9 0 V
3 0 V
24 0 V
8 0 V
12 0 V
9 0 V
15 0 V
1 0 V
6 0 V
38 0 V
17 0 V
17 0 V
1 0 V
2 0 V
1 0 V
3 0 V
22 0 V
2 0 V
27 0 V
32 0 V
34 0 V
3 0 V
1 0 V
1 0 V
16 0 V
5 0 V
8 0 V
11 0 V
16 0 V
7 0 V
22 0 V
9 0 V
15 0 V
34 0 V
7 0 V
13 0 V
3 0 V
4 0 V
6 0 V
2 0 V
1 0 V
14 0 V
13 0 V
26 0 V
10 0 V
7 0 V
2 0 V
6 0 V
8 0 V
5 0 V
14 0 V
7 0 V
15 0 V
1 0 V
8 0 V
18 0 V
8 0 V
2 0 V
1 0 V
32 0 V
14 0 V
1 0 V
9 0 V
1 0 V
stroke 4345 2534 M
1 0 V
1 0 V
20 0 V
11 0 V
1 0 V
10 0 V
16 0 V
8 0 V
39 0 V
2 0 V
5 0 V
30 0 V
2 0 V
1 0 V
21 0 V
5 0 V
1 0 V
3 0 V
27 0 V
17 0 V
2 0 V
6 0 V
6 0 V
1 0 V
38 0 V
1 0 V
2 0 V
12 0 V
4 0 V
1 0 V
28 0 V
11 0 V
3 0 V
38 0 V
10 0 V
9 0 V
35 0 V
1 0 V
15 0 V
20 0 V
3 0 V
10 0 V
4 0 V
17 0 V
15 0 V
9 0 V
1 0 V
7 0 V
19 0 V
1 0 V
3 0 V
9 0 V
2 0 V
16 0 V
1 0 V
9 0 V
1 0 V
1 0 V
7 0 V
3 0 V
1 0 V
15 0 V
24 0 V
39 0 V
10 0 V
1 0 V
9 0 V
49 0 V
1 0 V
4 0 V
21 0 V
4 0 V
27 0 V
23 0 V
2 0 V
5 0 V
1 0 V
12 0 V
7 0 V
17 0 V
8 0 V
15 0 V
6 0 V
12 0 V
22 0 V
3 0 V
1 0 V
1 0 V
1 0 V
12 0 V
1 0 V
6 0 V
5 0 V
2 0 V
1 0 V
1 0 V
25 0 V
22 0 V
38 0 V
34 0 V
22 0 V
28 0 V
1 0 V
4 0 V
stroke 5490 2534 M
1 0 V
12 0 V
3 0 V
41 0 V
2 0 V
16 0 V
5 0 V
2 0 V
6 0 V
18 0 V
22 0 V
18 0 V
1 0 V
34 0 V
3 0 V
13 0 V
12 0 V
4 0 V
15 0 V
10 0 V
1 0 V
17 0 V
5 0 V
1 0 V
15 0 V
13 0 V
5 0 V
3 0 V
6 0 V
1 0 V
1 0 V
7 0 V
2 0 V
1 0 V
16 0 V
1 0 V
8 0 V
22 0 V
1 0 V
8 0 V
2 0 V
6 0 V
25 0 V
2 0 V
1 0 V
6 0 V
1 0 V
7 0 V
6 0 V
5 0 V
10 0 V
17 0 V
9 0 V
2 0 V
5 0 V
1 0 V
28 0 V
9 0 V
24 0 V
1 0 V
4 0 V
3 0 V
2 0 V
7 0 V
7 0 V
29 0 V
3 0 V
4 0 V
3 0 V
9 0 V
6 0 V
19 0 V
7 0 V
1 0 V
2 0 V
25 0 V
2 0 V
2 0 V
1 0 V
9 0 V
1 0 V
3 0 V
9 0 V
1 0 V
14 0 V
10 0 V
2 0 V
4 0 V
4 0 V
1 0 V
10 0 V
2 0 V
1 0 V
9 0 V
6 0 V
14 0 V
14 0 V
18 0 V
38 0 V
3 0 V
14 0 V
14 0 V
4 0 V
15 0 V
stroke 6385 2534 M
5 0 V
4 0 V
11 0 V
10 0 V
16 0 V
2 0 V
7 0 V
4 0 V
2 0 V
4 0 V
23 0 V
4 0 V
17 0 V
25 0 V
6 0 V
16 0 V
2 0 V
2 0 V
5 0 V
10 0 V
1 0 V
9 0 V
16 0 V
22 0 V
7 0 V
2 0 V
32 0 V
1 0 V
34 0 V
7 0 V
28 0 V
stroke
LTb
854 4620 N
854 448 L
6136 0 V
0 4172 V
-6136 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 182 x Fi(Figure)29 b(5:)41 b(Longitud)30
b(de)g(la)g(cola)f(de)h(las)f(Estaciones)f(de)i(Reparaci\023)-42
b(on)29 b(a)g(lo)h(largo)e(de)i(la)440 3405 y(sim)n(ulaci\023)-42
b(on.)p 478 3930 2790 4 v 476 4029 4 100 v 527 3999 a(N)r(\023)e(umero)
28 b(de)f(sim)n(ulaci\023)-42 b(on)p 1383 4029 V 99 w(Tiemp)r(o)28
b(medio)f(p)r(or)g(clien)n(te)h(en)f(el)h(sistema\(min)n(utos\))p
3265 4029 V 478 4033 2790 4 v 476 4132 4 100 v 911 4102
a(1)p 1383 4132 V 1290 w(8020)p 3265 4132 V 478 4136
2790 4 v 476 4235 4 100 v 911 4205 a(2)p 1383 4235 V
1237 w(8192.51)p 3265 4235 V 478 4238 2790 4 v 476 4338
4 100 v 911 4308 a(3)p 1383 4338 V 1237 w(8507.83)p 3265
4338 V 478 4341 2790 4 v 476 4441 4 100 v 911 4411 a(4)p
1383 4441 V 1237 w(7110.46)p 3265 4441 V 478 4444 2790
4 v 476 4544 4 100 v 911 4514 a(5)p 1383 4544 V 1237
w(7853.66)p 3265 4544 V 478 4547 2790 4 v 476 4647 4
100 v 911 4617 a(6)p 1383 4647 V 1237 w(8324.77)p 3265
4647 V 478 4650 2790 4 v 476 4750 4 100 v 911 4720 a(7)p
1383 4750 V 1237 w(7052.01)p 3265 4750 V 478 4753 2790
4 v 476 4853 4 100 v 911 4823 a(8)p 1383 4853 V 1237
w(7569.09)p 3265 4853 V 478 4856 2790 4 v 476 4956 4
100 v 911 4926 a(9)p 1383 4956 V 1237 w(8831.43)p 3265
4956 V 478 4959 2790 4 v 476 5059 4 100 v 890 5029 a(10)p
1383 5059 V 1216 w(7815.52)p 3265 5059 V 478 5062 2790
4 v 500 5211 a(T)-7 b(able)27 b(4:)36 b(Tiemp)r(o)28
b(medio)g(del)f(clien)n(te)h(en)g(el)f(sistema)g(para)g(distin)n(tas)g
(sim)n(ulaciones)1851 5662 y(6)p eop end
%%Page: 7 8
TeXDict begin 7 7 bop 440 4034 a @beginspecial 50 @llx
50 @lly 410 @urx 302 @ury 4252 @rwi @setspecial
%%BeginDocument: ./img/cola_ST.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: cola_ST.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Sat Dec 12 19:55:40 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (cola_ST.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Dec 12 19:55:40 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
770 448 M
63 0 V
6157 0 R
-63 0 V
stroke
686 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MRshow
0.500 UL
LTb
770 1317 M
63 0 V
6157 0 R
-63 0 V
stroke
686 1317 M
[ [(Helvetica) 140.0 0.0 true true 0 (50)]
] -46.7 MRshow
0.500 UL
LTb
770 2186 M
63 0 V
6157 0 R
-63 0 V
stroke
686 2186 M
[ [(Helvetica) 140.0 0.0 true true 0 (100)]
] -46.7 MRshow
0.500 UL
LTb
770 3055 M
63 0 V
6157 0 R
-63 0 V
stroke
686 3055 M
[ [(Helvetica) 140.0 0.0 true true 0 (150)]
] -46.7 MRshow
0.500 UL
LTb
770 3925 M
63 0 V
6157 0 R
-63 0 V
stroke
686 3925 M
[ [(Helvetica) 140.0 0.0 true true 0 (200)]
] -46.7 MRshow
0.500 UL
LTb
770 448 M
0 63 V
0 4109 R
0 -63 V
stroke
770 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MCshow
0.500 UL
LTb
2184 448 M
0 63 V
0 4109 R
0 -63 V
stroke
2184 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (5000)]
] -46.7 MCshow
0.500 UL
LTb
3597 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3597 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (10000)]
] -46.7 MCshow
0.500 UL
LTb
5011 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5011 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (15000)]
] -46.7 MCshow
0.500 UL
LTb
6425 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6425 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (20000)]
] -46.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
770 4620 N
770 448 L
6220 0 V
0 4172 V
-6220 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Longitud de la cola\(personas\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3880 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Instante de la simulacion\(minutos\))]
] -46.7 MCshow
LTb
3880 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Longitud de la cola del Sector de Testeo a lo largo de la simulacion)]
] -46.7 MCshow
1.000 UP
0.500 UL
LTb
0.500 UL
LT0
775 448 M
4 0 V
1 0 V
2 0 V
1 0 V
3 0 V
0 17 V
0 -17 V
1 0 V
1 0 V
4 0 V
1 17 V
1 -17 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
0 17 V
2 -17 V
1 0 V
1 0 V
4 0 V
2 0 V
2 0 V
4 0 V
0 17 V
2 0 V
1 0 V
1 0 V
1 -17 V
1 17 V
1 0 V
2 0 V
0 18 V
3 0 V
0 17 V
1 0 V
0 -17 V
1 0 V
2 0 V
0 17 V
1 0 V
4 0 V
0 18 V
4 -18 V
0 18 V
1 0 V
0 17 V
1 0 V
2 0 V
0 -17 V
2 0 V
0 17 V
1 0 V
3 0 V
0 17 V
3 0 V
1 0 V
0 18 V
1 -18 V
1 0 V
1 0 V
1 18 V
3 0 V
0 17 V
4 0 V
1 17 V
1 0 V
1 0 V
0 18 V
3 0 V
1 0 V
1 0 V
0 17 V
5 0 V
0 18 V
4 0 V
1 17 V
1 0 V
1 0 V
2 0 V
4 -17 V
1 0 V
1 0 V
0 17 V
3 0 V
1 0 V
1 -17 V
3 0 V
1 -18 V
1 0 V
0 18 V
2 0 V
0 -18 V
1 0 V
1 0 V
1 0 V
1 18 V
2 0 V
0 17 V
4 0 V
1 17 V
2 0 V
2 0 V
stroke 927 691 M
3 0 V
1 0 V
0 18 V
4 0 V
1 17 V
2 0 V
1 0 V
0 18 V
2 0 V
1 0 V
0 17 V
3 0 V
1 17 V
2 0 V
1 0 V
1 0 V
1 18 V
3 0 V
1 17 V
1 0 V
2 0 V
0 17 V
1 0 V
1 0 V
2 0 V
0 18 V
1 0 V
1 0 V
1 0 V
1 0 V
0 17 V
3 0 V
1 0 V
0 18 V
1 -18 V
0 18 V
1 0 V
3 0 V
0 17 V
3 0 V
2 0 V
0 17 V
2 0 V
1 0 V
0 -17 V
1 0 V
3 -17 V
0 -18 V
0 18 V
1 0 V
0 17 V
3 0 V
1 17 V
1 0 V
3 0 V
1 18 V
1 0 V
2 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
0 17 V
2 0 V
1 0 V
1 0 V
0 17 V
0 -17 V
1 17 V
1 0 V
1 0 V
1 0 V
0 18 V
2 0 V
1 0 V
1 0 V
1 0 V
3 0 V
1 -18 V
0 18 V
2 0 V
1 0 V
3 0 V
1 0 V
0 17 V
3 0 V
1 0 V
0 18 V
1 0 V
4 0 V
0 17 V
2 0 V
2 0 V
0 -17 V
1 17 V
3 0 V
1 17 V
1 0 V
2 0 V
stroke 1054 1056 M
1 0 V
0 18 V
1 0 V
2 -18 V
2 0 V
1 18 V
2 -18 V
2 0 V
1 0 V
2 0 V
0 18 V
1 0 V
4 0 V
0 17 V
2 0 V
2 0 V
1 0 V
0 18 V
3 0 V
2 0 V
0 17 V
3 0 V
1 0 V
0 17 V
1 0 V
3 0 V
0 18 V
5 0 V
1 17 V
1 0 V
1 0 V
2 0 V
0 17 V
1 0 V
2 0 V
0 18 V
2 0 V
1 0 V
1 0 V
0 17 V
1 0 V
2 0 V
0 18 V
1 -18 V
0 18 V
2 0 V
1 0 V
1 0 V
1 0 V
0 17 V
5 0 V
0 17 V
2 0 V
3 0 V
0 18 V
1 0 V
1 -18 V
0 18 V
2 0 V
1 17 V
2 0 V
0 -17 V
1 0 V
1 17 V
2 0 V
1 0 V
0 18 V
3 0 V
2 0 V
1 0 V
0 17 V
1 0 V
1 0 V
1 0 V
1 17 V
1 -17 V
2 0 V
0 17 V
1 -17 V
0 17 V
0 -17 V
1 0 V
3 0 V
0 17 V
4 0 V
0 -17 V
0 -17 V
1 0 V
0 17 V
1 -17 V
0 17 V
2 0 V
1 0 V
0 17 V
3 0 V
1 0 V
0 18 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
3 0 V
stroke 1182 1387 M
2 0 V
0 17 V
2 -17 V
1 0 V
0 17 V
3 0 V
2 0 V
0 17 V
1 0 V
1 0 V
2 0 V
1 0 V
1 18 V
3 0 V
0 17 V
1 0 V
4 0 V
1 18 V
2 0 V
1 0 V
1 0 V
1 -18 V
1 0 V
2 0 V
0 18 V
1 -18 V
3 0 V
0 18 V
3 0 V
1 17 V
3 0 V
0 17 V
3 0 V
0 18 V
1 0 V
2 0 V
1 17 V
2 0 V
3 0 V
0 18 V
2 0 V
1 0 V
1 17 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
0 -17 V
1 0 V
1 17 V
4 -17 V
0 17 V
0 17 V
1 0 V
2 0 V
0 18 V
5 0 V
0 17 V
5 0 V
0 17 V
1 0 V
1 0 V
1 0 V
2 -17 V
0 17 V
3 0 V
1 0 V
2 0 V
1 0 V
0 18 V
1 0 V
1 0 V
1 0 V
0 -18 V
1 0 V
1 0 V
0 18 V
3 0 V
1 0 V
1 17 V
3 -17 V
0 17 V
1 18 V
1 0 V
1 0 V
0 -18 V
1 18 V
3 -18 V
0 18 V
1 -18 V
1 0 V
0 18 V
2 -18 V
1 0 V
1 0 V
0 18 V
3 0 V
0 17 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
stroke 1314 1717 M
1 17 V
2 0 V
2 0 V
1 0 V
1 0 V
1 -17 V
0 17 V
2 0 V
0 18 V
2 0 V
1 0 V
1 0 V
1 0 V
1 -18 V
2 0 V
1 18 V
3 0 V
1 0 V
0 17 V
2 0 V
1 0 V
1 18 V
1 -18 V
2 0 V
0 18 V
4 0 V
0 17 V
3 0 V
2 0 V
0 17 V
4 0 V
2 -17 V
0 17 V
2 -17 V
0 17 V
4 0 V
2 -17 V
0 17 V
1 0 V
2 -17 V
2 0 V
0 17 V
6 0 V
0 18 V
3 0 V
1 0 V
1 17 V
3 0 V
0 17 V
5 0 V
0 18 V
4 0 V
3 0 V
2 0 V
0 17 V
2 0 V
1 0 V
1 18 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
0 17 V
4 0 V
1 17 V
2 0 V
0 18 V
1 0 V
1 -18 V
1 0 V
1 0 V
1 18 V
1 0 V
1 -18 V
2 0 V
0 18 V
1 -18 V
1 -17 V
0 17 V
1 0 V
2 0 V
1 18 V
0 -18 V
2 0 V
0 18 V
3 0 V
1 0 V
0 17 V
1 0 V
1 0 V
2 0 V
1 17 V
1 0 V
1 0 V
1 0 V
1 0 V
0 -17 V
1 0 V
2 -17 V
0 17 V
1 0 V
1 17 V
1 0 V
stroke 1455 2012 M
2 -17 V
1 17 V
0 18 V
1 0 V
1 0 V
1 0 V
1 17 V
1 0 V
3 0 V
0 18 V
1 0 V
1 0 V
1 0 V
1 17 V
1 -17 V
0 17 V
2 0 V
3 0 V
1 0 V
0 17 V
3 0 V
1 18 V
3 0 V
0 17 V
3 0 V
1 18 V
4 0 V
0 17 V
4 0 V
0 17 V
3 0 V
1 0 V
1 0 V
0 18 V
4 0 V
1 17 V
4 0 V
0 17 V
2 0 V
1 0 V
1 0 V
1 18 V
3 0 V
0 17 V
3 0 V
1 0 V
4 0 V
0 18 V
4 0 V
1 17 V
1 0 V
2 0 V
1 0 V
1 0 V
1 17 V
0 -17 V
2 -17 V
1 0 V
1 -18 V
1 0 V
0 18 V
1 0 V
2 0 V
0 17 V
1 0 V
1 0 V
2 0 V
1 17 V
2 0 V
1 0 V
0 18 V
1 0 V
1 -18 V
0 18 V
1 0 V
1 -18 V
2 0 V
0 18 V
1 0 V
2 0 V
1 0 V
0 17 V
2 0 V
3 0 V
0 18 V
3 0 V
0 17 V
2 0 V
1 0 V
0 -17 V
0 17 V
4 -17 V
1 0 V
0 17 V
2 0 V
1 0 V
1 17 V
5 0 V
0 18 V
2 -18 V
1 0 V
0 18 V
1 -18 V
0 18 V
stroke 1592 2430 M
3 0 V
1 17 V
1 0 V
1 0 V
0 17 V
2 0 V
3 0 V
0 18 V
3 0 V
1 0 V
0 17 V
1 -17 V
2 0 V
0 17 V
1 0 V
3 0 V
1 0 V
0 18 V
2 -18 V
1 0 V
1 0 V
1 0 V
1 18 V
2 0 V
0 17 V
3 0 V
1 17 V
0 -17 V
3 0 V
1 17 V
4 -17 V
0 17 V
1 18 V
1 -18 V
0 18 V
0 -18 V
2 0 V
0 18 V
4 0 V
0 17 V
3 0 V
0 18 V
3 -18 V
2 0 V
2 -17 V
2 0 V
0 17 V
4 0 V
1 18 V
3 -18 V
2 0 V
0 18 V
3 0 V
1 17 V
1 -17 V
3 0 V
0 17 V
3 0 V
0 17 V
4 0 V
1 -17 V
4 0 V
1 17 V
3 0 V
0 18 V
4 0 V
0 17 V
3 0 V
0 17 V
4 0 V
1 18 V
1 -18 V
1 18 V
1 17 V
2 -17 V
0 17 V
1 0 V
5 0 V
0 18 V
5 0 V
1 17 V
4 0 V
5 0 V
0 17 V
4 0 V
0 18 V
4 0 V
0 17 V
3 0 V
0 18 V
1 -18 V
3 0 V
0 18 V
4 0 V
2 -18 V
1 0 V
0 18 V
0 17 V
5 -17 V
0 17 V
0 17 V
2 -17 V
0 -17 V
1 17 V
stroke 1757 2847 M
0 17 V
4 0 V
0 18 V
2 -18 V
0 18 V
2 0 V
1 -18 V
1 18 V
1 0 V
4 0 V
1 17 V
2 -17 V
1 17 V
1 0 V
0 17 V
3 0 V
0 18 V
1 -18 V
0 18 V
2 -18 V
0 18 V
1 0 V
0 17 V
2 -17 V
1 17 V
1 0 V
0 18 V
1 -18 V
0 18 V
3 0 V
0 17 V
5 0 V
0 17 V
4 -17 V
0 17 V
1 -17 V
0 17 V
5 0 V
0 18 V
4 0 V
0 17 V
4 0 V
1 17 V
4 0 V
0 18 V
3 0 V
0 -18 V
0 18 V
3 -18 V
2 0 V
0 18 V
5 0 V
0 17 V
4 0 V
0 18 V
2 -18 V
2 0 V
1 18 V
3 0 V
5 0 V
0 17 V
1 -17 V
1 17 V
3 0 V
1 17 V
4 0 V
1 18 V
1 -18 V
2 0 V
0 18 V
3 0 V
0 17 V
5 0 V
0 18 V
4 0 V
1 17 V
2 -17 V
2 0 V
1 17 V
3 0 V
1 17 V
3 0 V
0 18 V
5 0 V
0 17 V
3 0 V
0 17 V
5 0 V
1 -17 V
0 17 V
2 0 V
0 18 V
5 0 V
0 17 V
5 0 V
0 18 V
4 0 V
0 17 V
3 -17 V
0 17 V
2 0 V
0 17 V
6 0 V
0 18 V
stroke 1930 3386 M
4 0 V
0 17 V
5 0 V
0 18 V
5 0 V
0 17 V
5 0 V
1 17 V
5 0 V
0 18 V
0 -18 V
4 0 V
0 18 V
4 0 V
5 0 V
3 0 V
1 17 V
3 0 V
0 17 V
4 0 V
0 18 V
5 0 V
0 17 V
2 -17 V
0 17 V
1 0 V
1 18 V
3 0 V
1 17 V
5 0 V
0 17 V
2 -17 V
1 0 V
1 17 V
5 0 V
0 18 V
3 -18 V
1 0 V
1 18 V
4 0 V
0 17 V
5 0 V
0 18 V
2 -18 V
0 18 V
3 0 V
0 17 V
4 0 V
0 17 V
1 -17 V
0 17 V
0 -17 V
3 -17 V
1 0 V
1 17 V
4 0 V
1 17 V
4 0 V
0 18 V
3 0 V
0 17 V
3 0 V
0 17 V
2 -17 V
1 0 V
1 17 V
3 -17 V
1 17 V
3 0 V
1 18 V
1 -18 V
0 18 V
3 0 V
1 17 V
3 0 V
1 18 V
5 0 V
0 17 V
4 0 V
1 17 V
4 0 V
1 18 V
3 -18 V
1 0 V
1 18 V
5 0 V
0 17 V
3 0 V
0 18 V
3 0 V
0 17 V
0 -17 V
4 0 V
0 17 V
4 0 V
0 -17 V
0 17 V
0 17 V
3 0 V
0 18 V
2 -18 V
0 18 V
1 0 V
0 17 V
stroke 2116 3942 M
5 0 V
0 17 V
1 -17 V
1 0 V
2 -17 V
0 17 V
2 0 V
1 17 V
5 0 V
0 18 V
5 0 V
0 17 V
5 0 V
0 18 V
1 -18 V
1 -17 V
0 17 V
3 0 V
0 18 V
5 0 V
0 17 V
4 0 V
1 17 V
4 0 V
0 18 V
5 0 V
1 17 V
3 0 V
0 17 V
4 0 V
3 -17 V
1 17 V
2 -17 V
2 0 V
0 17 V
0 -17 V
0 -17 V
3 -18 V
1 0 V
0 18 V
3 0 V
4 0 V
0 17 V
4 0 V
1 17 V
0 -17 V
1 17 V
0 -17 V
0 17 V
1 0 V
5 0 V
0 18 V
3 -18 V
0 18 V
1 0 V
0 17 V
3 0 V
2 -17 V
0 17 V
0 -17 V
0 17 V
2 0 V
0 18 V
4 0 V
0 17 V
5 0 V
0 17 V
0 -17 V
2 -17 V
3 0 V
0 17 V
3 0 V
2 -17 V
2 0 V
1 17 V
2 -17 V
1 0 V
0 17 V
4 -17 V
1 0 V
1 17 V
5 0 V
0 17 V
5 0 V
4 0 V
0 18 V
2 -18 V
2 0 V
0 18 V
5 0 V
1 17 V
3 0 V
0 18 V
5 0 V
2 -18 V
3 0 V
0 18 V
5 0 V
1 17 V
3 0 V
0 17 V
4 0 V
4 0 V
1 18 V
stroke 2303 4290 M
4 0 V
1 17 V
3 0 V
0 17 V
5 0 V
0 18 V
3 -18 V
1 18 V
1 0 V
0 17 V
3 -17 V
0 17 V
4 0 V
0 18 V
5 0 V
1 17 V
5 0 V
0 17 V
4 0 V
3 0 V
1 18 V
2 0 V
4 0 V
5 -18 V
0 18 V
0 17 V
4 0 V
1 18 V
2 0 V
1 17 V
3 -17 V
14 -18 V
6 -17 V
0 17 V
17 -17 V
0 17 V
2 -17 V
1 17 V
13 -17 V
15 -18 V
3 -17 V
0 17 V
4 -17 V
0 17 V
11 -17 V
1 -17 V
0 17 V
1 -17 V
4 -18 V
0 18 V
2 -18 V
1 18 V
7 -18 V
0 18 V
3 -18 V
0 18 V
37 -18 V
39 -17 V
0 17 V
15 -17 V
1 17 V
12 -17 V
1 17 V
2 -17 V
6 -18 V
5 -17 V
1 17 V
3 -17 V
0 17 V
8 -17 V
0 17 V
40 -17 V
0 17 V
2 -17 V
0 17 V
46 -17 V
12 -17 V
0 17 V
4 -17 V
5 -18 V
2 -17 V
10 -17 V
4 -18 V
0 18 V
5 -18 V
0 18 V
39 -18 V
4 -17 V
0 17 V
6 -17 V
10 -18 V
5 -17 V
0 17 V
2 -17 V
6 -17 V
0 17 V
50 -17 V
14 -18 V
0 18 V
9 -18 V
1 18 V
4 -18 V
3 -17 V
15 -18 V
stroke 2902 4098 M
9 -17 V
7 -17 V
1 -18 V
30 -17 V
0 17 V
5 -17 V
0 -17 V
4 -18 V
2 -17 V
26 -18 V
0 18 V
7 -18 V
0 18 V
37 -18 V
19 -17 V
0 17 V
15 -17 V
11 -17 V
17 -18 V
14 -17 V
0 17 V
16 -17 V
10 -17 V
8 -18 V
37 -17 V
15 -18 V
12 -17 V
1 17 V
4 -17 V
16 -17 V
4 -18 V
3 -17 V
1 -18 V
6 -17 V
1 -17 V
0 17 V
4 -17 V
3 -18 V
3 -17 V
7 -17 V
20 -18 V
0 18 V
1 -18 V
1 -17 V
0 17 V
15 -17 V
11 -18 V
0 18 V
10 -18 V
4 -17 V
2 -17 V
66 -18 V
3 -17 V
4 -18 V
8 -17 V
6 -17 V
4 -18 V
1 18 V
3 -18 V
1 18 V
9 -18 V
0 18 V
6 -18 V
12 -17 V
0 17 V
10 -17 V
2 -17 V
19 -18 V
0 -17 V
0 17 V
1 -17 V
4 -18 V
0 18 V
3 -18 V
18 -17 V
0 17 V
2 -17 V
2 -17 V
1 17 V
12 -17 V
1 -18 V
0 18 V
44 -18 V
16 -17 V
0 -18 V
31 -17 V
9 -17 V
4 -18 V
24 -17 V
0 17 V
8 -17 V
0 17 V
13 -17 V
8 -17 V
16 -18 V
0 18 V
0 -18 V
1 18 V
5 -18 V
1 18 V
38 -18 V
0 18 V
17 -18 V
0 -17 V
stroke 3754 3160 M
0 17 V
0 18 V
18 -18 V
0 -17 V
1 17 V
2 -17 V
0 -18 V
0 18 V
1 -18 V
2 -17 V
1 17 V
22 -17 V
2 -17 V
27 -18 V
33 -17 V
35 -18 V
0 18 V
3 -18 V
1 -17 V
0 17 V
16 -17 V
1 17 V
4 -17 V
9 -17 V
10 -18 V
1 18 V
16 -18 V
7 -17 V
23 -17 V
9 -18 V
15 -17 V
34 -18 V
1 18 V
6 -18 V
14 -17 V
0 17 V
2 -17 V
0 17 V
5 -17 V
6 -17 V
0 17 V
2 -17 V
0 17 V
15 -17 V
0 17 V
13 -17 V
0 17 V
26 -17 V
10 -18 V
8 -17 V
2 -17 V
6 -18 V
8 -17 V
5 -18 V
14 -17 V
0 17 V
8 -17 V
14 -17 V
1 -18 V
1 18 V
7 -18 V
19 -17 V
0 17 V
8 -17 V
0 17 V
2 -17 V
0 17 V
1 -17 V
33 -18 V
0 18 V
14 -18 V
0 18 V
10 -18 V
0 18 V
2 -18 V
1 -17 V
20 -17 V
0 17 V
11 -17 V
1 -18 V
10 -17 V
17 -17 V
8 -18 V
0 18 V
39 -18 V
0 18 V
2 -18 V
5 -17 V
1 17 V
30 -17 V
0 17 V
2 -17 V
0 17 V
22 -17 V
1 17 V
5 -17 V
0 17 V
0 -17 V
3 -18 V
0 18 V
27 -18 V
1 18 V
17 -18 V
2 -17 V
stroke 4535 2534 M
0 17 V
6 -17 V
6 -17 V
1 -18 V
39 -17 V
1 -18 V
0 18 V
2 -18 V
0 18 V
12 -18 V
4 -17 V
0 17 V
29 -17 V
0 17 V
11 -17 V
3 -17 V
38 -18 V
11 -17 V
9 -17 V
1 17 V
35 -17 V
0 17 V
15 -17 V
21 -18 V
3 -17 V
11 -18 V
0 18 V
3 -18 V
1 18 V
16 -18 V
15 -17 V
10 -17 V
1 17 V
0 -17 V
7 -18 V
20 -17 V
0 17 V
3 -17 V
9 -18 V
2 -17 V
17 -17 V
0 17 V
10 -17 V
1 17 V
1 -17 V
0 -18 V
7 -17 V
0 17 V
0 -17 V
0 17 V
3 -17 V
1 17 V
16 -17 V
24 -17 V
39 -18 V
10 -17 V
1 17 V
0 -17 V
9 -18 V
0 18 V
50 -18 V
1 -17 V
1 17 V
3 -17 V
22 -17 V
0 -18 V
3 -17 V
27 -18 V
1 18 V
23 -18 V
0 18 V
2 -18 V
0 18 V
6 -18 V
0 18 V
12 -18 V
7 -17 V
18 -17 V
8 -18 V
0 18 V
15 -18 V
0 18 V
0 -18 V
6 -17 V
13 -17 V
0 17 V
22 -17 V
0 17 V
2 -17 V
1 17 V
1 -17 V
0 -18 V
1 -17 V
1 -18 V
12 -17 V
0 17 V
7 -17 V
0 17 V
5 -17 V
0 17 V
2 -17 V
0 17 V
2 -17 V
0 17 V
stroke 5293 1873 M
25 -17 V
0 17 V
23 -17 V
38 -17 V
0 17 V
35 -17 V
22 -18 V
29 -17 V
0 -17 V
0 17 V
5 -17 V
0 17 V
13 -17 V
3 -18 V
0 18 V
41 -18 V
2 -17 V
1 17 V
15 -17 V
5 -18 V
3 -17 V
5 -17 V
19 -18 V
22 -17 V
19 -18 V
1 -17 V
34 -17 V
0 17 V
3 -17 V
0 17 V
13 -17 V
12 -18 V
4 -17 V
1 17 V
15 -17 V
10 -17 V
1 17 V
17 -17 V
0 17 V
5 -17 V
1 17 V
15 -17 V
14 -18 V
0 18 V
5 -18 V
3 -17 V
6 -18 V
1 -17 V
0 17 V
8 -17 V
0 -17 V
2 -18 V
0 18 V
17 -18 V
1 -17 V
8 -18 V
23 -17 V
0 17 V
8 -17 V
3 -17 V
6 -18 V
0 18 V
25 -18 V
0 18 V
3 -18 V
0 18 V
6 -18 V
1 -17 V
7 -17 V
0 17 V
6 -17 V
5 -18 V
0 18 V
11 -18 V
17 -17 V
0 17 V
9 -17 V
0 17 V
2 -17 V
5 -18 V
0 -17 V
1 17 V
29 -17 V
8 -17 V
25 -18 V
0 18 V
5 -18 V
0 18 V
3 -18 V
0 -17 V
2 -18 V
7 -17 V
7 -17 V
29 -18 V
0 18 V
4 -18 V
4 -17 V
3 -17 V
9 -18 V
5 -17 V
1 17 V
19 -17 V
8 -18 V
0 -17 V
stroke 6121 1039 M
2 -17 V
0 17 V
25 -17 V
2 -18 V
1 18 V
2 -18 V
1 18 V
9 -18 V
0 18 V
4 -18 V
0 18 V
9 -18 V
1 18 V
14 -18 V
10 -17 V
3 -18 V
4 -17 V
4 -17 V
1 -18 V
10 -17 V
2 -17 V
0 17 V
10 -17 V
6 -18 V
14 -17 V
15 -18 V
18 -17 V
38 -17 V
4 -18 V
13 -17 V
14 -17 V
1 17 V
4 -17 V
15 -18 V
0 18 V
4 -18 V
4 -17 V
12 -18 V
0 18 V
10 -18 V
16 -17 V
3 -17 V
0 17 V
7 -17 V
3 -18 V
0 18 V
3 -18 V
4 -17 V
23 -18 V
4 -17 V
0 17 V
17 -17 V
25 -17 V
1 17 V
5 -17 V
1 17 V
16 -17 V
2 -18 V
2 -17 V
5 -17 V
0 17 V
10 -17 V
1 17 V
9 -17 V
16 -18 V
1 -17 V
22 -18 V
7 -17 V
0 17 V
2 -17 V
0 17 V
33 -17 V
0 17 V
34 -17 V
1 17 V
7 -17 V
29 0 V
stroke
LTb
770 4620 N
770 448 L
6220 0 V
0 4172 V
-6220 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 458 4217 a Fi(Figure)27 b(6:)36 b(Longitud)27
b(de)h(la)f(cola)g(del)h(Sector)f(de)g(T)-7 b(esteo)27
b(a)h(lo)f(largo)f(de)h(la)h(sim)n(ulaci\023)-42 b(on.)1851
5662 y(7)p eop end
%%Page: 8 9
TeXDict begin 8 8 bop 440 3984 a @beginspecial 50 @llx
50 @lly 410 @urx 302 @ury 4252 @rwi @setspecial
%%BeginDocument: ./img/tp_UI.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: tp_UI.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Sat Dec 12 20:51:20 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (tp_UI.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Dec 12 20:51:20 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
854 693 M
63 0 V
6073 0 R
-63 0 V
stroke
770 693 M
[ [(Helvetica) 140.0 0.0 true true 0 (3800)]
] -46.7 MRshow
0.500 UL
LTb
854 1307 M
63 0 V
6073 0 R
-63 0 V
stroke
770 1307 M
[ [(Helvetica) 140.0 0.0 true true 0 (3850)]
] -46.7 MRshow
0.500 UL
LTb
854 1920 M
63 0 V
6073 0 R
-63 0 V
stroke
770 1920 M
[ [(Helvetica) 140.0 0.0 true true 0 (3900)]
] -46.7 MRshow
0.500 UL
LTb
854 2534 M
63 0 V
6073 0 R
-63 0 V
stroke
770 2534 M
[ [(Helvetica) 140.0 0.0 true true 0 (3950)]
] -46.7 MRshow
0.500 UL
LTb
854 3148 M
63 0 V
6073 0 R
-63 0 V
stroke
770 3148 M
[ [(Helvetica) 140.0 0.0 true true 0 (4000)]
] -46.7 MRshow
0.500 UL
LTb
854 3761 M
63 0 V
6073 0 R
-63 0 V
stroke
770 3761 M
[ [(Helvetica) 140.0 0.0 true true 0 (4050)]
] -46.7 MRshow
0.500 UL
LTb
854 4375 M
63 0 V
6073 0 R
-63 0 V
stroke
770 4375 M
[ [(Helvetica) 140.0 0.0 true true 0 (4100)]
] -46.7 MRshow
0.500 UL
LTb
1177 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1177 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.1)]
] -46.7 MCshow
0.500 UL
LTb
1823 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1823 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.2)]
] -46.7 MCshow
0.500 UL
LTb
2469 448 M
0 63 V
0 4109 R
0 -63 V
stroke
2469 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.3)]
] -46.7 MCshow
0.500 UL
LTb
3115 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3115 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.4)]
] -46.7 MCshow
0.500 UL
LTb
3761 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3761 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.5)]
] -46.7 MCshow
0.500 UL
LTb
4406 448 M
0 63 V
0 4109 R
0 -63 V
stroke
4406 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.6)]
] -46.7 MCshow
0.500 UL
LTb
5052 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5052 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.7)]
] -46.7 MCshow
0.500 UL
LTb
5698 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5698 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.8)]
] -46.7 MCshow
0.500 UL
LTb
6344 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6344 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.9)]
] -46.7 MCshow
0.500 UL
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1)]
] -46.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
854 4620 N
854 448 L
6136 0 V
0 4172 V
-6136 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Tiempo promedio en la cola\(minutos\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3922 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Probablidad de pasar el test de la ST)]
] -46.7 MCshow
LTb
3922 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Tiempo promedio en la cola de la UI en funcion de la probabilidad de pasar el test de la ST)]
] -46.7 MCshow
1.000 UP
0.500 UL
LTb
0.500 UL
LT0
854 4557 M
323 -628 V
323 -962 V
1823 525 L
323 3209 V
323 72 V
2792 1976 L
323 1543 V
323 -596 V
323 -150 V
322 729 V
4406 2346 L
323 1172 V
5052 2333 L
323 653 V
5698 1667 L
323 1045 V
6344 1418 L
323 860 V
323 2161 V
stroke
LTb
854 4620 N
854 448 L
6136 0 V
0 4172 V
-6136 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 183 x Fi(Figure)24 b(7:)35 b(Tiemp)r(o)24
b(promedio)f(en)i(la)f(cola)f(de)i(la)f(Unidad)h(de)f(Insp)r(ecci\023)
-42 b(on)24 b(en)h(funci\023)-42 b(on)24 b(de)440 4267
y(la)j(probabilidad)g(de)g(pasar)g(el)g(test)h(del)g(Sector)f(de)g(T)-7
b(esteo.)1851 5662 y(8)p eop end
%%Page: 9 10
TeXDict begin 9 9 bop 440 3984 a @beginspecial 50 @llx
50 @lly 410 @urx 302 @ury 4252 @rwi @setspecial
%%BeginDocument: ./img/tp_ER.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: tp_ER.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Sat Dec 12 20:51:20 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (tp_ER.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Dec 12 20:51:20 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
938 448 M
63 0 V
5989 0 R
-63 0 V
stroke
854 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MRshow
0.500 UL
LTb
938 887 M
63 0 V
5989 0 R
-63 0 V
stroke
854 887 M
[ [(Helvetica) 140.0 0.0 true true 0 (1e-05)]
] -46.7 MRshow
0.500 UL
LTb
938 1326 M
63 0 V
5989 0 R
-63 0 V
stroke
854 1326 M
[ [(Helvetica) 140.0 0.0 true true 0 (2e-05)]
] -46.7 MRshow
0.500 UL
LTb
938 1765 M
63 0 V
5989 0 R
-63 0 V
stroke
854 1765 M
[ [(Helvetica) 140.0 0.0 true true 0 (3e-05)]
] -46.7 MRshow
0.500 UL
LTb
938 2205 M
63 0 V
5989 0 R
-63 0 V
stroke
854 2205 M
[ [(Helvetica) 140.0 0.0 true true 0 (4e-05)]
] -46.7 MRshow
0.500 UL
LTb
938 2644 M
63 0 V
5989 0 R
-63 0 V
stroke
854 2644 M
[ [(Helvetica) 140.0 0.0 true true 0 (5e-05)]
] -46.7 MRshow
0.500 UL
LTb
938 3083 M
63 0 V
5989 0 R
-63 0 V
stroke
854 3083 M
[ [(Helvetica) 140.0 0.0 true true 0 (6e-05)]
] -46.7 MRshow
0.500 UL
LTb
938 3522 M
63 0 V
5989 0 R
-63 0 V
stroke
854 3522 M
[ [(Helvetica) 140.0 0.0 true true 0 (7e-05)]
] -46.7 MRshow
0.500 UL
LTb
938 3961 M
63 0 V
5989 0 R
-63 0 V
stroke
854 3961 M
[ [(Helvetica) 140.0 0.0 true true 0 (8e-05)]
] -46.7 MRshow
0.500 UL
LTb
938 4400 M
63 0 V
5989 0 R
-63 0 V
stroke
854 4400 M
[ [(Helvetica) 140.0 0.0 true true 0 (9e-05)]
] -46.7 MRshow
0.500 UL
LTb
1257 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1257 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.1)]
] -46.7 MCshow
0.500 UL
LTb
1894 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1894 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.2)]
] -46.7 MCshow
0.500 UL
LTb
2531 448 M
0 63 V
0 4109 R
0 -63 V
stroke
2531 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.3)]
] -46.7 MCshow
0.500 UL
LTb
3168 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3168 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.4)]
] -46.7 MCshow
0.500 UL
LTb
3805 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3805 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.5)]
] -46.7 MCshow
0.500 UL
LTb
4442 448 M
0 63 V
0 4109 R
0 -63 V
stroke
4442 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.6)]
] -46.7 MCshow
0.500 UL
LTb
5079 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5079 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.7)]
] -46.7 MCshow
0.500 UL
LTb
5716 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5716 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.8)]
] -46.7 MCshow
0.500 UL
LTb
6353 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6353 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.9)]
] -46.7 MCshow
0.500 UL
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1)]
] -46.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
938 4620 N
938 448 L
6052 0 V
0 4172 V
-6052 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Tiempo promedio en la cola\(minutos\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3964 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Probablidad de pasar el test de la ST)]
] -46.7 MCshow
LTb
3964 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Tiempo promedio en la cola de la ER en funcion de la probabilidad de pasar el test de la ST)]
] -46.7 MCshow
1.000 UP
0.500 UL
LTb
0.500 UL
LT0
938 3807 M
1257 448 L
318 4136 V
1894 448 L
318 2848 V
2531 448 L
318 0 V
319 0 V
318 0 V
319 0 V
318 0 V
319 0 V
318 0 V
319 0 V
318 0 V
319 0 V
318 0 V
319 0 V
318 0 V
319 0 V
stroke
LTb
938 4620 N
938 448 L
6052 0 V
0 4172 V
-6052 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 183 x Fi(Figure)18 b(8:)32 b(Tiemp)r(o)19
b(promedio)f(en)h(la)g(cola)f(de)h(las)f(Estaciones)f(de)i
(Reparaci\023)-42 b(on)17 b(en)i(funci\023)-42 b(on)440
4267 y(de)28 b(la)f(probabilidad)f(de)i(pasar)e(el)i(test)g(del)g
(Sector)e(de)i(T)-7 b(esteo.)1851 5662 y(9)p eop end
%%Page: 10 11
TeXDict begin 10 10 bop 440 3984 a @beginspecial 50 @llx
50 @lly 410 @urx 302 @ury 4252 @rwi @setspecial
%%BeginDocument: ./img/tp_ST.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: tp_ST.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Sat Dec 12 20:51:20 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (tp_ST.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Dec 12 20:51:20 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1022 448 M
63 0 V
5905 0 R
-63 0 V
stroke
938 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MRshow
0.500 UL
LTb
1022 1044 M
63 0 V
5905 0 R
-63 0 V
stroke
938 1044 M
[ [(Helvetica) 140.0 0.0 true true 0 (50000)]
] -46.7 MRshow
0.500 UL
LTb
1022 1640 M
63 0 V
5905 0 R
-63 0 V
stroke
938 1640 M
[ [(Helvetica) 140.0 0.0 true true 0 (100000)]
] -46.7 MRshow
0.500 UL
LTb
1022 2236 M
63 0 V
5905 0 R
-63 0 V
stroke
938 2236 M
[ [(Helvetica) 140.0 0.0 true true 0 (150000)]
] -46.7 MRshow
0.500 UL
LTb
1022 2832 M
63 0 V
5905 0 R
-63 0 V
stroke
938 2832 M
[ [(Helvetica) 140.0 0.0 true true 0 (200000)]
] -46.7 MRshow
0.500 UL
LTb
1022 3428 M
63 0 V
5905 0 R
-63 0 V
stroke
938 3428 M
[ [(Helvetica) 140.0 0.0 true true 0 (250000)]
] -46.7 MRshow
0.500 UL
LTb
1022 4024 M
63 0 V
5905 0 R
-63 0 V
stroke
938 4024 M
[ [(Helvetica) 140.0 0.0 true true 0 (300000)]
] -46.7 MRshow
0.500 UL
LTb
1022 4620 M
63 0 V
5905 0 R
-63 0 V
stroke
938 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 (350000)]
] -46.7 MRshow
0.500 UL
LTb
1336 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1336 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.1)]
] -46.7 MCshow
0.500 UL
LTb
1964 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1964 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.2)]
] -46.7 MCshow
0.500 UL
LTb
2593 448 M
0 63 V
0 4109 R
0 -63 V
stroke
2593 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.3)]
] -46.7 MCshow
0.500 UL
LTb
3221 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3221 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.4)]
] -46.7 MCshow
0.500 UL
LTb
3849 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3849 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.5)]
] -46.7 MCshow
0.500 UL
LTb
4477 448 M
0 63 V
0 4109 R
0 -63 V
stroke
4477 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.6)]
] -46.7 MCshow
0.500 UL
LTb
5105 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5105 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.7)]
] -46.7 MCshow
0.500 UL
LTb
5734 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5734 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.8)]
] -46.7 MCshow
0.500 UL
LTb
6362 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6362 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.9)]
] -46.7 MCshow
0.500 UL
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1)]
] -46.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
1022 4620 N
0 -4172 V
5968 0 V
0 4172 V
-5968 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Tiempo promedio en la cola\(minutos\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
4006 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Probablidad de pasar el test de la ST)]
] -46.7 MCshow
LTb
4006 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Tiempo promedio en la cola de la ST en funcion de la probabilidad de pasar el test de la ST)]
] -46.7 MCshow
1.000 UP
0.500 UL
LTb
0.500 UL
LT0
1022 4570 M
1336 2397 L
314 -669 V
314 -381 V
314 -187 V
315 -113 V
2907 927 L
314 -72 V
314 -47 V
314 -49 V
314 -32 V
314 -24 V
314 -31 V
314 -24 V
314 -17 V
315 -24 V
314 -8 V
314 -21 V
314 -13 V
314 2 V
stroke
LTb
1022 4620 N
0 -4172 V
5968 0 V
0 4172 V
-5968 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 183 x Fi(Figure)35 b(9:)52 b(Tiemp)r(o)36
b(promedio)e(en)i(la)f(cola)f(del)i(Sector)e(de)i(T)-7
b(esteo)35 b(en)g(funci\023)-42 b(on)36 b(de)g(la)440
4267 y(probabilidad)27 b(de)g(pasar)f(el)i(test)g(del)g(Sector)f(de)g
(T)-7 b(esteo.)1831 5662 y(10)p eop end
%%Page: 11 12
TeXDict begin 11 11 bop 440 3984 a @beginspecial 50 @llx
50 @lly 410 @urx 302 @ury 4252 @rwi @setspecial
%%BeginDocument: ./img/ql_UI.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ql_UI.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Sat Dec 12 20:51:20 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ql_UI.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Dec 12 20:51:20 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
770 448 M
63 0 V
6157 0 R
-63 0 V
stroke
686 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MRshow
0.500 UL
LTb
770 1143 M
63 0 V
6157 0 R
-63 0 V
stroke
686 1143 M
[ [(Helvetica) 140.0 0.0 true true 0 (20)]
] -46.7 MRshow
0.500 UL
LTb
770 1839 M
63 0 V
6157 0 R
-63 0 V
stroke
686 1839 M
[ [(Helvetica) 140.0 0.0 true true 0 (40)]
] -46.7 MRshow
0.500 UL
LTb
770 2534 M
63 0 V
6157 0 R
-63 0 V
stroke
686 2534 M
[ [(Helvetica) 140.0 0.0 true true 0 (60)]
] -46.7 MRshow
0.500 UL
LTb
770 3229 M
63 0 V
6157 0 R
-63 0 V
stroke
686 3229 M
[ [(Helvetica) 140.0 0.0 true true 0 (80)]
] -46.7 MRshow
0.500 UL
LTb
770 3925 M
63 0 V
6157 0 R
-63 0 V
stroke
686 3925 M
[ [(Helvetica) 140.0 0.0 true true 0 (100)]
] -46.7 MRshow
0.500 UL
LTb
770 4620 M
63 0 V
6157 0 R
-63 0 V
stroke
686 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 (120)]
] -46.7 MRshow
0.500 UL
LTb
1097 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1097 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.1)]
] -46.7 MCshow
0.500 UL
LTb
1752 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1752 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.2)]
] -46.7 MCshow
0.500 UL
LTb
2407 448 M
0 63 V
0 4109 R
0 -63 V
stroke
2407 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.3)]
] -46.7 MCshow
0.500 UL
LTb
3062 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3062 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.4)]
] -46.7 MCshow
0.500 UL
LTb
3716 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3716 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.5)]
] -46.7 MCshow
0.500 UL
LTb
4371 448 M
0 63 V
0 4109 R
0 -63 V
stroke
4371 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.6)]
] -46.7 MCshow
0.500 UL
LTb
5026 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5026 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.7)]
] -46.7 MCshow
0.500 UL
LTb
5681 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5681 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.8)]
] -46.7 MCshow
0.500 UL
LTb
6335 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6335 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.9)]
] -46.7 MCshow
0.500 UL
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1)]
] -46.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
770 4620 N
770 448 L
6220 0 V
0 4172 V
-6220 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Longitud promedio de la cola\(personas\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3880 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Probablidad de pasar el test de la ST)]
] -46.7 MCshow
LTb
3880 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Longitud promedio de la cola de la UI en funcion de la probabilidad de pasar el test de la ST)]
] -46.7 MCshow
1.000 UP
0.500 UL
LTb
0.500 UL
LT0
770 653 M
327 212 V
328 192 V
327 159 V
327 273 V
328 192 V
327 165 V
328 254 V
327 184 V
327 189 V
328 223 V
327 125 V
327 321 V
328 110 V
327 219 V
328 168 V
327 225 V
327 139 V
328 314 V
327 255 V
stroke
LTb
770 4620 N
770 448 L
6220 0 V
0 4172 V
-6220 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 183 x Fi(Figure)25 b(10:)35 b(Longitud)25
b(promedio)g(de)h(la)f(cola)g(de)h(la)f(Unidad)h(de)g(Insp)r(ecci\023)
-42 b(on)25 b(en)h(funci\023)-42 b(on)440 4267 y(de)28
b(la)f(probabilidad)f(de)i(pasar)e(el)i(test)g(del)g(Sector)e(de)i(T)-7
b(esteo.)1831 5662 y(11)p eop end
%%Page: 12 13
TeXDict begin 12 12 bop 440 3984 a @beginspecial 50 @llx
50 @lly 410 @urx 302 @ury 4252 @rwi @setspecial
%%BeginDocument: ./img/ql_ER.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ql_ER.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Sat Dec 12 20:51:20 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ql_ER.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Dec 12 20:51:20 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1106 448 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MRshow
0.500 UL
LTb
1106 922 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 922 M
[ [(Helvetica) 140.0 0.0 true true 0 (5e-08)]
] -46.7 MRshow
0.500 UL
LTb
1106 1396 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 1396 M
[ [(Helvetica) 140.0 0.0 true true 0 (1e-07)]
] -46.7 MRshow
0.500 UL
LTb
1106 1870 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 1870 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.5e-07)]
] -46.7 MRshow
0.500 UL
LTb
1106 2344 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 2344 M
[ [(Helvetica) 140.0 0.0 true true 0 (2e-07)]
] -46.7 MRshow
0.500 UL
LTb
1106 2818 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 2818 M
[ [(Helvetica) 140.0 0.0 true true 0 (2.5e-07)]
] -46.7 MRshow
0.500 UL
LTb
1106 3293 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 3293 M
[ [(Helvetica) 140.0 0.0 true true 0 (3e-07)]
] -46.7 MRshow
0.500 UL
LTb
1106 3767 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 3767 M
[ [(Helvetica) 140.0 0.0 true true 0 (3.5e-07)]
] -46.7 MRshow
0.500 UL
LTb
1106 4241 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 4241 M
[ [(Helvetica) 140.0 0.0 true true 0 (4e-07)]
] -46.7 MRshow
0.500 UL
LTb
1416 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1416 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.1)]
] -46.7 MCshow
0.500 UL
LTb
2035 448 M
0 63 V
0 4109 R
0 -63 V
stroke
2035 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.2)]
] -46.7 MCshow
0.500 UL
LTb
2654 448 M
0 63 V
0 4109 R
0 -63 V
stroke
2654 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.3)]
] -46.7 MCshow
0.500 UL
LTb
3274 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3274 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.4)]
] -46.7 MCshow
0.500 UL
LTb
3893 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3893 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.5)]
] -46.7 MCshow
0.500 UL
LTb
4513 448 M
0 63 V
0 4109 R
0 -63 V
stroke
4513 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.6)]
] -46.7 MCshow
0.500 UL
LTb
5132 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5132 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.7)]
] -46.7 MCshow
0.500 UL
LTb
5751 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5751 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.8)]
] -46.7 MCshow
0.500 UL
LTb
6371 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6371 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.9)]
] -46.7 MCshow
0.500 UL
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1)]
] -46.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
1106 4620 N
0 -4172 V
5884 0 V
0 4172 V
-5884 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Longitud promedio de la cola\(personas\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
4048 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Probablidad de pasar el test de la ST)]
] -46.7 MCshow
LTb
4048 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Longitud promedio de la cola de la ER en funcion de la probabilidad de pasar el test de la ST)]
] -46.7 MCshow
1.000 UP
0.500 UL
LTb
0.500 UL
LT0
1106 1510 M
1416 448 L
309 4117 V
2035 448 L
310 2329 V
2654 448 L
310 0 V
310 0 V
309 0 V
310 0 V
310 0 V
310 0 V
309 0 V
310 0 V
310 0 V
309 0 V
310 0 V
310 0 V
309 0 V
310 0 V
stroke
LTb
1106 4620 N
0 -4172 V
5884 0 V
0 4172 V
-5884 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 183 x Fi(Figure)34 b(11:)50 b(Longitud)35
b(promedio)e(de)i(la)g(cola)e(de)i(las)f(Estaciones)f(de)i
(Reparaci\023)-42 b(on)33 b(en)440 4267 y(funci\023)-42
b(on)28 b(de)g(la)f(probabilidad)f(de)i(pasar)e(el)i(test)g(del)f
(Sector)g(de)h(T)-7 b(esteo.)1831 5662 y(12)p eop end
%%Page: 13 14
TeXDict begin 13 13 bop 440 3984 a @beginspecial 50 @llx
50 @lly 410 @urx 302 @ury 4252 @rwi @setspecial
%%BeginDocument: ./img/ql_ST.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ql_ST.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Sat Dec 12 20:51:20 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ql_ST.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Dec 12 20:51:20 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
770 992 M
63 0 V
6157 0 R
-63 0 V
stroke
686 992 M
[ [(Helvetica) 140.0 0.0 true true 0 (300)]
] -46.7 MRshow
0.500 UL
LTb
770 1899 M
63 0 V
6157 0 R
-63 0 V
stroke
686 1899 M
[ [(Helvetica) 140.0 0.0 true true 0 (350)]
] -46.7 MRshow
0.500 UL
LTb
770 2806 M
63 0 V
6157 0 R
-63 0 V
stroke
686 2806 M
[ [(Helvetica) 140.0 0.0 true true 0 (400)]
] -46.7 MRshow
0.500 UL
LTb
770 3713 M
63 0 V
6157 0 R
-63 0 V
stroke
686 3713 M
[ [(Helvetica) 140.0 0.0 true true 0 (450)]
] -46.7 MRshow
0.500 UL
LTb
770 4620 M
63 0 V
6157 0 R
-63 0 V
stroke
686 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 (500)]
] -46.7 MRshow
0.500 UL
LTb
1097 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1097 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.1)]
] -46.7 MCshow
0.500 UL
LTb
1752 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1752 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.2)]
] -46.7 MCshow
0.500 UL
LTb
2407 448 M
0 63 V
0 4109 R
0 -63 V
stroke
2407 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.3)]
] -46.7 MCshow
0.500 UL
LTb
3062 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3062 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.4)]
] -46.7 MCshow
0.500 UL
LTb
3716 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3716 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.5)]
] -46.7 MCshow
0.500 UL
LTb
4371 448 M
0 63 V
0 4109 R
0 -63 V
stroke
4371 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.6)]
] -46.7 MCshow
0.500 UL
LTb
5026 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5026 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.7)]
] -46.7 MCshow
0.500 UL
LTb
5681 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5681 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.8)]
] -46.7 MCshow
0.500 UL
LTb
6335 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6335 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.9)]
] -46.7 MCshow
0.500 UL
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1)]
] -46.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
770 4620 N
770 448 L
6220 0 V
0 4172 V
-6220 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Longitud promedio de la cola\(personas\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3880 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Probablidad de pasar el test de la ST)]
] -46.7 MCshow
LTb
3880 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Longitud promedio de la cola de la ST en funcion de la probabilidad de pasar el test de la ST)]
] -46.7 MCshow
1.000 UP
0.500 UL
LTb
0.500 UL
LT0
770 4526 M
327 -237 V
328 -206 V
327 -562 V
327 34 V
328 -48 V
327 -466 V
328 -193 V
327 -48 V
327 -311 V
328 -130 V
327 -94 V
327 -181 V
328 -314 V
327 -148 V
328 -360 V
327 -36 V
6335 779 L
6663 596 L
327 164 V
stroke
LTb
770 4620 N
770 448 L
6220 0 V
0 4172 V
-6220 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 183 x Fi(Figure)29 b(12:)39 b(Longitud)29
b(promedio)g(de)g(la)g(cola)g(del)g(Sector)g(de)g(T)-7
b(esteo)29 b(en)h(funci\023)-42 b(on)29 b(de)h(la)440
4267 y(probabilidad)d(de)g(pasar)f(el)i(test)g(del)g(Sector)f(de)g(T)-7
b(esteo.)1831 5662 y(13)p eop end
%%Page: 14 15
TeXDict begin 14 14 bop 440 3984 a @beginspecial 50 @llx
50 @lly 410 @urx 302 @ury 4252 @rwi @setspecial
%%BeginDocument: ./img/ss_ER1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ss_ER1.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Sat Dec 12 20:51:20 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ss_ER1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Dec 12 20:51:20 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
770 970 M
63 0 V
6157 0 R
-63 0 V
stroke
686 970 M
[ [(Helvetica) 140.0 0.0 true true 0 (30)]
] -46.7 MRshow
0.500 UL
LTb
770 1549 M
63 0 V
6157 0 R
-63 0 V
stroke
686 1549 M
[ [(Helvetica) 140.0 0.0 true true 0 (40)]
] -46.7 MRshow
0.500 UL
LTb
770 2128 M
63 0 V
6157 0 R
-63 0 V
stroke
686 2128 M
[ [(Helvetica) 140.0 0.0 true true 0 (50)]
] -46.7 MRshow
0.500 UL
LTb
770 2708 M
63 0 V
6157 0 R
-63 0 V
stroke
686 2708 M
[ [(Helvetica) 140.0 0.0 true true 0 (60)]
] -46.7 MRshow
0.500 UL
LTb
770 3287 M
63 0 V
6157 0 R
-63 0 V
stroke
686 3287 M
[ [(Helvetica) 140.0 0.0 true true 0 (70)]
] -46.7 MRshow
0.500 UL
LTb
770 3867 M
63 0 V
6157 0 R
-63 0 V
stroke
686 3867 M
[ [(Helvetica) 140.0 0.0 true true 0 (80)]
] -46.7 MRshow
0.500 UL
LTb
770 4446 M
63 0 V
6157 0 R
-63 0 V
stroke
686 4446 M
[ [(Helvetica) 140.0 0.0 true true 0 (90)]
] -46.7 MRshow
0.500 UL
LTb
1097 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1097 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.1)]
] -46.7 MCshow
0.500 UL
LTb
1752 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1752 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.2)]
] -46.7 MCshow
0.500 UL
LTb
2407 448 M
0 63 V
0 4109 R
0 -63 V
stroke
2407 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.3)]
] -46.7 MCshow
0.500 UL
LTb
3062 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3062 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.4)]
] -46.7 MCshow
0.500 UL
LTb
3716 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3716 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.5)]
] -46.7 MCshow
0.500 UL
LTb
4371 448 M
0 63 V
0 4109 R
0 -63 V
stroke
4371 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.6)]
] -46.7 MCshow
0.500 UL
LTb
5026 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5026 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.7)]
] -46.7 MCshow
0.500 UL
LTb
5681 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5681 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.8)]
] -46.7 MCshow
0.500 UL
LTb
6335 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6335 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.9)]
] -46.7 MCshow
0.500 UL
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1)]
] -46.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
770 4620 N
770 448 L
6220 0 V
0 4172 V
-6220 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Ocupacion promedio del servidor\(%\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3880 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Probablidad de pasar el test de la ST)]
] -46.7 MCshow
LTb
3880 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Ocupacion promedio del servidor ER1 en funcion de la probabilidad de pasar el test de la ST)]
] -46.7 MCshow
1.000 UP
0.500 UL
LTb
0.500 UL
LT0
770 4564 M
327 -304 V
328 -299 V
327 -283 V
327 -305 V
328 -251 V
327 -260 V
328 -229 V
327 -259 V
327 -262 V
328 -144 V
327 -230 V
327 -215 V
328 -171 V
327 -201 V
328 -132 V
6008 903 L
6335 698 L
328 -98 V
6990 470 L
stroke
LTb
770 4620 N
770 448 L
6220 0 V
0 4172 V
-6220 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 183 x Fi(Figure)30 b(13:)43 b(Ocupaci\023)-42
b(on)29 b(promedio)h(de)h(la)f(Estaci\023)-42 b(on)30
b(de)h(Reparaci\023)-42 b(on)29 b(1)h(en)h(funci\023)-42
b(on)31 b(de)440 4267 y(la)c(probabilidad)g(de)g(pasar)g(el)g(test)h
(del)g(Sector)f(de)g(T)-7 b(esteo.)1831 5662 y(14)p eop
end
%%Page: 15 16
TeXDict begin 15 15 bop 440 3984 a @beginspecial 50 @llx
50 @lly 410 @urx 302 @ury 4252 @rwi @setspecial
%%BeginDocument: ./img/ss_ER2.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ss_ER2.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Sat Dec 12 20:51:20 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ss_ER2.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Dec 12 20:51:20 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1022 448 M
63 0 V
5905 0 R
-63 0 V
stroke
938 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MRshow
0.500 UL
LTb
1022 1110 M
63 0 V
5905 0 R
-63 0 V
stroke
938 1110 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.01)]
] -46.7 MRshow
0.500 UL
LTb
1022 1772 M
63 0 V
5905 0 R
-63 0 V
stroke
938 1772 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.02)]
] -46.7 MRshow
0.500 UL
LTb
1022 2435 M
63 0 V
5905 0 R
-63 0 V
stroke
938 2435 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.03)]
] -46.7 MRshow
0.500 UL
LTb
1022 3097 M
63 0 V
5905 0 R
-63 0 V
stroke
938 3097 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.04)]
] -46.7 MRshow
0.500 UL
LTb
1022 3759 M
63 0 V
5905 0 R
-63 0 V
stroke
938 3759 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.05)]
] -46.7 MRshow
0.500 UL
LTb
1022 4421 M
63 0 V
5905 0 R
-63 0 V
stroke
938 4421 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.06)]
] -46.7 MRshow
0.500 UL
LTb
1336 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1336 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.1)]
] -46.7 MCshow
0.500 UL
LTb
1964 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1964 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.2)]
] -46.7 MCshow
0.500 UL
LTb
2593 448 M
0 63 V
0 4109 R
0 -63 V
stroke
2593 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.3)]
] -46.7 MCshow
0.500 UL
LTb
3221 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3221 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.4)]
] -46.7 MCshow
0.500 UL
LTb
3849 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3849 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.5)]
] -46.7 MCshow
0.500 UL
LTb
4477 448 M
0 63 V
0 4109 R
0 -63 V
stroke
4477 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.6)]
] -46.7 MCshow
0.500 UL
LTb
5105 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5105 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.7)]
] -46.7 MCshow
0.500 UL
LTb
5734 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5734 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.8)]
] -46.7 MCshow
0.500 UL
LTb
6362 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6362 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.9)]
] -46.7 MCshow
0.500 UL
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1)]
] -46.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
1022 4620 N
0 -4172 V
5968 0 V
0 4172 V
-5968 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Ocupacion promedio del servidor\(%\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
4006 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Probablidad de pasar el test de la ST)]
] -46.7 MCshow
LTb
4006 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Ocupacion promedio del servidor ER2 en funcion de la probabilidad de pasar el test de la ST)]
] -46.7 MCshow
1.000 UP
0.500 UL
LTb
0.500 UL
LT0
1022 4545 M
314 3 V
314 65 V
314 -177 V
314 -151 V
315 -209 V
314 171 V
314 -383 V
314 -98 V
314 -784 V
314 369 V
314 294 V
314 -923 V
314 83 V
314 -341 V
315 -815 V
314 -143 V
314 -120 V
6676 962 L
6990 448 L
stroke
LTb
1022 4620 N
0 -4172 V
5968 0 V
0 4172 V
-5968 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 183 x Fi(Figure)30 b(14:)43 b(Ocupaci\023)-42
b(on)29 b(promedio)h(de)h(la)f(Estaci\023)-42 b(on)30
b(de)h(Reparaci\023)-42 b(on)29 b(2)h(en)h(funci\023)-42
b(on)31 b(de)440 4267 y(la)c(probabilidad)g(de)g(pasar)g(el)g(test)h
(del)g(Sector)f(de)g(T)-7 b(esteo.)1831 5662 y(15)p eop
end
%%Page: 16 17
TeXDict begin 16 16 bop 440 3984 a @beginspecial 50 @llx
50 @lly 410 @urx 302 @ury 4252 @rwi @setspecial
%%BeginDocument: ./img/ss_ER3.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ss_ER3.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Sat Dec 12 20:51:20 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ss_ER3.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Dec 12 20:51:20 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
938 448 M
63 0 V
5989 0 R
-63 0 V
stroke
854 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MRshow
0.500 UL
LTb
938 1207 M
63 0 V
5989 0 R
-63 0 V
stroke
854 1207 M
[ [(Helvetica) 140.0 0.0 true true 0 (2e-04)]
] -46.7 MRshow
0.500 UL
LTb
938 1965 M
63 0 V
5989 0 R
-63 0 V
stroke
854 1965 M
[ [(Helvetica) 140.0 0.0 true true 0 (4e-04)]
] -46.7 MRshow
0.500 UL
LTb
938 2724 M
63 0 V
5989 0 R
-63 0 V
stroke
854 2724 M
[ [(Helvetica) 140.0 0.0 true true 0 (6e-04)]
] -46.7 MRshow
0.500 UL
LTb
938 3482 M
63 0 V
5989 0 R
-63 0 V
stroke
854 3482 M
[ [(Helvetica) 140.0 0.0 true true 0 (8e-04)]
] -46.7 MRshow
0.500 UL
LTb
938 4241 M
63 0 V
5989 0 R
-63 0 V
stroke
854 4241 M
[ [(Helvetica) 140.0 0.0 true true 0 (1e-03)]
] -46.7 MRshow
0.500 UL
LTb
1257 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1257 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.1)]
] -46.7 MCshow
0.500 UL
LTb
1894 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1894 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.2)]
] -46.7 MCshow
0.500 UL
LTb
2531 448 M
0 63 V
0 4109 R
0 -63 V
stroke
2531 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.3)]
] -46.7 MCshow
0.500 UL
LTb
3168 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3168 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.4)]
] -46.7 MCshow
0.500 UL
LTb
3805 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3805 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.5)]
] -46.7 MCshow
0.500 UL
LTb
4442 448 M
0 63 V
0 4109 R
0 -63 V
stroke
4442 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.6)]
] -46.7 MCshow
0.500 UL
LTb
5079 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5079 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.7)]
] -46.7 MCshow
0.500 UL
LTb
5716 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5716 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.8)]
] -46.7 MCshow
0.500 UL
LTb
6353 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6353 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.9)]
] -46.7 MCshow
0.500 UL
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1)]
] -46.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
938 4620 N
938 448 L
6052 0 V
0 4172 V
-6052 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Ocupacion promedio del servidor\(%\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3964 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Probablidad de pasar el test de la ST)]
] -46.7 MCshow
LTb
3964 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Ocupacion promedio del servidor ER3 en funcion de la probabilidad de pasar el test de la ST)]
] -46.7 MCshow
1.000 UP
0.500 UL
LTb
0.500 UL
LT0
938 3437 M
319 -184 V
318 1352 V
1894 2551 L
318 94 V
2531 1588 L
318 1867 V
319 -883 V
318 -241 V
319 -449 V
318 -679 V
319 47 V
318 2054 V
5079 915 L
318 794 V
5716 448 L
318 0 V
319 0 V
318 0 V
319 0 V
stroke
LTb
938 4620 N
938 448 L
6052 0 V
0 4172 V
-6052 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 183 x Fi(Figure)30 b(15:)43 b(Ocupaci\023)-42
b(on)29 b(promedio)h(de)h(la)f(Estaci\023)-42 b(on)30
b(de)h(Reparaci\023)-42 b(on)29 b(3)h(en)h(funci\023)-42
b(on)31 b(de)440 4267 y(la)c(probabilidad)g(de)g(pasar)g(el)g(test)h
(del)g(Sector)f(de)g(T)-7 b(esteo.)1831 5662 y(16)p eop
end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
